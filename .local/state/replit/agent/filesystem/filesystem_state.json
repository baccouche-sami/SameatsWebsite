{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# SAMEATS - Restaurant Online Ordering Solution\n\n## Overview\n\nSAMEATS is a modern, bilingual (French/English) restaurant ordering platform that provides a complete solution for restaurants to establish their online presence. The application features a responsive showcase website built with React, TypeScript, and Tailwind CSS, offering restaurant owners a comprehensive ordering system including website, mobile apps, and back-office management tools. The platform targets independent restaurants, restaurant groups, franchises, and dark kitchens with subscription-based pricing starting at €69/month and a €500 setup fee.\n\nThe website has been completely redesigned as an ultra-professional, mobile-first showcase following UpMenu's structure and messaging but branded as SAMEATS. Features include advanced Three.js 3D elements with progressive enhancement, comprehensive client testimonials with visual badges, enhanced pricing section, and dual contact/quote forms with RGPD compliance. The site now positions SAMEATS as a complete restaurant digitization solution without revealing the white label relationship with UpMenu.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## Recent Changes\n\n**August 15, 2025 - Major Cleanup & Consistency Update:**\n- ✅ Removed 20+ unused component files and legacy UI components\n- ✅ Cleaned up all unused imports and redundant code\n- ✅ Standardized design system across all pages using modern-* components\n- ✅ Enhanced Features page with comprehensive integrations (100+ services)\n- ✅ Created dedicated Clients page with professional gallery and testimonials\n- ✅ Optimized CSS with unified color variables and consistent styling\n- ✅ Ensured all pages use ModernNavigation and ModernFooter for consistency\n- ✅ Consolidated animation and gradient classes for better performance\n- ✅ Completely redesigned Contact page with modern UI, multiple contact methods, and comprehensive quote form\n- ✅ Implemented 100% responsive design optimization across Mobile/Tablet/Desktop breakpoints\n- ✅ Added touch-friendly navigation with enhanced mobile menu and tablet compatibility  \n- ✅ Optimized all components with responsive typography, spacing, and touch targets\n- ✅ Enhanced CSS with comprehensive responsive utilities and mobile performance optimizations\n- ✅ Configured Brevo email system with functional contact forms, quote requests, and newsletter\n- ✅ Optimized Brevo integration by removing SDK dependency, using direct API REST calls\n- ✅ Reduced package size by 47 dependencies while maintaining full email functionality\n- ✅ Updated all statistics to realistic values: 15+ restaurants, 3 countries, 50K+ orders\n- ✅ Updated client information with real websites: t9-restaurant.fr, sidibou-lemans.fr, campusfoodcourt.fr, firstpizza60.fr, patroneforno.fr, worldfood-75.fr\n- ✅ Corrected all client locations to accurate French cities: Vitry-sur-Seine, Le Mans, Champs-sur-Marne, Noyon, Viry-Châtillon, Paris\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript in a Single Page Application (SPA) architecture\n- **Routing**: Wouter for lightweight client-side routing\n- **Styling**: Tailwind CSS with custom design system featuring dark theme and orange-to-yellow gradient branding\n- **UI Components**: Radix UI primitives with shadcn/ui component library for consistent, accessible interface elements\n- **State Management**: TanStack React Query for server state management and data fetching\n- **Internationalization**: Custom language provider supporting French and English with dynamic content switching\n- **Visual Effects**: Three.js integration for floating particles, geometric shapes, and interactive hero background\n- **Branding**: Professional SAMEATS logo with circular design and pixelated elements (logo-blanc_1755211740901.png)\n- **Design Philosophy**: Mobile-first responsive design with performance optimizations for all devices\n- **Content Strategy**: Completely restructured following UpMenu's approach but branded as SAMEATS white label\n- **3D Implementation**: Three.js hero section with orbiting service elements and fallback for mobile/reduced motion\n- **Client Showcase**: Interactive carousel with testimonials, badges, and sectoral positioning for trust building\n- **Professional Forms**: Dual-tab contact/quote system with RGPD compliance and comprehensive restaurant profiling\n- **Performance**: Mobile-first responsive design with progressive enhancement and accessibility compliance\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js server framework\n- **Language**: TypeScript with ESM module system\n- **API Design**: RESTful API endpoints with JSON communication\n- **Request Handling**: Express middleware for JSON parsing, URL encoding, and request logging\n- **Error Management**: Centralized error handling with structured error responses\n- **Development Setup**: Vite development server with hot module replacement (HMR) and React plugin integration\n\n### Data Storage Solutions\n- **Database**: PostgreSQL configured via Drizzle ORM with Neon Database serverless integration\n- **Schema Management**: Drizzle Kit for database migrations and schema synchronization\n- **Data Modeling**: Type-safe schema definitions with Zod validation for contacts and users\n- **Fallback Storage**: In-memory storage implementation for development and testing scenarios\n- **Session Management**: PostgreSQL session store using connect-pg-simple for user session persistence\n\n### Authentication and Authorization\n- **Architecture**: Basic user authentication system with username/password credentials\n- **Storage**: User credentials stored securely in PostgreSQL database\n- **Session Management**: Server-side session handling with database-backed session store\n- **Security**: Prepared for future implementation of more robust authentication mechanisms\n\n## External Dependencies\n\n### Core Frameworks and Libraries\n- **React Ecosystem**: React 18.x, React DOM, TanStack React Query for state management\n- **Build Tools**: Vite for development server and build tooling, esbuild for production bundling\n- **TypeScript**: Full TypeScript support with strict type checking enabled\n\n### UI and Design System\n- **Component Library**: Radix UI primitives (@radix-ui/*) for accessible, unstyled components\n- **Styling Framework**: Tailwind CSS with PostCSS and autoprefixer for CSS processing\n- **Typography**: Google Fonts integration (Poppins, Inter) for modern typography\n- **Icons**: Font Awesome 6.4.0 for comprehensive icon library\n\n### Database and Data Management\n- **Database**: PostgreSQL via Neon Database serverless platform (@neondatabase/serverless)\n- **ORM**: Drizzle ORM for type-safe database operations and migrations\n- **Validation**: Zod for runtime type validation and schema definition\n- **Session Store**: connect-pg-simple for PostgreSQL-backed session management\n\n### Development and Deployment\n- **Development Tools**: tsx for TypeScript execution, @replit/vite-plugin-runtime-error-modal for error handling\n- **Form Handling**: React Hook Form with Hookform Resolvers for form validation\n- **Date Utilities**: date-fns for date manipulation and formatting\n- **Utility Libraries**: clsx and class-variance-authority for conditional styling, nanoid for unique ID generation\n\n### Third-Party Services\n- **Database Hosting**: Neon Database for serverless PostgreSQL hosting\n- **Development Platform**: Replit integration with specialized plugins and development tools\n- **Font Delivery**: Google Fonts CDN for web font loading\n- **Icon Library**: Font Awesome CDN for icon delivery","size_bytes":7668},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n          50: \"var(--primary-50)\",\n          500: \"var(--primary-500)\",\n          600: \"var(--primary-600)\",\n          700: \"var(--primary-700)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n          500: \"var(--secondary-500)\",\n          600: \"var(--secondary-600)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        dark: {\n          800: \"var(--dark-800)\",\n          700: \"var(--dark-700)\",\n          600: \"var(--dark-600)\",\n          500: \"var(--dark-500)\",\n        },\n      },\n      fontFamily: {\n        poppins: ['Poppins', 'sans-serif'],\n        inter: ['Inter', 'sans-serif'],\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      backgroundImage: {\n        'primary-gradient': 'linear-gradient(135deg, #FF6A00 0%, #FFC700 100%)',\n        'dark-gradient': 'linear-gradient(135deg, #0F0F23 0%, #1A1A2E 100%)',\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        blob: {\n          '0%, 100%': { \n            transform: 'translate(0, 0) scale(1)' \n          },\n          '25%': { \n            transform: 'translate(20px, -50px) scale(1.1)' \n          },\n          '50%': { \n            transform: 'translate(-20px, 20px) scale(0.9)' \n          },\n          '75%': { \n            transform: 'translate(50px, 10px) scale(1.05)' \n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        blob: \"blob 20s infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3425},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { z } from \"zod\";\nimport { storage } from \"./storage\";\nimport { sendEmail, getContactEmailTemplate, getQuoteEmailTemplate, getNewsletterEmailTemplate } from \"./email\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission endpoint\n  app.post(\"/api/form\", async (req, res) => {\n    try {\n      const contactSchema = z.object({\n        name: z.string().min(1, \"Name is required\"),\n        email: z.string().email(\"Valid email is required\"),\n        message: z.string().min(1, \"Message is required\"),\n        type: z.enum([\"contact\", \"quote\"]).default(\"contact\"),\n        phone: z.string().optional(),\n        company: z.string().optional(),\n        subject: z.string().optional(),\n        // Champs du formulaire de devis\n        restaurantName: z.string().optional(),\n        restaurantType: z.string().optional(),\n        address: z.string().optional(),\n        website: z.string().optional(),\n        country: z.string().optional(),\n        locations: z.string().optional(),\n        ordersPerMonth: z.string().optional(),\n        needsDelivery: z.union([z.boolean(), z.string()]).optional(),\n        needsApp: z.union([z.boolean(), z.string()]).optional(),\n        currentSolution: z.string().optional(),\n        budget: z.string().optional(),\n        urgency: z.string().optional(),\n        services: z.string().optional(),\n        timeline: z.string().optional(),\n        rgpdConsent: z.boolean().optional(),\n      });\n\n      const validatedData = contactSchema.parse(req.body);\n      \n      // Log pour debug\n      console.log('Données reçues:', JSON.stringify(validatedData, null, 2));\n      \n      const contact = await storage.createContact(validatedData);\n      \n      // Envoyer l'email selon le type de formulaire\n      let emailSent = false;\n      try {\n        if (validatedData.type === \"quote\") {\n          const emailData = getQuoteEmailTemplate(validatedData);\n          emailSent = await sendEmail(emailData);\n        } else {\n          const emailData = getContactEmailTemplate(validatedData);\n          emailSent = await sendEmail(emailData);\n        }\n      } catch (error) {\n        console.error(\"Error sending email:\", error);\n      }\n      \n      res.json({ \n        success: true, \n        message: \"Contact form submitted successfully\",\n        id: contact.id,\n        emailSent \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Validation error\",\n          errors: error.errors \n        });\n      } else {\n        console.error(\"Contact form submission error:\", error);\n        res.status(500).json({ \n          success: false, \n          message: \"Internal server error\" \n        });\n      }\n    }\n  });\n\n  // Newsletter subscription endpoint\n  app.post(\"/api/newsletter\", async (req, res) => {\n    try {\n      const newsletterSchema = z.object({\n        email: z.string().email(\"Valid email is required\")\n      });\n\n      const validatedData = newsletterSchema.parse(req.body);\n      \n      // Envoyer l'email de notification\n      let emailSent = false;\n      try {\n        const emailData = getNewsletterEmailTemplate(validatedData.email);\n        emailSent = await sendEmail(emailData);\n      } catch (error) {\n        console.error(\"Error sending newsletter email:\", error);\n      }\n      \n      res.json({ \n        success: true, \n        message: \"Newsletter subscription successful\",\n        emailSent \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Invalid email address\",\n          errors: error.errors \n        });\n      } else {\n        console.error(\"Newsletter subscription error:\", error);\n        res.status(500).json({ \n          success: false, \n          message: \"Internal server error\" \n        });\n      }\n    }\n  });\n\n  // Get all contacts (admin endpoint)\n  app.get(\"/api/contacts\", async (req, res) => {\n    try {\n      const contacts = await storage.getAllContacts();\n      res.json(contacts);\n    } catch (error) {\n      console.error(\"Error fetching contacts:\", error);\n      res.status(500).json({ \n        success: false, \n        message: \"Failed to fetch contacts\" \n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":4465},"server/storage.ts":{"content":"import { type User, type InsertUser, type Contact, type InsertContact } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  createContact(contact: InsertContact): Promise<Contact>;\n  getAllContacts(): Promise<Contact[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private contacts: Map<string, Contact>;\n\n  constructor() {\n    this.users = new Map();\n    this.contacts = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createContact(insertContact: InsertContact): Promise<Contact> {\n    const id = randomUUID();\n    const contact: Contact = { \n      ...insertContact,\n      id,\n      type: insertContact.type || \"contact\",\n      restaurantName: insertContact.restaurantName || null,\n      country: insertContact.country || null,\n      locations: insertContact.locations || null,\n      ordersPerMonth: insertContact.ordersPerMonth || null,\n      needsDelivery: insertContact.needsDelivery || null,\n      needsMobileApps: insertContact.needsMobileApps || null,\n      budget: insertContact.budget || null,\n      createdAt: new Date()\n    };\n    this.contacts.set(id, contact);\n    return contact;\n  }\n\n  async getAllContacts(): Promise<Contact[]> {\n    return Array.from(this.contacts.values());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1921},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  message: text(\"message\").notNull(),\n  type: text(\"type\").notNull().default(\"contact\"), // \"contact\" or \"quote\"\n  restaurantName: text(\"restaurant_name\"),\n  country: text(\"country\"),\n  locations: text(\"locations\"),\n  ordersPerMonth: text(\"orders_per_month\"),\n  needsDelivery: text(\"needs_delivery\"),\n  needsMobileApps: text(\"needs_mobile_apps\"),\n  budget: text(\"budget\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).pick({\n  name: true,\n  email: true,\n  message: true,\n  type: true,\n  restaurantName: true,\n  country: true,\n  locations: true,\n  ordersPerMonth: true,\n  needsDelivery: true,\n  needsMobileApps: true,\n  budget: true,\n});\n\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type Contact = typeof contacts.$inferSelect;\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":1604},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { LanguageProvider } from \"@/components/language-provider\";\nimport Home from \"@/pages/home\";\nimport { FeaturesPage } from \"@/pages/features\";\nimport { ClientsPage } from \"@/pages/clients\";\nimport Pricing from \"@/pages/pricing\";\nimport About from \"@/pages/about\";\nimport Contact from \"@/pages/contact\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/features\" component={FeaturesPage} />\n      <Route path=\"/clients\" component={ClientsPage} />\n      <Route path=\"/pricing\" component={Pricing} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <LanguageProvider>\n          <Toaster />\n          <Router />\n        </LanguageProvider>\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1300},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* SAMEATS Modern Brand Colors */\n  --background: #0F0F0F;\n  --surface: #1A1A1A;\n  --surface-light: #252525;\n  --surface-lighter: #2F2F2F;\n  \n  /* SAMEATS gradient orange-to-yellow brand */\n  --primary: #FF6A00;\n  --primary-light: #FF8A5B;\n  --primary-dark: #E55A2B;\n  --accent: #FFC700;\n  --accent-light: #FFE066;\n  \n  /* Modern typography colors */\n  --text-primary: #FFFFFF;\n  --text-secondary: #B0B0B0;\n  --text-muted: #6B7280;\n  \n  /* UI elements */\n  --border: #333333;\n  --border-light: #444444;\n  --success: #10B981;\n  --warning: #F59E0B;\n  --error: #EF4444;\n  \n  /* Gradients */\n  --gradient-primary: linear-gradient(135deg, #FF6A00 0%, #FFC700 100%);\n  --gradient-surface: linear-gradient(135deg, #1A1A1A 0%, #252525 100%);\n  --gradient-hero: linear-gradient(135deg, #0F0F0F 0%, #1A1A1A 50%, #252525 100%);\n  \n  /* Shadows and effects */\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\n  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n  --shadow-glow: 0 0 20px rgba(255, 106, 0, 0.15);\n  \n  /* Compatibility */\n  --foreground: #FFFFFF;\n  --card: #1A1A1A;\n  --card-foreground: #FFFFFF;\n  --popover: #1A1A1A;\n  --popover-foreground: #FFFFFF;\n  --primary-foreground: #FFFFFF;\n  --secondary: #FFC700;\n  --secondary-foreground: #0F0F0F;\n  --muted: #252525;\n  --muted-foreground: #B0B0B0;\n  --accent-foreground: #FFFFFF;\n  --destructive: #EF4444;\n  --destructive-foreground: #FFFFFF;\n  --input: #252525;\n  --ring: #FF6A00;\n  --radius: 0.75rem;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  \n  body {\n    @apply bg-background text-foreground font-inter antialiased;\n    overflow-x: hidden;\n  }\n  \n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n@layer components {\n  /* Modern card design */\n  .modern-card {\n    @apply bg-[var(--surface)] border border-[var(--border)] rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300;\n    background: linear-gradient(145deg, var(--surface), var(--surface-light));\n    border: 1px solid var(--border);\n  }\n  \n  .modern-card:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 0 20px rgba(255, 106, 0, 0.1);\n  }\n  \n  /* Glass effect */\n  .glass-card {\n    background: rgba(255, 255, 255, 0.03);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.08);\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  }\n  \n  /* Modern gradient text */\n  .gradient-text-modern {\n    background: linear-gradient(135deg, #FF6A00 0%, #FFC700 50%, #FF8A5B 100%);\n    background-size: 200% 200%;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    animation: gradientShift 4s ease-in-out infinite;\n  }\n  \n  /* Legacy gradient text */\n  .gradient-text {\n    background: linear-gradient(135deg, #FF6A00 0%, #FFC700 50%, #FF6A00 100%);\n    background-size: 200% 200%;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    animation: gradientShift 3s ease-in-out infinite;\n  }\n  \n  /* Hover effects */\n  .hover-lift {\n    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  }\n  \n  .hover-lift:hover {\n    transform: translateY(-8px) scale(1.02);\n    box-shadow: 0 25px 50px rgba(255, 106, 0, 0.25);\n  }\n  \n  /* Modern buttons */\n  .btn-primary {\n    @apply bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white font-semibold px-8 py-4 rounded-xl;\n    position: relative;\n    overflow: hidden;\n    transition: all 0.3s ease;\n  }\n  \n  .btn-primary::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.5s;\n  }\n  \n  .btn-primary:hover::before {\n    left: 100%;\n  }\n  \n  .btn-primary:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 10px 25px rgba(255, 106, 0, 0.3);\n  }\n  \n  /* Background patterns */\n  .dot-pattern {\n    background-image: radial-gradient(circle, rgba(255, 106, 0, 0.1) 1px, transparent 1px);\n    background-size: 20px 20px;\n  }\n  \n  .line-pattern {\n    background-image: linear-gradient(45deg, rgba(255, 106, 0, 0.05) 25%, transparent 25%), \n                      linear-gradient(-45deg, rgba(255, 106, 0, 0.05) 25%, transparent 25%);\n    background-size: 30px 30px;\n  }\n  \n  .grid-pattern {\n    background-image: \n      linear-gradient(rgba(255, 106, 0, 0.1) 1px, transparent 1px),\n      linear-gradient(90deg, rgba(255, 106, 0, 0.1) 1px, transparent 1px);\n    background-size: 40px 40px;\n  }\n  \n  /* Floating animation */\n  .floating-element {\n    animation: float 6s ease-in-out infinite;\n  }\n  \n  /* Animations */\n  .animate-fade-in-up {\n    animation: fadeInUp 0.8s ease-out forwards;\n  }\n  \n  .animate-slide-in-up {\n    animation: slideInUp 0.6s ease-out forwards;\n  }\n  \n  .animate-bounce-gentle {\n    animation: bounceGentle 2s ease-in-out infinite;\n  }\n}\n\n@layer utilities {\n  /* Font families */\n  .font-poppins {\n    font-family: 'Poppins', sans-serif;\n  }\n  \n  .font-inter {\n    font-family: 'Inter', sans-serif;\n  }\n  \n  /* Text utilities */\n  .text-shadow {\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  }\n  \n  .text-shadow-glow {\n    text-shadow: 0 0 20px rgba(255, 106, 0, 0.5);\n  }\n  \n  /* Keyframes */\n  @keyframes gradientShift {\n    0%, 100% { \n      background-position: 0% 50%; \n    }\n    50% { \n      background-position: 100% 50%; \n    }\n  }\n  \n  @keyframes float {\n    0%, 100% { \n      transform: translateY(0px); \n    }\n    50% { \n      transform: translateY(-20px); \n    }\n  }\n  \n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @keyframes slideInUp {\n    from {\n      opacity: 0;\n      transform: translateY(50px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @keyframes bounceGentle {\n    0%, 100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-10px);\n    }\n  }\n  \n  @keyframes blob {\n    0%, 100% { \n      transform: translate(0, 0) scale(1) rotate(0deg); \n    }\n    25% { \n      transform: translate(20px, -50px) scale(1.1) rotate(90deg); \n    }\n    50% { \n      transform: translate(-20px, 20px) scale(0.9) rotate(180deg); \n    }\n    75% { \n      transform: translate(50px, 10px) scale(1.05) rotate(270deg); \n    }\n  }\n  \n  @keyframes pulse-glow {\n    0%, 100% {\n      box-shadow: 0 0 20px rgba(255, 106, 0, 0.3);\n    }\n    50% {\n      box-shadow: 0 0 30px rgba(255, 106, 0, 0.6);\n    }\n  }\n  \n  /* UX Enhancements */\n  .smooth-transition {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  \n  .hover-lift {\n    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;\n  }\n  \n  .hover-lift:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n  }\n  \n  .focus-ring {\n    @apply focus:outline-none focus:ring-2 focus:ring-orange-500/50 focus:border-orange-500;\n  }\n  \n  .loading-shimmer {\n    background: linear-gradient(90deg, transparent 0%, rgba(255, 255, 255, 0.1) 50%, transparent 100%);\n    background-size: 200% 100%;\n    animation: shimmer 1.5s infinite;\n  }\n  \n  @keyframes shimmer {\n    0% { background-position: -200% 0; }\n    100% { background-position: 200% 0; }\n  }\n  \n  .bounce-in {\n    animation: bounceIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n  }\n  \n  @keyframes bounceIn {\n    0% {\n      opacity: 0;\n      transform: scale(0.3);\n    }\n    50% {\n      opacity: 1;\n      transform: scale(1.05);\n    }\n    70% {\n      transform: scale(0.9);\n    }\n    100% {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n  \n  .slide-up {\n    animation: slideUp 0.4s ease-out;\n  }\n  \n  @keyframes slideUp {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  /* Enhanced Interactive Elements */\n  .interactive-button {\n    @apply relative overflow-hidden;\n    background: linear-gradient(135deg, #FF6A00 0%, #FFC700 100%);\n    transition: all 0.3s ease;\n  }\n  \n  .interactive-button::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.5s;\n  }\n  \n  .interactive-button:hover::before {\n    left: 100%;\n  }\n  \n  /* Progressive Loading States */\n  .skeleton {\n    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n    background-size: 200% 100%;\n    animation: loading 1.5s infinite;\n  }\n  \n  @keyframes loading {\n    0% { background-position: 200% 0; }\n    100% { background-position: -200% 0; }\n  }\n  \n  /* Mobile-First Responsive Design */\n  @media (max-width: 639px) {\n    .mobile-padding {\n      @apply px-3;\n    }\n    \n    .mobile-text-center {\n      @apply text-center;\n    }\n    \n    .mobile-text-sm {\n      @apply text-sm;\n    }\n    \n    .mobile-grid-1 {\n      @apply grid-cols-1;\n    }\n    \n    .mobile-py-8 {\n      @apply py-8;\n    }\n    \n    .mobile-py-12 {\n      @apply py-12;\n    }\n    \n    .mobile-py-16 {\n      @apply py-16;\n    }\n    \n    .mobile-px-4 {\n      @apply px-4;\n    }\n    \n    .mobile-mb-6 {\n      @apply mb-6;\n    }\n    \n    .mobile-mb-8 {\n      @apply mb-8;\n    }\n    \n    .mobile-mb-12 {\n      @apply mb-12;\n    }\n    \n    .mobile-space-y-6 > * + * {\n      margin-top: 1.5rem;\n    }\n    \n    .mobile-space-y-8 > * + * {\n      margin-top: 2rem;\n    }\n    \n    .mobile-hidden {\n      @apply hidden;\n    }\n    \n    .mobile-block {\n      @apply block;\n    }\n    \n    .mobile-flex {\n      @apply flex;\n    }\n    \n    .mobile-w-full {\n      @apply w-full;\n    }\n  }\n\n  /* Tablet - Medium devices (tablets, 640px and up) */\n  @media (min-width: 640px) and (max-width: 1023px) {\n    .tablet-text-base {\n      @apply text-base;\n    }\n    \n    .tablet-text-lg {\n      @apply text-lg;\n    }\n    \n    .tablet-text-xl {\n      @apply text-xl;\n    }\n    \n    .tablet-text-2xl {\n      @apply text-2xl;\n    }\n    \n    .tablet-text-3xl {\n      @apply text-3xl;\n    }\n    \n    .tablet-text-4xl {\n      @apply text-4xl;\n    }\n    \n    .tablet-text-5xl {\n      @apply text-5xl;\n    }\n    \n    .tablet-grid-2 {\n      @apply grid-cols-2;\n    }\n    \n    .tablet-gap-6 {\n      @apply gap-6;\n    }\n    \n    .tablet-gap-8 {\n      @apply gap-8;\n    }\n    \n    .tablet-py-12 {\n      @apply py-12;\n    }\n    \n    .tablet-py-16 {\n      @apply py-16;\n    }\n    \n    .tablet-py-20 {\n      @apply py-20;\n    }\n    \n    .tablet-px-6 {\n      @apply px-6;\n    }\n    \n    .tablet-px-8 {\n      @apply px-8;\n    }\n    \n    .tablet-mb-8 {\n      @apply mb-8;\n    }\n    \n    .tablet-mb-12 {\n      @apply mb-12;\n    }\n    \n    .tablet-mb-16 {\n      @apply mb-16;\n    }\n    \n    .tablet-space-y-8 > * + * {\n      margin-top: 2rem;\n    }\n    \n    .tablet-space-y-12 > * + * {\n      margin-top: 3rem;\n    }\n  }\n\n  /* Desktop - Large devices (desktops, 1024px and up) */\n  @media (min-width: 1024px) {\n    .desktop-text-lg {\n      @apply text-lg;\n    }\n    \n    .desktop-text-xl {\n      @apply text-xl;\n    }\n    \n    .desktop-text-2xl {\n      @apply text-2xl;\n    }\n    \n    .desktop-text-3xl {\n      @apply text-3xl;\n    }\n    \n    .desktop-text-4xl {\n      @apply text-4xl;\n    }\n    \n    .desktop-text-5xl {\n      @apply text-5xl;\n    }\n    \n    .desktop-text-6xl {\n      @apply text-6xl;\n    }\n    \n    .desktop-text-7xl {\n      @apply text-7xl;\n    }\n    \n    .desktop-grid-3 {\n      @apply grid-cols-3;\n    }\n    \n    .desktop-grid-4 {\n      @apply grid-cols-4;\n    }\n    \n    .desktop-gap-8 {\n      @apply gap-8;\n    }\n    \n    .desktop-gap-12 {\n      @apply gap-12;\n    }\n    \n    .desktop-py-16 {\n      @apply py-16;\n    }\n    \n    .desktop-py-20 {\n      @apply py-20;\n    }\n    \n    .desktop-py-24 {\n      @apply py-24;\n    }\n    \n    .desktop-px-8 {\n      @apply px-8;\n    }\n    \n    .desktop-px-12 {\n      @apply px-12;\n    }\n    \n    .desktop-mb-12 {\n      @apply mb-12;\n    }\n    \n    .desktop-mb-16 {\n      @apply mb-16;\n    }\n    \n    .desktop-mb-20 {\n      @apply mb-20;\n    }\n    \n    .desktop-space-y-12 > * + * {\n      margin-top: 3rem;\n    }\n    \n    .desktop-space-y-16 > * + * {\n      margin-top: 4rem;\n    }\n  }\n\n  /* Ultra-wide screens (1536px and up) */\n  @media (min-width: 1536px) {\n    .xl-text-8xl {\n      @apply text-8xl;\n    }\n    \n    .xl-text-9xl {\n      @apply text-9xl;\n    }\n    \n    .xl-py-32 {\n      @apply py-32;\n    }\n    \n    .xl-px-16 {\n      @apply px-16;\n    }\n    \n    .xl-gap-16 {\n      @apply gap-16;\n    }\n  }\n\n  /* Touch-friendly sizing for mobile */\n  @media (max-width: 768px) {\n    .touch-target {\n      min-height: 44px;\n      min-width: 44px;\n    }\n    \n    .btn-touch {\n      @apply py-4 px-6 min-h-[44px];\n    }\n    \n    .nav-touch {\n      @apply py-3 px-4 min-h-[44px];\n    }\n  }\n  \n  /* Performance optimizations for mobile */\n  @media (max-width: 640px) {\n    .mobile-optimized {\n      will-change: auto;\n      backface-visibility: hidden;\n    }\n    \n    .mobile-text-optimize {\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n  }\n\n  /* Responsive container utilities */\n  .container-responsive {\n    @apply mx-auto px-4;\n  }\n  \n  @media (min-width: 640px) {\n    .container-responsive {\n      @apply px-6;\n    }\n  }\n  \n  @media (min-width: 1024px) {\n    .container-responsive {\n      @apply px-8;\n    }\n  }\n  \n  @media (min-width: 1280px) {\n    .container-responsive {\n      @apply px-12;\n    }\n  }\n\n  /* Mobile-specific animations */\n  @media (max-width: 768px) {\n    .mobile-no-hover:hover {\n      transform: none;\n    }\n    \n    .mobile-reduced-animation {\n      animation-duration: 0.5s;\n    }\n  }\n  \n  /* Accessibility */\n  @media (prefers-reduced-motion: reduce) {\n    .animate-fade-in-up,\n    .animate-slide-in-up,\n    .animate-bounce-gentle,\n    .floating-element,\n    .gradient-text,\n    .gradient-text-modern {\n      animation: none;\n    }\n    \n    .hover-lift:hover {\n      transform: none;\n    }\n  }\n  \n  /* Focus states */\n  .focus-ring {\n    @apply focus:outline-none focus:ring-2 focus:ring-[var(--primary)] focus:ring-offset-2 focus:ring-offset-[var(--background)];\n  }\n}","size_bytes":14505},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/clients-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\nimport clientT9 from \"@assets/Poste 1_1755206844217.jpg\";\nimport clientCampus from \"@assets/Poste 2_1755206844219.jpg\";\nimport clientFirstPizza from \"@assets/Poste 3_1755206844220.jpg\";\nimport clientPatrone from \"@assets/Poste 4_1755206844220.jpg\";\nimport clientRestSidi from \"@assets/Poste 5_1755206844221.jpg\";\n\nexport function ClientsSection() {\n  const { t } = useLanguage();\n\n  const clients = [\n    { \n      name: \"T9 Foodies & Grill\", \n      type: t(\"Restaurant\", \"Restaurant\"), \n      image: clientT9,\n      description: t(\"fait confiance à notre plateforme\", \"trusts our platform\"),\n      location: \"Paris\"\n    },\n    { \n      name: \"Campus Food Court\", \n      type: t(\"Food Court\", \"Food Court\"), \n      image: clientCampus,\n      description: t(\"fait confiance à notre plateforme\", \"trusts our platform\"),\n      location: \"Lyon\"\n    },\n    { \n      name: \"First Pizza\", \n      type: t(\"Pizzeria\", \"Pizzeria\"), \n      image: clientFirstPizza,\n      description: t(\"fait confiance à notre plateforme\", \"trusts our platform\"),\n      location: \"Marseille\"\n    },\n    { \n      name: \"Patroné Forno\", \n      type: t(\"Pizzeria\", \"Pizzeria\"), \n      image: clientPatrone,\n      description: t(\"fait confiance à notre plateforme\", \"trusts our platform\"),\n      location: \"Nice\"\n    },\n    { \n      name: \"Rest Sidi Bou Said\", \n      type: t(\"Restaurant\", \"Restaurant\"), \n      image: clientRestSidi,\n      description: t(\"fait confiance à notre plateforme\", \"trusts our platform\"),\n      location: \"Toulouse\"\n    },\n  ];\n\n  const stats = [\n    { value: \"500+\", label: t(\"Restaurants partenaires\", \"Partner restaurants\") },\n    { value: \"50M+\", label: t(\"Commandes traitées\", \"Orders processed\") },\n    { value: \"15+\", label: t(\"Pays desservis\", \"Countries served\") },\n    { value: \"99.9%\", label: t(\"Disponibilité\", \"Uptime\") },\n  ];\n\n  return (\n    <section id=\"clients\" className=\"py-16 md:py-20 bg-dark-800\">\n      <div className=\"container mx-auto px-4 md:px-6\">\n        <div className=\"text-center mb-12 md:mb-16\">\n          <h2 className=\"text-3xl md:text-4xl lg:text-5xl font-poppins font-bold mb-6\">\n            {t(\"Ils nous font confiance\", \"They trust us\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n            {t(\n              \"Découvrez quelques-uns des établissements qui utilisent SAMEATS\",\n              \"Discover some of the businesses using SAMEATS\"\n            )}\n          </p>\n        </div>\n        \n        {/* Client Showcase */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-6 md:gap-8 mb-20\">\n          {clients.map((client, index) => (\n            <div key={index} className=\"neo-card p-4 md:p-6 rounded-2xl hover-lift group cursor-pointer overflow-hidden relative\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/5 to-secondary-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-2xl\"></div>\n              <div className=\"relative z-10\">\n                <div className=\"w-full h-32 md:h-36 mb-4 rounded-xl overflow-hidden bg-dark-600 border border-gray-700/50\">\n                  <img \n                    src={client.image} \n                    alt={client.name}\n                    className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500\"\n                  />\n                </div>\n                \n                <div className=\"space-y-2 text-center\">\n                  <h3 className=\"font-semibold text-sm md:text-base group-hover:text-primary-300 transition-colors\">{client.name}</h3>\n                  <p className=\"text-xs text-gray-400 font-medium\">{client.type} • {client.location}</p>\n                  <p className=\"text-xs text-primary-400 leading-tight opacity-0 group-hover:opacity-100 transition-opacity duration-300\">{client.description}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        {/* Client Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          {stats.map((stat, index) => (\n            <div key={index} className=\"text-center\">\n              <div className=\"text-4xl font-bold gradient-text mb-2\">{stat.value}</div>\n              <p className=\"text-gray-300\">{stat.label}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4459},"client/src/components/clients-showcase-section.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport { useLanguage } from \"./language-provider\";\nimport clientT9 from \"@assets/Poste 1_1755206844217.jpg\";\nimport clientCampus from \"@assets/Poste 2_1755206844219.jpg\";\nimport clientFirstPizza from \"@assets/Poste 3_1755206844220.jpg\";\nimport clientPatrone from \"@assets/Poste 4_1755206844220.jpg\";\nimport clientRestSidi from \"@assets/Poste 5_1755206844221.jpg\";\n\nexport function ClientsShowcaseSection() {\n  const { t } = useLanguage();\n  const carouselRef = useRef<HTMLDivElement>(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\n\n  const clients = [\n    {\n      name: \"T9 Foodies & Grill\",\n      sector: t(\"Restaurant Gastronomique\", \"Fine Dining Restaurant\"),\n      location: \"Paris, France\",\n      image: clientT9,\n      testimonial: t(\n        \"SAMEATS a transformé notre activité. Plus de commandes, moins de stress.\",\n        \"SAMEATS transformed our business. More orders, less stress.\"\n      ),\n      badge: t(\"Client depuis 2023\", \"Client since 2023\"),\n      badgeColor: \"bg-green-500\"\n    },\n    {\n      name: \"Campus Food Court\",\n      sector: t(\"Restauration Rapide\", \"Fast Food\"),\n      location: \"Lyon, France\",\n      image: clientCampus,\n      testimonial: t(\n        \"Interface intuitive et support client exceptionnel. Recommandé !\",\n        \"Intuitive interface and exceptional customer support. Recommended!\"\n      ),\n      badge: t(\"Réseau multi-établissements\", \"Multi-location network\"),\n      badgeColor: \"bg-blue-500\"\n    },\n    {\n      name: \"First Pizza\",\n      sector: t(\"Pizzeria\", \"Pizzeria\"),\n      location: \"Marseille, France\",\n      image: clientFirstPizza,\n      testimonial: t(\n        \"Nos clients adorent commander via l'app. Les commandes ont doublé !\",\n        \"Our customers love ordering via the app. Orders have doubled!\"\n      ),\n      badge: t(\"Livraison premium\", \"Premium delivery\"),\n      badgeColor: \"bg-purple-500\"\n    },\n    {\n      name: \"Patroné Forno\",\n      sector: t(\"Cuisine Italienne\", \"Italian Cuisine\"),\n      location: \"Nice, France\",\n      image: clientPatrone,\n      testimonial: t(\n        \"Solution complète et professionnelle. Parfait pour notre croissance.\",\n        \"Complete and professional solution. Perfect for our growth.\"\n      ),\n      badge: t(\"Cuisine du monde\", \"World cuisine\"),\n      badgeColor: \"bg-orange-500\"\n    },\n    {\n      name: \"Rest Sidi Bou Said\",\n      sector: t(\"Cuisine Méditerranéenne\", \"Mediterranean Cuisine\"),\n      location: \"Toulouse, France\",\n      image: clientRestSidi,\n      testimonial: t(\n        \"Design élégant et fonctionnalités avancées. Nos clients sont ravis !\",\n        \"Elegant design and advanced features. Our customers are delighted!\"\n      ),\n      badge: t(\"Innovation culinaire\", \"Culinary innovation\"),\n      badgeColor: \"bg-teal-500\"\n    }\n  ];\n\n  // Auto-play carousel\n  useEffect(() => {\n    if (!isAutoPlaying) return;\n    \n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % clients.length);\n    }, 4000);\n\n    return () => clearInterval(interval);\n  }, [isAutoPlaying, clients.length]);\n\n  const nextSlide = () => {\n    setCurrentIndex((prev) => (prev + 1) % clients.length);\n    setIsAutoPlaying(false);\n  };\n\n  const prevSlide = () => {\n    setCurrentIndex((prev) => (prev - 1 + clients.length) % clients.length);\n    setIsAutoPlaying(false);\n  };\n\n  const goToSlide = (index: number) => {\n    setCurrentIndex(index);\n    setIsAutoPlaying(false);\n  };\n\n  return (\n    <section id=\"clients\" className=\"py-24 bg-gradient-to-b from-dark-800 to-dark-700 relative overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute top-0 left-0 w-full h-full\">\n        <div className=\"absolute top-32 left-10 w-64 h-64 bg-primary-500/3 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-32 right-10 w-48 h-48 bg-secondary-500/3 rounded-full blur-3xl\"></div>\n      </div>\n\n      <div className=\"container mx-auto px-4 md:px-6 relative z-10\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-block px-4 py-2 bg-primary-500/10 border border-primary-500/20 rounded-full text-sm font-medium text-primary-300 mb-6\">\n            {t(\"🏆 Nos Clients\", \"🏆 Our Clients\")}\n          </div>\n          <h2 className=\"text-4xl md:text-6xl font-poppins font-bold mb-6 gradient-text\">\n            {t(\"Ils nous font confiance\", \"They trust us\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-4xl mx-auto leading-relaxed\">\n            {t(\n              \"Découvrez les restaurants qui ont choisi SAMEATS pour développer leur activité\",\n              \"Discover the restaurants that chose SAMEATS to grow their business\"\n            )}\n          </p>\n        </div>\n\n        {/* Client logos grid - Mobile */}\n        <div className=\"block md:hidden mb-16\">\n          <div className=\"grid grid-cols-2 gap-6\">\n            {clients.map((client, index) => (\n              <div key={index} className=\"neo-card p-4 rounded-xl hover-lift group cursor-pointer\">\n                <div className=\"w-full h-24 rounded-lg overflow-hidden bg-dark-600 border border-gray-700/50 mb-3\">\n                  <img \n                    src={client.image} \n                    alt={client.name}\n                    className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500\"\n                  />\n                </div>\n                <h3 className=\"font-semibold text-sm text-center group-hover:text-primary-300 transition-colors\">\n                  {client.name}\n                </h3>\n                <p className=\"text-xs text-gray-400 text-center\">{client.location}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Main carousel - Desktop */}\n        <div className=\"hidden md:block relative\">\n          <div className=\"overflow-hidden rounded-3xl\">\n            <div \n              ref={carouselRef}\n              className=\"flex transition-transform duration-700 ease-in-out\"\n              style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n            >\n              {clients.map((client, index) => (\n                <div key={index} className=\"w-full flex-shrink-0 px-4\">\n                  <div className=\"neo-card p-8 md:p-12 rounded-3xl hover-lift group relative overflow-hidden\">\n                    <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/5 to-secondary-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\n                    \n                    <div className=\"relative z-10 grid grid-cols-1 lg:grid-cols-2 gap-8 items-center\">\n                      {/* Client image */}\n                      <div className=\"relative\">\n                        <div className=\"w-full h-64 lg:h-80 rounded-2xl overflow-hidden bg-dark-600 border-2 border-gray-700/50 group-hover:border-primary-500/30 transition-colors duration-500\">\n                          <img \n                            src={client.image} \n                            alt={client.name}\n                            className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-700\"\n                          />\n                        </div>\n                        \n                        {/* Badge */}\n                        <div className={`absolute top-4 left-4 ${client.badgeColor} text-white text-xs font-medium px-3 py-1 rounded-full shadow-lg`}>\n                          {client.badge}\n                        </div>\n                      </div>\n\n                      {/* Client info */}\n                      <div className=\"space-y-6\">\n                        <div>\n                          <h3 className=\"text-3xl font-poppins font-bold mb-2 group-hover:text-primary-300 transition-colors\">\n                            {client.name}\n                          </h3>\n                          <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 text-gray-400\">\n                            <span className=\"text-primary-400 font-medium\">{client.sector}</span>\n                            <span className=\"hidden sm:block\">•</span>\n                            <span className=\"flex items-center gap-1\">\n                              <i className=\"fas fa-map-marker-alt text-xs\"></i>\n                              {client.location}\n                            </span>\n                          </div>\n                        </div>\n\n                        {/* Testimonial */}\n                        <blockquote className=\"text-xl text-gray-300 leading-relaxed italic border-l-4 border-primary-500 pl-6\">\n                          \"{client.testimonial}\"\n                        </blockquote>\n\n                        {/* Rating */}\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"flex text-yellow-400\">\n                            {[...Array(5)].map((_, i) => (\n                              <i key={i} className=\"fas fa-star text-sm\"></i>\n                            ))}\n                          </div>\n                          <span className=\"text-gray-400 text-sm font-medium\">5.0</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Navigation */}\n          <div className=\"flex items-center justify-center mt-8 gap-4\">\n            <button \n              onClick={prevSlide}\n              className=\"w-12 h-12 bg-dark-600 hover:bg-primary-500 rounded-full flex items-center justify-center transition-colors group border border-gray-700 hover:border-primary-500\"\n            >\n              <i className=\"fas fa-chevron-left text-gray-300 group-hover:text-white\"></i>\n            </button>\n\n            {/* Dots */}\n            <div className=\"flex gap-2\">\n              {clients.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => goToSlide(index)}\n                  className={`w-3 h-3 rounded-full transition-all ${\n                    index === currentIndex \n                      ? 'bg-primary-500 w-8' \n                      : 'bg-gray-600 hover:bg-gray-500'\n                  }`}\n                />\n              ))}\n            </div>\n\n            <button \n              onClick={nextSlide}\n              className=\"w-12 h-12 bg-dark-600 hover:bg-primary-500 rounded-full flex items-center justify-center transition-colors group border border-gray-700 hover:border-primary-500\"\n            >\n              <i className=\"fas fa-chevron-right text-gray-300 group-hover:text-white\"></i>\n            </button>\n          </div>\n        </div>\n\n        {/* CTA */}\n        <div className=\"text-center mt-16\">\n          <button \n            className=\"btn-primary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift group\"\n            onClick={() => document.getElementById('contact')?.scrollIntoView({ behavior: 'smooth' })}\n          >\n            <span className=\"flex items-center gap-3\">\n              {t(\"Découvrir leurs histoires\", \"Discover their stories\")}\n              <i className=\"fas fa-external-link-alt group-hover:scale-110 transition-transform\"></i>\n            </span>\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":11452},"client/src/components/contact-quote-section.tsx":{"content":"import { useState } from 'react';\nimport { useLanguage } from \"./language-provider\";\n\nexport function ContactQuoteSection() {\n  const { t } = useLanguage();\n  const [activeTab, setActiveTab] = useState<'contact' | 'quote'>('contact');\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: '',\n    // Quote specific fields\n    restaurantType: '',\n    needsApp: false,\n    needsDelivery: false,\n    locations: '1',\n    currentSolution: '',\n    rgpdConsent: false\n  });\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Form submitted:', formData);\n    // Here you would typically send the form data to your backend\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-24 bg-gradient-to-b from-dark-800 to-dark-900 relative overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute top-0 left-0 w-full h-full\">\n        <div className=\"absolute top-32 right-20 w-48 h-48 bg-primary-500/3 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-32 left-20 w-40 h-40 bg-secondary-500/3 rounded-full blur-3xl\"></div>\n      </div>\n\n      <div className=\"container mx-auto px-4 md:px-6 relative z-10\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-block px-4 py-2 bg-primary-500/10 border border-primary-500/20 rounded-full text-sm font-medium text-primary-300 mb-6\">\n            {t(\"📞 Contact\", \"📞 Contact\")}\n          </div>\n          <h2 className=\"text-4xl md:text-6xl font-poppins font-bold mb-6 gradient-text\">\n            {t(\"Prêt à commencer ?\", \"Ready to get started?\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-4xl mx-auto leading-relaxed\">\n            {t(\n              \"Contactez-nous pour discuter de vos besoins ou demandez un devis personnalisé\",\n              \"Contact us to discuss your needs or request a personalized quote\"\n            )}\n          </p>\n        </div>\n\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Tab selector */}\n          <div className=\"flex justify-center mb-8\">\n            <div className=\"neo-card p-2 rounded-2xl bg-dark-700/50\">\n              <div className=\"flex\">\n                <button\n                  onClick={() => setActiveTab('contact')}\n                  className={`px-6 py-3 rounded-xl font-medium transition-all ${\n                    activeTab === 'contact'\n                      ? 'bg-primary-500 text-white shadow-lg'\n                      : 'text-gray-400 hover:text-white'\n                  }`}\n                >\n                  {t(\"Contact rapide\", \"Quick contact\")}\n                </button>\n                <button\n                  onClick={() => setActiveTab('quote')}\n                  className={`px-6 py-3 rounded-xl font-medium transition-all ${\n                    activeTab === 'quote'\n                      ? 'bg-primary-500 text-white shadow-lg'\n                      : 'text-gray-400 hover:text-white'\n                  }`}\n                >\n                  {t(\"Demande de devis\", \"Quote request\")}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Form */}\n          <div className=\"neo-card p-8 md:p-12 rounded-3xl\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {/* Common fields */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    {t(\"Nom complet\", \"Full name\")} *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    required\n                    className=\"w-full px-4 py-3 bg-dark-600 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500/20 transition-colors\"\n                    placeholder={t(\"Jean Dupont\", \"John Doe\")}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    {t(\"Email\", \"Email\")} *\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    required\n                    className=\"w-full px-4 py-3 bg-dark-600 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500/20 transition-colors\"\n                    placeholder=\"contact@restaurant.com\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    {t(\"Téléphone\", \"Phone\")}\n                  </label>\n                  <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleInputChange}\n                    className=\"w-full px-4 py-3 bg-dark-600 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500/20 transition-colors\"\n                    placeholder=\"+33 1 23 45 67 89\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    {t(\"Nom du restaurant\", \"Restaurant name\")} *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"company\"\n                    value={formData.company}\n                    onChange={handleInputChange}\n                    required\n                    className=\"w-full px-4 py-3 bg-dark-600 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500/20 transition-colors\"\n                    placeholder={t(\"Le Bon Goût\", \"Good Taste\")}\n                  />\n                </div>\n              </div>\n\n              {/* Quote specific fields */}\n              {activeTab === 'quote' && (\n                <div className=\"space-y-6 pt-6 border-t border-gray-700\">\n                  <h3 className=\"text-xl font-semibold text-primary-300 mb-4\">\n                    {t(\"Informations spécifiques\", \"Specific information\")}\n                  </h3>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        {t(\"Type de restaurant\", \"Restaurant type\")}\n                      </label>\n                      <select\n                        name=\"restaurantType\"\n                        value={formData.restaurantType}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-3 bg-dark-600 border border-gray-700 rounded-xl text-white focus:border-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500/20 transition-colors\"\n                      >\n                        <option value=\"\">{t(\"Sélectionner\", \"Select\")}</option>\n                        <option value=\"restaurant\">{t(\"Restaurant\", \"Restaurant\")}</option>\n                        <option value=\"pizzeria\">{t(\"Pizzeria\", \"Pizzeria\")}</option>\n                        <option value=\"fastfood\">{t(\"Fast Food\", \"Fast Food\")}</option>\n                        <option value=\"cafe\">{t(\"Café / Boulangerie\", \"Café / Bakery\")}</option>\n                        <option value=\"foodtruck\">{t(\"Food Truck\", \"Food Truck\")}</option>\n                        <option value=\"other\">{t(\"Autre\", \"Other\")}</option>\n                      </select>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        {t(\"Nombre d'établissements\", \"Number of locations\")}\n                      </label>\n                      <select\n                        name=\"locations\"\n                        value={formData.locations}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-3 bg-dark-600 border border-gray-700 rounded-xl text-white focus:border-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500/20 transition-colors\"\n                      >\n                        <option value=\"1\">1</option>\n                        <option value=\"2-5\">2-5</option>\n                        <option value=\"6-10\">6-10</option>\n                        <option value=\"10+\">10+</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <label className=\"flex items-center gap-3\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"needsApp\"\n                        checked={formData.needsApp}\n                        onChange={handleInputChange}\n                        className=\"w-5 h-5 bg-dark-600 border border-gray-700 rounded text-primary-500 focus:ring-primary-500 focus:ring-2\"\n                      />\n                      <span className=\"text-gray-300\">\n                        {t(\"J'ai besoin d'applications mobiles (iOS/Android)\", \"I need mobile apps (iOS/Android)\")}\n                      </span>\n                    </label>\n\n                    <label className=\"flex items-center gap-3\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"needsDelivery\"\n                        checked={formData.needsDelivery}\n                        onChange={handleInputChange}\n                        className=\"w-5 h-5 bg-dark-600 border border-gray-700 rounded text-primary-500 focus:ring-primary-500 focus:ring-2\"\n                      />\n                      <span className=\"text-gray-300\">\n                        {t(\"J'ai besoin de gestion de livraison\", \"I need delivery management\")}\n                      </span>\n                    </label>\n                  </div>\n                </div>\n              )}\n\n              {/* Message */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  {t(\"Message\", \"Message\")} *\n                </label>\n                <textarea\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleInputChange}\n                  required\n                  rows={6}\n                  className=\"w-full px-4 py-3 bg-dark-600 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500/20 transition-colors resize-none\"\n                  placeholder={t(\n                    \"Décrivez vos besoins et nous vous recontacterons rapidement...\",\n                    \"Describe your needs and we will contact you quickly...\"\n                  )}\n                />\n              </div>\n\n              {/* RGPD Consent */}\n              <label className=\"flex items-start gap-3\">\n                <input\n                  type=\"checkbox\"\n                  name=\"rgpdConsent\"\n                  checked={formData.rgpdConsent}\n                  onChange={handleInputChange}\n                  required\n                  className=\"w-5 h-5 bg-dark-600 border border-gray-700 rounded text-primary-500 focus:ring-primary-500 focus:ring-2 mt-1\"\n                />\n                <span className=\"text-sm text-gray-300 leading-relaxed\">\n                  {t(\n                    \"J'accepte que mes données personnelles soient utilisées pour me recontacter dans le cadre de ma demande. Conformément au RGPD, vous pouvez exercer vos droits d'accès, de rectification et de suppression.\",\n                    \"I accept that my personal data be used to contact me regarding my request. In accordance with GDPR, you can exercise your rights of access, rectification and deletion.\"\n                  )}\n                </span>\n              </label>\n\n              {/* Submit button */}\n              <div className=\"text-center pt-6\">\n                <button\n                  type=\"submit\"\n                  className=\"btn-primary text-lg px-12 py-4 rounded-2xl font-semibold hover-lift group\"\n                >\n                  <span className=\"flex items-center gap-3\">\n                    <i className=\"fas fa-paper-plane\"></i>\n                    {activeTab === 'contact' \n                      ? t(\"Envoyer le message\", \"Send message\")\n                      : t(\"Demander un devis\", \"Request quote\")\n                    }\n                    <i className=\"fas fa-arrow-right group-hover:translate-x-1 transition-transform\"></i>\n                  </span>\n                </button>\n              </div>\n            </form>\n          </div>\n\n          {/* Contact info */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-12\">\n            <div className=\"neo-card p-6 rounded-2xl text-center hover-lift\">\n              <div className=\"w-12 h-12 bg-primary-gradient rounded-xl flex items-center justify-center mx-auto mb-4\">\n                <i className=\"fas fa-envelope text-white\"></i>\n              </div>\n              <h3 className=\"font-semibold mb-2\">{t(\"Email\", \"Email\")}</h3>\n              <p className=\"text-gray-400\">contact@sameats.com</p>\n            </div>\n\n            <div className=\"neo-card p-6 rounded-2xl text-center hover-lift\">\n              <div className=\"w-12 h-12 bg-primary-gradient rounded-xl flex items-center justify-center mx-auto mb-4\">\n                <i className=\"fas fa-phone text-white\"></i>\n              </div>\n              <h3 className=\"font-semibold mb-2\">{t(\"Téléphone\", \"Phone\")}</h3>\n              <p className=\"text-gray-400\">+33 1 23 45 67 89</p>\n            </div>\n\n            <div className=\"neo-card p-6 rounded-2xl text-center hover-lift\">\n              <div className=\"w-12 h-12 bg-primary-gradient rounded-xl flex items-center justify-center mx-auto mb-4\">\n                <i className=\"fas fa-clock text-white\"></i>\n              </div>\n              <h3 className=\"font-semibold mb-2\">{t(\"Horaires\", \"Hours\")}</h3>\n              <p className=\"text-gray-400\">{t(\"Lun-Ven 9h-18h\", \"Mon-Fri 9am-6pm\")}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":15039},"client/src/components/contact-section.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useLanguage } from \"./language-provider\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\n\nexport function ContactSection() {\n  const { t } = useLanguage();\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState<'contact' | 'quote'>('contact');\n\n  // Contact form schema\n  const contactSchema = z.object({\n    name: z.string().min(1, t(\"Le nom est requis\", \"Name is required\")),\n    email: z.string().email(t(\"Email valide requis\", \"Valid email is required\")),\n    message: z.string().min(1, t(\"Le message est requis\", \"Message is required\")),\n    consent: z.boolean().refine((val) => val === true, {\n      message: t(\"Vous devez accepter les conditions\", \"You must accept the terms\"),\n    }),\n  });\n\n  // Quote form schema\n  const quoteSchema = z.object({\n    restaurantName: z.string().min(1, t(\"Le nom du restaurant est requis\", \"Restaurant name is required\")),\n    country: z.string().min(1, t(\"Le pays est requis\", \"Country is required\")),\n    locations: z.string().min(1, t(\"Le nombre d'établissements est requis\", \"Number of locations is required\")),\n    ordersPerMonth: z.string().min(1, t(\"L'estimation des commandes est requise\", \"Orders estimate is required\")),\n    needsDelivery: z.string().min(1, t(\"La livraison souhaitée est requise\", \"Delivery preference is required\")),\n    needsMobileApps: z.string().min(1, t(\"Les apps mobiles souhaitées sont requises\", \"Mobile apps preference is required\")),\n    budget: z.string().min(1, t(\"Le budget est requis\", \"Budget is required\")),\n    message: z.string().optional(),\n    consent: z.boolean().refine((val) => val === true, {\n      message: t(\"Vous devez accepter les conditions\", \"You must accept the terms\"),\n    }),\n  });\n\n  const contactForm = useForm({\n    resolver: zodResolver(contactSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      consent: false,\n    },\n  });\n\n  const quoteForm = useForm({\n    resolver: zodResolver(quoteSchema),\n    defaultValues: {\n      restaurantName: \"\",\n      country: \"\",\n      locations: \"\",\n      ordersPerMonth: \"\",\n      needsDelivery: \"\",\n      needsMobileApps: \"\",\n      budget: \"\",\n      message: \"\",\n      consent: false,\n    },\n  });\n\n  const submitMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return await apiRequest(\"POST\", \"/api/form\", data);\n    },\n    onSuccess: () => {\n      toast({\n        title: t(\"Succès\", \"Success\"),\n        description: activeTab === 'contact' \n          ? t(\"Votre message a été envoyé avec succès\", \"Your message has been sent successfully\")\n          : t(\"Votre demande de devis a été envoyée avec succès\", \"Your quote request has been sent successfully\"),\n      });\n      if (activeTab === 'contact') {\n        contactForm.reset();\n      } else {\n        quoteForm.reset();\n      }\n    },\n    onError: (error: any) => {\n      toast({\n        title: t(\"Erreur\", \"Error\"),\n        description: t(\"Une erreur est survenue\", \"An error occurred\"),\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onContactSubmit = (data: any) => {\n    submitMutation.mutate({ ...data, type: \"contact\" });\n  };\n\n  const onQuoteSubmit = (data: any) => {\n    submitMutation.mutate({ \n      name: data.restaurantName,\n      email: \"\", // Will be added to quote form if needed\n      message: data.message || \"\",\n      type: \"quote\",\n      restaurantName: data.restaurantName,\n      country: data.country,\n      locations: data.locations,\n      ordersPerMonth: data.ordersPerMonth,\n      needsDelivery: data.needsDelivery,\n      needsMobileApps: data.needsMobileApps,\n      budget: data.budget,\n    });\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-20 bg-dark-800\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-poppins font-bold mb-6\">\n            {t(\"Contactez-nous\", \"Contact Us\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n            {t(\n              \"Prêt à transformer votre restaurant ? Parlons de votre projet\",\n              \"Ready to transform your restaurant? Let's talk about your project\"\n            )}\n          </p>\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto\">\n          {/* Tab Navigation */}\n          <div className=\"flex justify-center mb-8\">\n            <div className=\"bg-dark-600 p-1 rounded-xl\">\n              <button\n                onClick={() => setActiveTab('contact')}\n                className={`px-6 py-3 rounded-lg font-medium transition-colors ${\n                  activeTab === 'contact'\n                    ? 'bg-primary-gradient text-white'\n                    : 'text-gray-400 hover:text-white'\n                }`}\n              >\n                {t(\"Contact rapide\", \"Quick Contact\")}\n              </button>\n              <button\n                onClick={() => setActiveTab('quote')}\n                className={`px-6 py-3 rounded-lg font-medium transition-colors ${\n                  activeTab === 'quote'\n                    ? 'bg-primary-gradient text-white'\n                    : 'text-gray-400 hover:text-white'\n                }`}\n              >\n                {t(\"Demande de devis\", \"Quote Request\")}\n              </button>\n            </div>\n          </div>\n          \n          {/* Contact Form */}\n          {activeTab === 'contact' && (\n            <div className=\"glass-card p-8 rounded-xl\">\n              <Form {...contactForm}>\n                <form onSubmit={contactForm.handleSubmit(onContactSubmit)} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={contactForm.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t(\"Nom\", \"Name\")}</FormLabel>\n                          <FormControl>\n                            <Input \n                              {...field} \n                              className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={contactForm.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Email</FormLabel>\n                          <FormControl>\n                            <Input \n                              {...field} \n                              type=\"email\"\n                              className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  <FormField\n                    control={contactForm.control}\n                    name=\"message\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Message</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            {...field} \n                            rows={5}\n                            className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={contactForm.control}\n                    name=\"consent\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                        <FormControl>\n                          <Checkbox\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                          />\n                        </FormControl>\n                        <div className=\"space-y-1 leading-none\">\n                          <FormLabel className=\"text-sm text-gray-300\">\n                            {t(\n                              \"J'accepte que mes données soient utilisées pour me recontacter dans le cadre de ma demande (conforme RGPD)\",\n                              \"I agree that my data may be used to contact me regarding my request (GDPR compliant)\"\n                            )}\n                          </FormLabel>\n                          <FormMessage />\n                        </div>\n                      </FormItem>\n                    )}\n                  />\n                  <Button \n                    type=\"submit\" \n                    disabled={submitMutation.isPending}\n                    className=\"w-full bg-primary-gradient py-3 rounded-lg font-semibold hover-lift\"\n                  >\n                    {submitMutation.isPending \n                      ? t(\"Envoi en cours...\", \"Sending...\")\n                      : t(\"Envoyer le message\", \"Send Message\")\n                    }\n                  </Button>\n                </form>\n              </Form>\n            </div>\n          )}\n          \n          {/* Quote Form */}\n          {activeTab === 'quote' && (\n            <div className=\"glass-card p-8 rounded-xl\">\n              <Form {...quoteForm}>\n                <form onSubmit={quoteForm.handleSubmit(onQuoteSubmit)} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={quoteForm.control}\n                      name=\"restaurantName\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t(\"Nom du restaurant\", \"Restaurant name\")}</FormLabel>\n                          <FormControl>\n                            <Input \n                              {...field}\n                              className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={quoteForm.control}\n                      name=\"country\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t(\"Pays\", \"Country\")}</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\">\n                                <SelectValue placeholder={t(\"Sélectionner...\", \"Select...\")} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"FR\">France</SelectItem>\n                              <SelectItem value=\"BE\">Belgique</SelectItem>\n                              <SelectItem value=\"CH\">Suisse</SelectItem>\n                              <SelectItem value=\"Other\">{t(\"Autre\", \"Other\")}</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  {/* Add more form fields for quote */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={quoteForm.control}\n                      name=\"locations\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t(\"Nombre d'établissements\", \"Number of locations\")}</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\">\n                                <SelectValue placeholder={t(\"Sélectionner...\", \"Select...\")} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"1\">1</SelectItem>\n                              <SelectItem value=\"2-3\">2-3</SelectItem>\n                              <SelectItem value=\"4-10\">4-10</SelectItem>\n                              <SelectItem value=\"10+\">10+</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={quoteForm.control}\n                      name=\"ordersPerMonth\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t(\"Commandes/mois (estimation)\", \"Orders/month (estimate)\")}</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\">\n                                <SelectValue placeholder={t(\"Sélectionner...\", \"Select...\")} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"<100\">&lt;100</SelectItem>\n                              <SelectItem value=\"100-500\">100-500</SelectItem>\n                              <SelectItem value=\"500-1000\">500-1000</SelectItem>\n                              <SelectItem value=\"1000+\">1000+</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={quoteForm.control}\n                      name=\"needsDelivery\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t(\"Livraison souhaitée\", \"Delivery needed\")}</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\">\n                                <SelectValue placeholder={t(\"Sélectionner...\", \"Select...\")} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"yes\">{t(\"Oui\", \"Yes\")}</SelectItem>\n                              <SelectItem value=\"no\">{t(\"Non\", \"No\")}</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={quoteForm.control}\n                      name=\"needsMobileApps\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t(\"Apps mobiles souhaitées\", \"Mobile apps needed\")}</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\">\n                                <SelectValue placeholder={t(\"Sélectionner...\", \"Select...\")} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"yes\">{t(\"Oui\", \"Yes\")}</SelectItem>\n                              <SelectItem value=\"no\">{t(\"Non\", \"No\")}</SelectItem>\n                              <SelectItem value=\"maybe\">{t(\"Peut-être\", \"Maybe\")}</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  <FormField\n                    control={quoteForm.control}\n                    name=\"budget\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t(\"Budget mensuel envisagé\", \"Expected monthly budget\")}</FormLabel>\n                        <Select onValueChange={field.onChange} defaultValue={field.value}>\n                          <FormControl>\n                            <SelectTrigger className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\">\n                              <SelectValue placeholder={t(\"Sélectionner...\", \"Select...\")} />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"<100€\">&lt;100€</SelectItem>\n                            <SelectItem value=\"100-200€\">100-200€</SelectItem>\n                            <SelectItem value=\"200-500€\">200-500€</SelectItem>\n                            <SelectItem value=\"500€+\">500€+</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={quoteForm.control}\n                    name=\"message\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t(\"Message / Besoins spécifiques\", \"Message / Specific needs\")}</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            {...field}\n                            rows={4}\n                            className=\"w-full bg-dark-600 border border-gray-600 rounded-lg px-4 py-3 focus:border-primary-500 focus:outline-none\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={quoteForm.control}\n                    name=\"consent\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                        <FormControl>\n                          <Checkbox\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                          />\n                        </FormControl>\n                        <div className=\"space-y-1 leading-none\">\n                          <FormLabel className=\"text-sm text-gray-300\">\n                            {t(\n                              \"J'accepte que mes données soient utilisées pour me recontacter dans le cadre de ma demande de devis (conforme RGPD)\",\n                              \"I agree that my data may be used to contact me regarding my quote request (GDPR compliant)\"\n                            )}\n                          </FormLabel>\n                          <FormMessage />\n                        </div>\n                      </FormItem>\n                    )}\n                  />\n                  <Button \n                    type=\"submit\" \n                    disabled={submitMutation.isPending}\n                    className=\"w-full bg-primary-gradient py-3 rounded-lg font-semibold hover-lift\"\n                  >\n                    {submitMutation.isPending \n                      ? t(\"Envoi en cours...\", \"Sending...\")\n                      : t(\"Demander un devis\", \"Request Quote\")\n                    }\n                  </Button>\n                </form>\n              </Form>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":22057},"client/src/components/core-features-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\n\nexport function CoreFeaturesSection() {\n  const { t } = useLanguage();\n\n  const sellOnlineFeatures = [\n    {\n      title: t(\"Système de commande gratuit\", \"Free ordering system\"),\n      description: t(\"Lancez votre système de commande en ligne\", \"Launch your online ordering system\")\n    },\n    {\n      title: t(\"Menu temps réel\", \"Real-time menu\"),\n      description: t(\"Modifiez votre menu instantanément\", \"Update your menu instantly\")\n    },\n    {\n      title: t(\"Solutions mobiles\", \"Mobile solutions\"),\n      description: t(\"Applications natives iOS et Android\", \"Native iOS and Android apps\")\n    }\n  ];\n\n  const gainCustomersFeatures = [\n    {\n      title: t(\"Marketing Tools\", \"Marketing Tools\"),\n      description: t(\"Outils intégrés pour promouvoir votre restaurant\", \"Built-in tools to promote your restaurant\")\n    },\n    {\n      title: t(\"Loyalty Program\", \"Loyalty Program\"),\n      description: t(\"Fidélisez vos clients avec des récompenses\", \"Retain customers with rewards\")\n    },\n    {\n      title: t(\"SEO Setup\", \"SEO Setup\"),\n      description: t(\"Optimisation pour les moteurs de recherche\", \"Search engine optimization\")\n    }\n  ];\n\n  const moreFeatures = [\n    {\n      title: t(\"Livraisons\", \"Delivery Management\"),\n      description: t(\"Gérez vos livraisons efficacement\", \"Manage deliveries efficiently\"),\n      icon: \"fas fa-truck\"\n    },\n    {\n      title: t(\"Paiements\", \"Payment Processing\"),\n      description: t(\"Intégration sécurisée des paiements\", \"Secure payment integration\"),\n      icon: \"fas fa-credit-card\"\n    },\n    {\n      title: t(\"Analytics\", \"Analytics & Reporting\"),\n      description: t(\"Analysez vos performances\", \"Analyze your performance\"),\n      icon: \"fas fa-chart-line\"\n    },\n    {\n      title: t(\"Support Client\", \"Customer Support\"),\n      description: t(\"Support technique disponible 7j/7\", \"Technical support available 24/7\"),\n      icon: \"fas fa-headset\"\n    },\n    {\n      title: t(\"Intégrations\", \"Third-party Integrations\"),\n      description: t(\"Connectez vos outils favoris\", \"Connect your favorite tools\"),\n      icon: \"fas fa-plug\"\n    },\n    {\n      title: t(\"Multi-langues\", \"Multi-language Support\"),\n      description: t(\"Servez vos clients dans leur langue\", \"Serve customers in their language\"),\n      icon: \"fas fa-globe\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 bg-gradient-to-b from-dark-700 to-dark-800 relative overflow-hidden\">\n      <div className=\"container mx-auto px-4 md:px-6\">\n        {/* Sell Food Online Section */}\n        <div className=\"mb-24\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold mb-6 gradient-text\">\n              {t(\"Vendre en ligne\", \"Sell Food Online\")}\n            </h2>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\n            {sellOnlineFeatures.map((feature, index) => (\n              <div key={index} className=\"neo-card p-6 rounded-2xl text-center hover-lift group\">\n                <h3 className=\"text-xl font-semibold mb-3 group-hover:text-primary-300 transition-colors\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-300\">\n                  {feature.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Gain More Customers Section */}\n        <div className=\"mb-24\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold mb-6 gradient-text\">\n              {t(\"Gagnez plus de clients\", \"Gain More Customers\")}\n            </h2>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\n            {gainCustomersFeatures.map((feature, index) => (\n              <div key={index} className=\"neo-card p-6 rounded-2xl text-center hover-lift group\">\n                <h3 className=\"text-xl font-semibold mb-3 group-hover:text-primary-300 transition-colors\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-300\">\n                  {feature.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* More Features Section */}\n        <div>\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold mb-6 gradient-text\">\n              {t(\"Plus de fonctionnalités\", \"More Features\")}\n            </h2>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {moreFeatures.map((feature, index) => (\n              <div key={index} className=\"neo-card p-6 rounded-2xl hover-lift group\">\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 bg-primary-gradient rounded-xl flex items-center justify-center flex-shrink-0 group-hover:scale-110 transition-transform duration-300\">\n                    <i className={`${feature.icon} text-white`}></i>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2 group-hover:text-primary-300 transition-colors\">\n                      {feature.title}\n                    </h3>\n                    <p className=\"text-gray-300 text-sm\">\n                      {feature.description}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* CTA Section */}\n        <div className=\"text-center mt-20\">\n          <div className=\"neo-card p-12 rounded-3xl bg-gradient-to-r from-primary-500/10 to-secondary-500/10 border border-primary-500/20\">\n            <h3 className=\"text-3xl md:text-4xl font-poppins font-bold mb-6 gradient-text\">\n              {t(\"Prêt à faire le prochain pas\", \"Ready to take the next step\")}\n            </h3>\n            <p className=\"text-xl text-gray-300 mb-8 max-w-2xl mx-auto\">\n              {t(\n                \"pour votre activité de restaurant ?\",\n                \"for your restaurant business?\"\n              )}\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <button className=\"btn-primary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift\">\n                {t(\"Essai gratuit\", \"Start free trial\")}\n              </button>\n              <button className=\"btn-secondary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift\">\n                {t(\"Nous contacter\", \"Contact us\")}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":6771},"client/src/components/demo-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\n\nexport function DemoSection() {\n  const { t } = useLanguage();\n\n  const scrollToContact = () => {\n    const element = document.getElementById('contact');\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const features = [\n    { icon: \"fas fa-video\", text: t(\"Démo en direct\", \"Live demo\") },\n    { icon: \"fas fa-clock\", text: t(\"30 minutes\", \"30 minutes\") },\n    { icon: \"fas fa-user-tie\", text: t(\"Expert dédié\", \"Dedicated expert\") },\n    { icon: \"fas fa-gift\", text: t(\"Sans engagement\", \"No commitment\") },\n  ];\n\n  return (\n    <section id=\"demo\" className=\"py-20 bg-dark-700\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-4xl md:text-5xl font-poppins font-bold mb-6\">\n            {t(\"Réservez votre démo personnalisée\", \"Book your personalized demo\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 mb-8\">\n            {t(\n              \"Découvrez comment SAMEATS peut transformer votre restaurant en 30 minutes\",\n              \"Discover how SAMEATS can transform your restaurant in 30 minutes\"\n            )}\n          </p>\n          \n          <div className=\"glass-card p-8 rounded-xl max-w-2xl mx-auto\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n              {features.map((feature, index) => (\n                <div key={index} className=\"flex items-center space-x-3\">\n                  <i className={`${feature.icon} text-primary-500 text-xl`}></i>\n                  <span>{feature.text}</span>\n                </div>\n              ))}\n            </div>\n            \n            <button \n              onClick={scrollToContact}\n              className=\"bg-primary-gradient px-8 py-4 rounded-xl font-semibold text-lg hover-lift\"\n            >\n              {t(\"Réserver ma démo gratuite\", \"Book my free demo\")}\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2043},"client/src/components/enhanced-hero-3d.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport { useLanguage } from \"./language-provider\";\nimport logoImage from \"@assets/logo-blanc_1755211740901.png\";\n\nexport function EnhancedHero3D() {\n  const { t } = useLanguage();\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [is3DSupported, setIs3DSupported] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    // Check for reduced motion preference\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setPrefersReducedMotion(mediaQuery.matches);\n\n    // Check for WebGL support and device performance\n    const canvas = document.createElement('canvas');\n    const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    const isDesktop = window.innerWidth > 1024;\n    const hasGoodPerformance = navigator.hardwareConcurrency >= 4;\n    \n    setIs3DSupported(!!gl && isDesktop && hasGoodPerformance);\n\n    // Intersection Observer for lazy loading\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (containerRef.current) {\n      observer.observe(containerRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    // Only load Three.js after component is visible and conditions are met\n    if (!isVisible || !is3DSupported || prefersReducedMotion || !canvasRef.current) return;\n\n    let animationId: number;\n    let renderer: any;\n\n    // Lazy load Three.js\n    import('three').then(({ Scene, PerspectiveCamera, WebGLRenderer, SphereGeometry, MeshBasicMaterial, Mesh, Group, Vector3, Clock }) => {\n      if (!canvasRef.current) return;\n\n      const scene = new Scene();\n      const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      renderer = new WebGLRenderer({ \n        canvas: canvasRef.current, \n        alpha: true, \n        antialias: false, // Disable for better performance\n        powerPreference: \"low-power\"\n      });\n\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n      // Create service elements group\n      const group = new Group();\n      const clock = new Clock();\n      \n      // Service elements with optimized geometry\n      const services = [\n        { color: '#FF6A00', position: new Vector3(3, 0, 0), name: 'Website' },\n        { color: '#FFC700', position: new Vector3(-1.5, 2.6, 0), name: 'App' },\n        { color: '#FF8C42', position: new Vector3(-1.5, -2.6, 0), name: 'BackOffice' }\n      ];\n\n      const meshes: any[] = [];\n      \n      services.forEach((service, index) => {\n        const geometry = new SphereGeometry(0.4, 16, 12); // Reduced segments for performance\n        const material = new MeshBasicMaterial({ \n          color: service.color,\n          transparent: true,\n          opacity: 0.8\n        });\n        const mesh = new Mesh(geometry, material);\n        \n        mesh.position.copy(service.position);\n        group.add(mesh);\n        meshes.push({ mesh, originalPosition: service.position.clone(), service });\n      });\n\n      scene.add(group);\n      camera.position.z = 6;\n\n      // Optimized animation loop\n      const animate = () => {\n        animationId = requestAnimationFrame(animate);\n\n        const elapsed = clock.getElapsedTime();\n        \n        // Slow rotation of the entire group\n        group.rotation.y = elapsed * 0.1;\n        group.rotation.x = Math.sin(elapsed * 0.05) * 0.1;\n\n        // Individual orbit animations\n        meshes.forEach(({ mesh, originalPosition }, index) => {\n          const speed = 0.3 + index * 0.1;\n          const radius = 3;\n          \n          mesh.position.x = Math.cos(elapsed * speed) * radius;\n          mesh.position.y = Math.sin(elapsed * speed) * radius;\n          mesh.position.z = Math.sin(elapsed * speed * 2) * 0.5;\n          \n          // Subtle scale animation\n          mesh.scale.setScalar(1 + Math.sin(elapsed * 2 + index) * 0.1);\n        });\n\n        renderer.render(scene, camera);\n      };\n\n      animate();\n\n      // Handle resize\n      const handleResize = () => {\n        if (!renderer) return;\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n      };\n\n      window.addEventListener('resize', handleResize);\n\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        if (animationId) cancelAnimationFrame(animationId);\n        if (renderer) {\n          renderer.dispose();\n          renderer = null;\n        }\n      };\n    }).catch(() => {\n      setIs3DSupported(false);\n    });\n  }, [isVisible, is3DSupported, prefersReducedMotion]);\n\n  return (\n    <section \n      ref={containerRef}\n      className=\"relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-dark-900 via-dark-800 to-dark-700\"\n    >\n      {/* Progressive 3D Canvas */}\n      {is3DSupported && !prefersReducedMotion && isVisible && (\n        <canvas \n          ref={canvasRef}\n          className=\"absolute inset-0 w-full h-full opacity-40 pointer-events-none\"\n          style={{ filter: 'blur(0.5px)' }}\n        />\n      )}\n\n      {/* Enhanced fallback with CSS animations */}\n      {(!is3DSupported || prefersReducedMotion) && (\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <div className=\"absolute top-1/4 left-1/4 w-32 h-32 bg-primary-500/20 rounded-full blur-3xl animate-float\"></div>\n          <div className=\"absolute bottom-1/3 right-1/4 w-40 h-40 bg-secondary-500/20 rounded-full blur-3xl animate-float-delayed\"></div>\n          <div className=\"absolute top-1/2 right-1/3 w-24 h-24 bg-primary-400/20 rounded-full blur-3xl animate-float-slow\"></div>\n          \n          {/* Orbiting elements fallback */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"relative w-64 h-64\">\n              <div className=\"absolute inset-0 border border-primary-500/20 rounded-full animate-spin-slow\"></div>\n              <div className=\"absolute top-0 left-1/2 w-4 h-4 bg-primary-500 rounded-full transform -translate-x-1/2 -translate-y-2 animate-pulse\"></div>\n              <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-secondary-500 rounded-full animate-pulse delay-700\"></div>\n              <div className=\"absolute left-0 top-1/2 w-5 h-5 bg-primary-400 rounded-full transform -translate-y-1/2 -translate-x-2 animate-pulse delay-1000\"></div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Content */}\n      <div className=\"container mx-auto px-4 md:px-6 relative z-10 text-center\">\n        {/* Logo with enhanced animations */}\n        <div className=\"mb-8 md:mb-12\">\n          <div className=\"relative inline-block\">\n            <img \n              src={logoImage} \n              alt=\"SAMEATS\"\n              className=\"h-20 md:h-28 w-auto mx-auto drop-shadow-2xl animate-fadeInScale hover:scale-110 transition-transform duration-500\"\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-r from-primary-500/20 to-secondary-500/20 rounded-full blur-2xl animate-pulse\"></div>\n          </div>\n        </div>\n\n        {/* Enhanced main heading */}\n        <h1 className=\"text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-poppins font-bold mb-8 leading-tight\">\n          <span className=\"block mb-4 animate-slideInUp\">\n            <span className=\"text-white\">{t(\"Votre solution complète\", \"Your complete solution\")}</span>\n          </span>\n          <span className=\"gradient-text block animate-slideInUp delay-200\">\n            {t(\"de commande en ligne\", \"for online ordering\")}\n          </span>\n        </h1>\n\n        {/* Enhanced value proposition */}\n        <div className=\"mb-8 animate-slideInUp delay-300\">\n          <p className=\"text-xl md:text-2xl text-transparent bg-clip-text bg-gradient-to-r from-green-400 to-emerald-300 font-semibold mb-4\">\n            {t(\"Sans commission — vous gardez vos marges\", \"No commission — you keep your margins\")}\n          </p>\n          <p className=\"text-lg md:text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed\">\n            {t(\n              \"Site web + Apps + Back-office complet pour digitaliser votre restaurant\",\n              \"Website + Apps + Complete back-office to digitize your restaurant\"\n            )}\n          </p>\n        </div>\n\n        {/* Enhanced CTAs */}\n        <div className=\"flex flex-col sm:flex-row gap-6 justify-center mb-16 animate-slideInUp delay-400\">\n          <button className=\"group relative btn-primary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift overflow-hidden\">\n            <span className=\"relative z-10 flex items-center gap-3\">\n              <i className=\"fas fa-rocket\"></i>\n              {t(\"Démarrer à 500 €\", \"Start at €500\")}\n              <i className=\"fas fa-arrow-right group-hover:translate-x-1 transition-transform\"></i>\n            </span>\n            <div className=\"absolute inset-0 bg-gradient-to-r from-primary-600 to-primary-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n          </button>\n          \n          <button className=\"group btn-secondary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift\">\n            <span className=\"flex items-center gap-3\">\n              <i className=\"fas fa-play\"></i>\n              {t(\"Demander une démo\", \"Request a demo\")}\n              <i className=\"fas fa-external-link-alt group-hover:scale-110 transition-transform\"></i>\n            </span>\n          </button>\n        </div>\n\n        {/* Enhanced benefits banner */}\n        <div className=\"animate-fadeInScale delay-500\">\n          <div className=\"inline-flex flex-wrap items-center justify-center gap-4 md:gap-6 bg-dark-600/50 backdrop-blur-xl border border-gray-700/50 rounded-2xl p-6 md:p-8 hover:border-primary-500/30 transition-colors duration-500\">\n            <div className=\"flex items-center gap-3 text-green-400\">\n              <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n              <span className=\"font-medium\">{t(\"Installation 500 €\", \"€500 setup\")}</span>\n            </div>\n            <div className=\"hidden sm:block w-px h-6 bg-gray-600\"></div>\n            <div className=\"flex items-center gap-3 text-primary-400\">\n              <div className=\"w-2 h-2 bg-primary-400 rounded-full animate-pulse delay-200\"></div>\n              <span className=\"font-medium\">{t(\"1 mois gratuit\", \"1 month free\")}</span>\n            </div>\n            <div className=\"hidden sm:block w-px h-6 bg-gray-600\"></div>\n            <div className=\"flex items-center gap-3 text-secondary-400\">\n              <div className=\"w-2 h-2 bg-secondary-400 rounded-full animate-pulse delay-400\"></div>\n              <span className=\"font-medium\">{t(\"0% commission\", \"0% commission\")}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Enhanced scroll indicator */}\n        <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce-slow\">\n          <div className=\"flex flex-col items-center gap-2\">\n            <div className=\"w-6 h-10 border-2 border-gray-400 rounded-full flex justify-center\">\n              <div className=\"w-1 h-3 bg-gray-400 rounded-full mt-2 animate-scroll-indicator\"></div>\n            </div>\n            <span className=\"text-xs text-gray-500 font-medium\">{t(\"Défiler\", \"Scroll\")}</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":11849},"client/src/components/enhanced-pricing-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\n\nexport function EnhancedPricingSection() {\n  const { t } = useLanguage();\n\n  const plans = [\n    {\n      name: \"Start\",\n      price: \"69\",\n      description: t(\"Parfait pour débuter\", \"Perfect to get started\"),\n      features: [\n        t(\"Site web de commande\", \"Ordering website\"),\n        t(\"Applications mobiles\", \"Mobile apps\"),\n        t(\"Back-office de base\", \"Basic back-office\"),\n        t(\"Paiements sécurisés\", \"Secure payments\"),\n        t(\"Support email\", \"Email support\")\n      ],\n      highlight: false,\n      ctaText: t(\"Commencer\", \"Get started\")\n    },\n    {\n      name: \"Grow\",\n      price: \"119\",\n      description: t(\"Idéal pour développer\", \"Ideal for growth\"),\n      features: [\n        t(\"Tout de Start\", \"Everything in Start\"),\n        t(\"Programmes de fidélité\", \"Loyalty programs\"),\n        t(\"Marketing automatisé\", \"Automated marketing\"),\n        t(\"Analytics avancées\", \"Advanced analytics\"),\n        t(\"Support prioritaire\", \"Priority support\"),\n        t(\"Intégrations tierces\", \"Third-party integrations\")\n      ],\n      highlight: true,\n      ctaText: t(\"Le plus populaire\", \"Most popular\")\n    },\n    {\n      name: \"Pro\",\n      price: \"199\",\n      description: t(\"Pour les restaurants établis\", \"For established restaurants\"),\n      features: [\n        t(\"Tout de Grow\", \"Everything in Grow\"),\n        t(\"Multi-établissements\", \"Multi-location\"),\n        t(\"API personnalisée\", \"Custom API\"),\n        t(\"Formation dédiée\", \"Dedicated training\"),\n        t(\"Support téléphonique\", \"Phone support\"),\n        t(\"Rapports personnalisés\", \"Custom reports\")\n      ],\n      highlight: false,\n      ctaText: t(\"Choisir Pro\", \"Choose Pro\")\n    },\n    {\n      name: \"Enterprise\",\n      price: t(\"Sur devis\", \"Custom\"),\n      description: t(\"Solution sur mesure\", \"Tailored solution\"),\n      features: [\n        t(\"Tout de Pro\", \"Everything in Pro\"),\n        t(\"Développement sur mesure\", \"Custom development\"),\n        t(\"Intégration complète\", \"Full integration\"),\n        t(\"Account manager dédié\", \"Dedicated account manager\"),\n        t(\"SLA garanti\", \"Guaranteed SLA\"),\n        t(\"Formation équipe complète\", \"Full team training\")\n      ],\n      highlight: false,\n      ctaText: t(\"Nous contacter\", \"Contact us\")\n    }\n  ];\n\n  const scrollToContact = () => {\n    document.getElementById('contact')?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <section id=\"pricing\" className=\"py-24 bg-gradient-to-b from-dark-700 to-dark-800 relative overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute top-0 left-0 w-full h-full\">\n        <div className=\"absolute top-20 right-10 w-40 h-40 bg-primary-500/5 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-20 left-10 w-32 h-32 bg-secondary-500/5 rounded-full blur-3xl\"></div>\n      </div>\n\n      <div className=\"container mx-auto px-4 md:px-6 relative z-10\">\n        {/* Header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-block px-4 py-2 bg-primary-500/10 border border-primary-500/20 rounded-full text-sm font-medium text-primary-300 mb-6\">\n            {t(\"💰 Tarifs Transparents\", \"💰 Transparent Pricing\")}\n          </div>\n          <h2 className=\"text-4xl md:text-6xl font-poppins font-bold mb-6 gradient-text\">\n            {t(\"Choisissez votre plan\", \"Choose your plan\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-4xl mx-auto leading-relaxed mb-8\">\n            {t(\n              \"Des tarifs clairs et transparents adaptés à votre taille d'entreprise\",\n              \"Clear and transparent pricing adapted to your business size\"\n            )}\n          </p>\n\n          {/* Pricing banner */}\n          <div className=\"inline-flex flex-wrap items-center justify-center gap-4 md:gap-6 bg-gradient-to-r from-green-500/10 to-primary-500/10 border border-green-500/20 rounded-2xl p-6 md:p-8 mb-12\">\n            <div className=\"flex items-center gap-2 text-green-400\">\n              <i className=\"fas fa-check-circle\"></i>\n              <span className=\"font-medium\">{t(\"Installation 500 €\", \"€500 setup\")}</span>\n            </div>\n            <div className=\"hidden sm:block w-px h-6 bg-gray-600\"></div>\n            <div className=\"flex items-center gap-2 text-primary-400\">\n              <i className=\"fas fa-gift\"></i>\n              <span className=\"font-medium\">{t(\"1 mois gratuit\", \"1 month free\")}</span>\n            </div>\n            <div className=\"hidden sm:block w-px h-6 bg-gray-600\"></div>\n            <div className=\"flex items-center gap-2 text-secondary-400\">\n              <i className=\"fas fa-handshake\"></i>\n              <span className=\"font-medium\">{t(\"Sans engagement\", \"No commitment\")}</span>\n            </div>\n            <div className=\"hidden sm:block w-px h-6 bg-gray-600\"></div>\n            <div className=\"flex items-center gap-2 text-yellow-400\">\n              <i className=\"fas fa-percentage\"></i>\n              <span className=\"font-medium\">{t(\"-15% en annuel\", \"-15% yearly\")}</span>\n            </div>\n            <div className=\"hidden sm:block w-px h-6 bg-gray-600\"></div>\n            <div className=\"flex items-center gap-2 text-green-300\">\n              <i className=\"fas fa-star\"></i>\n              <span className=\"font-medium\">{t(\"0% commission SAMEATS\", \"0% SAMEATS commission\")}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Pricing cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16\">\n          {plans.map((plan, index) => (\n            <div \n              key={index}\n              className={`relative neo-card p-8 rounded-3xl hover-lift group ${\n                plan.highlight \n                  ? 'border-2 border-primary-500 bg-gradient-to-b from-primary-500/10 to-primary-600/5' \n                  : ''\n              }`}\n            >\n              {plan.highlight && (\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                  <div className=\"bg-primary-500 text-white text-sm font-bold px-4 py-2 rounded-full shadow-lg\">\n                    {t(\"RECOMMANDÉ\", \"RECOMMENDED\")}\n                  </div>\n                </div>\n              )}\n\n              <div className=\"text-center mb-8\">\n                <h3 className=\"text-2xl font-poppins font-bold mb-2 group-hover:text-primary-300 transition-colors\">\n                  {plan.name}\n                </h3>\n                <p className=\"text-gray-400 text-sm mb-6\">{plan.description}</p>\n                \n                <div className=\"mb-6\">\n                  <span className=\"text-4xl md:text-5xl font-bold gradient-text\">\n                    {typeof plan.price === 'string' && plan.price.includes('devis') || plan.price.includes('Custom') \n                      ? plan.price \n                      : `€${plan.price}`\n                    }\n                  </span>\n                  {!plan.price.includes('devis') && !plan.price.includes('Custom') && (\n                    <span className=\"text-gray-400 text-sm\">/{t(\"mois\", \"month\")}</span>\n                  )}\n                </div>\n\n                <button \n                  onClick={scrollToContact}\n                  className={`w-full py-3 px-6 rounded-xl font-semibold transition-all hover-lift ${\n                    plan.highlight\n                      ? 'btn-primary'\n                      : 'bg-dark-600 text-white hover:bg-primary-500 border border-gray-700 hover:border-primary-500'\n                  }`}\n                >\n                  {plan.ctaText}\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                {plan.features.map((feature, featureIndex) => (\n                  <div key={featureIndex} className=\"flex items-start gap-3\">\n                    <i className=\"fas fa-check text-green-400 text-sm mt-1 flex-shrink-0\"></i>\n                    <span className=\"text-gray-300 text-sm leading-relaxed\">{feature}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* FAQ Preview */}\n        <div className=\"text-center\">\n          <div className=\"neo-card p-8 rounded-2xl bg-gradient-to-r from-dark-600/50 to-dark-700/50 border border-gray-700/50\">\n            <h3 className=\"text-2xl font-poppins font-bold mb-4 gradient-text\">\n              {t(\"Des questions ?\", \"Questions?\")}\n            </h3>\n            <p className=\"text-gray-300 mb-6 max-w-2xl mx-auto\">\n              {t(\n                \"Notre équipe est là pour vous accompagner dans le choix de la solution qui correspond à vos besoins.\",\n                \"Our team is here to help you choose the solution that fits your needs.\"\n              )}\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <button \n                onClick={scrollToContact}\n                className=\"btn-primary px-6 py-3 rounded-xl font-medium hover-lift\"\n              >\n                {t(\"Parler à un expert\", \"Talk to an expert\")}\n              </button>\n              <button \n                onClick={() => document.getElementById('demo')?.scrollIntoView({ behavior: 'smooth' })}\n                className=\"btn-secondary px-6 py-3 rounded-xl font-medium hover-lift\"\n              >\n                {t(\"Voir une démo\", \"See a demo\")}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":9561},"client/src/components/features-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\n\nexport function FeaturesSection() {\n  const { t } = useLanguage();\n\n  const features = [\n    {\n      icon: \"fas fa-shopping-cart\",\n      title: t(\"Commande en Ligne\", \"Online Ordering\"),\n      description: t(\n        \"Système de commande directe sans commission. Vos clients commandent depuis votre site.\",\n        \"Direct ordering system without commission. Customers order from your website.\"\n      )\n    },\n    {\n      icon: \"fas fa-mobile-alt\",\n      title: t(\"App Mobile Personnalisée\", \"Branded Mobile App\"),\n      description: t(\n        \"Application iOS et Android avec votre marque. Notifications push pour fidéliser vos clients.\",\n        \"iOS and Android app with your branding. Push notifications to retain customers.\"\n      )\n    },\n    {\n      icon: \"fas fa-palette\",\n      title: t(\"Site Web sur Mesure\", \"Custom Website\"),\n      description: t(\n        \"Plus de 40 thèmes disponibles. Personnalisation complète sans codage.\",\n        \"Over 40 themes available. Complete customization without coding.\"\n      )\n    },\n    {\n      icon: \"fas fa-truck\",\n      title: t(\"Gestion Livraisons\", \"Delivery Management\"),\n      description: t(\n        \"Intégration avec des flottes tierces. Gestion simplifiée depuis une seule app.\",\n        \"Integration with third-party fleets. Simplified management from a single app.\"\n      )\n    },\n    {\n      icon: \"fas fa-percentage\",\n      title: t(\"Zéro Commission\", \"Zero Commission\"),\n      description: t(\n        \"Vendez directement à vos clients. Gardez 100% de vos revenus sans frais cachés.\",\n        \"Sell directly to your customers. Keep 100% of your revenue without hidden fees.\"\n      )\n    },\n    {\n      icon: \"fas fa-rocket\",\n      title: t(\"Installation Rapide\", \"Quick Setup\"),\n      description: t(\n        \"Lancez votre boutique en ligne en quelques minutes. Service d'installation gratuit inclus.\",\n        \"Launch your online store in minutes. Free setup service included.\"\n      )\n    }\n  ];\n\n  return (\n    <section id=\"features\" className=\"py-24 bg-gradient-to-b from-dark-700 to-dark-800 relative overflow-hidden\">\n      {/* Background decoration */}\n      <div className=\"absolute top-0 left-0 w-full h-full\">\n        <div className=\"absolute top-20 right-10 w-32 h-32 bg-primary-500/10 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-20 left-10 w-40 h-40 bg-secondary-500/10 rounded-full blur-3xl\"></div>\n      </div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative z-10\">\n        <div className=\"text-center mb-16 md:mb-20\">\n          <div className=\"inline-block px-4 py-2 bg-primary-500/10 border border-primary-500/20 rounded-full text-sm font-medium text-primary-300 mb-6\">\n            {t(\"🎯 Fonctionnalités Avancées\", \"🎯 Advanced Features\")}\n          </div>\n          <h2 className=\"text-4xl md:text-6xl font-poppins font-bold mb-6 gradient-text\">\n            {t(\"Fonctionnalités clés\", \"Key Features\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-4xl mx-auto leading-relaxed\">\n            {t(\n              \"Tout ce dont votre restaurant a besoin pour vendre en ligne. Découvrez comment SAMEATS peut révolutionner votre activité.\",\n              \"Everything your restaurant needs to sell online. Discover how SAMEATS can revolutionize your business.\"\n            )}\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8\">\n          {features.map((feature, index) => (\n            <div key={index} className=\"neo-card p-6 md:p-8 rounded-2xl hover-lift group relative overflow-hidden\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/5 to-secondary-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\n              <div className=\"relative z-10\">\n                <div className=\"w-20 h-20 bg-primary-gradient rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300 shadow-lg\">\n                  <i className={`${feature.icon} text-white text-2xl`}></i>\n                </div>\n                <h3 className=\"text-2xl font-poppins font-semibold mb-4 group-hover:text-primary-300 transition-colors\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-300 leading-relaxed\">\n                  {feature.description}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4585},"client/src/components/floating-three-elements.tsx":{"content":"import { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nexport function FloatingThreeElements() {\n  const mountRef = useRef<HTMLDivElement>(null);\n  const sceneRef = useRef<THREE.Scene>();\n  const rendererRef = useRef<THREE.WebGLRenderer>();\n  const animationRef = useRef<number>();\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.z = 20;\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({ \n      alpha: true, \n      antialias: window.innerWidth > 768,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1.5));\n    renderer.setClearColor(0x000000, 0);\n    rendererRef.current = renderer;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Create floating geometric shapes optimized for mobile\n    const shapes: THREE.Mesh[] = [];\n    const shapeCount = window.innerWidth < 768 ? 5 : 12;\n    \n    for (let i = 0; i < shapeCount; i++) {\n      // Simple geometries for better performance\n      const geometries = [\n        new THREE.BoxGeometry(1, 1, 1),\n        new THREE.SphereGeometry(0.8, 8, 6),\n        new THREE.ConeGeometry(0.8, 1.5, 6),\n        new THREE.OctahedronGeometry(1)\n      ];\n      \n      const geometry = geometries[Math.floor(Math.random() * geometries.length)];\n      const material = new THREE.MeshBasicMaterial({\n        color: new THREE.Color().setHSL(0.08 + Math.random() * 0.15, 0.7, 0.5),\n        transparent: true,\n        opacity: 0.4,\n        wireframe: true\n      });\n\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.position.set(\n        (Math.random() - 0.5) * 40,\n        (Math.random() - 0.5) * 40,\n        (Math.random() - 0.5) * 30\n      );\n      mesh.rotation.set(\n        Math.random() * Math.PI,\n        Math.random() * Math.PI,\n        Math.random() * Math.PI\n      );\n      \n      scene.add(mesh);\n      shapes.push(mesh);\n    }\n\n    // Reduced particle count for mobile performance\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = window.innerWidth < 768 ? 200 : 500;\n    const posArray = new Float32Array(particlesCount * 3);\n    const colorArray = new Float32Array(particlesCount * 3);\n\n    for (let i = 0; i < particlesCount * 3; i += 3) {\n      posArray[i] = (Math.random() - 0.5) * 80;\n      posArray[i + 1] = (Math.random() - 0.5) * 80;\n      posArray[i + 2] = (Math.random() - 0.5) * 60;\n\n      // Orange to yellow gradient\n      const t = Math.random();\n      colorArray[i] = 1;\n      colorArray[i + 1] = 0.4 + t * 0.4;\n      colorArray[i + 2] = t * 0.2;\n    }\n\n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n    particlesGeometry.setAttribute('color', new THREE.BufferAttribute(colorArray, 3));\n\n    const particlesMaterial = new THREE.PointsMaterial({\n      size: window.innerWidth < 768 ? 0.5 : 0.8,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.6,\n      blending: THREE.AdditiveBlending\n    });\n\n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n\n    // Optimized animation loop\n    let lastTime = 0;\n    const targetFPS = 30; // Reduced FPS for mobile\n    const interval = 1000 / targetFPS;\n\n    const animate = (currentTime: number) => {\n      animationRef.current = requestAnimationFrame(animate);\n\n      if (currentTime - lastTime < interval) return;\n      lastTime = currentTime;\n\n      // Slow, smooth animations\n      particlesMesh.rotation.y += 0.001;\n      particlesMesh.rotation.x += 0.0005;\n\n      shapes.forEach((shape, index) => {\n        shape.rotation.x += 0.002 + index * 0.0005;\n        shape.rotation.y += 0.001 + index * 0.0005;\n        shape.position.y += Math.sin(currentTime * 0.0005 + index) * 0.01;\n      });\n\n      renderer.render(scene, camera);\n    };\n\n    animate(0);\n\n    // Handle resize\n    const handleResize = () => {\n      if (!rendererRef.current) return;\n      \n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n      rendererRef.current.setPixelRatio(Math.min(window.devicePixelRatio, 1.5));\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Subtle mouse/touch interaction\n    const handlePointerMove = (event: MouseEvent | TouchEvent) => {\n      const clientX = 'touches' in event ? event.touches[0]?.clientX : event.clientX;\n      const clientY = 'touches' in event ? event.touches[0]?.clientY : event.clientY;\n      \n      if (clientX === undefined || clientY === undefined) return;\n      \n      const mouseX = (clientX / window.innerWidth) * 2 - 1;\n      const mouseY = -(clientY / window.innerHeight) * 2 + 1;\n      \n      camera.position.x += (mouseX * 0.5 - camera.position.x) * 0.05;\n      camera.position.y += (mouseY * 0.5 - camera.position.y) * 0.05;\n      camera.lookAt(scene.position);\n    };\n\n    window.addEventListener('mousemove', handlePointerMove);\n    window.addEventListener('touchmove', handlePointerMove, { passive: true });\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handlePointerMove);\n      window.removeEventListener('touchmove', handlePointerMove);\n      \n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      \n      if (mountRef.current && renderer.domElement) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      \n      renderer.dispose();\n      \n      shapes.forEach(shape => {\n        shape.geometry.dispose();\n        (shape.material as THREE.Material).dispose();\n      });\n      particlesGeometry.dispose();\n      particlesMaterial.dispose();\n    };\n  }, []);\n\n  return (\n    <div \n      ref={mountRef} \n      className=\"fixed inset-0 -z-20 opacity-30 pointer-events-none\"\n    />\n  );\n}","size_bytes":6225},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { useLanguage } from \"./language-provider\";\nimport sameatsLogo from \"@assets/logo-blanc_1755211740901.png\";\n\nexport function Footer() {\n  const { t } = useLanguage();\n\n  const navigation = [\n    {\n      title: t(\"Navigation\", \"Navigation\"),\n      links: [\n        { name: t(\"Accueil\", \"Home\"), href: \"/\" },\n        { name: t(\"Fonctionnalités\", \"Features\"), href: \"/features\" },\n        { name: t(\"Tarifs\", \"Pricing\"), href: \"/pricing\" },\n        { name: t(\"À Propos\", \"About\"), href: \"/about\" },\n        { name: t(\"Contact\", \"Contact\"), href: \"/contact\" }\n      ]\n    },\n    {\n      title: t(\"Solutions\", \"Solutions\"),\n      links: [\n        { name: t(\"Restaurant traditionnel\", \"Traditional restaurant\"), href: \"/features\" },\n        { name: t(\"Fast Food\", \"Fast Food\"), href: \"/features\" },\n        { name: t(\"Pizzeria\", \"Pizzeria\"), href: \"/features\" },\n        { name: t(\"Multi-établissements\", \"Multi-location\"), href: \"/features\" },\n        { name: t(\"Dark Kitchen\", \"Dark Kitchen\"), href: \"/features\" }\n      ]\n    },\n    {\n      title: t(\"Support\", \"Support\"),\n      links: [\n        { name: t(\"Centre d'aide\", \"Help Center\"), href: \"/contact\" },\n        { name: t(\"Documentation\", \"Documentation\"), href: \"/contact\" },\n        { name: t(\"Tutoriels\", \"Tutorials\"), href: \"/contact\" },\n        { name: t(\"Support technique\", \"Technical Support\"), href: \"/contact\" },\n        { name: t(\"Formation\", \"Training\"), href: \"/contact\" }\n      ]\n    },\n    {\n      title: t(\"Légal\", \"Legal\"),\n      links: [\n        { name: t(\"Mentions légales\", \"Legal Notice\"), href: \"/contact\" },\n        { name: t(\"Politique de confidentialité\", \"Privacy Policy\"), href: \"/contact\" },\n        { name: t(\"CGU\", \"Terms of Service\"), href: \"/contact\" },\n        { name: t(\"RGPD\", \"GDPR\"), href: \"/contact\" },\n        { name: t(\"Cookies\", \"Cookies\"), href: \"/contact\" }\n      ]\n    }\n  ];\n\n  const contact = {\n    address: [\n      \"123 Avenue des Champs-Élysées\",\n      \"75008 Paris, France\"\n    ],\n    phone: \"+33 1 23 45 67 89\",\n    email: \"contact@sameats.com\"\n  };\n\n  const socialLinks = [\n    { name: \"LinkedIn\", icon: \"fab fa-linkedin\", href: \"#\" },\n    { name: \"Twitter\", icon: \"fab fa-twitter\", href: \"#\" },\n    { name: \"Facebook\", icon: \"fab fa-facebook\", href: \"#\" },\n    { name: \"Instagram\", icon: \"fab fa-instagram\", href: \"#\" }\n  ];\n\n  return (\n    <footer className=\"bg-gradient-to-b from-dark-800 to-dark-900 border-t border-gray-700/50\">\n      <div className=\"container mx-auto px-4 md:px-6 py-16\">\n        {/* Main footer content */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-8 mb-12\">\n          {/* Company info */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"mb-6\">\n              <img \n                src={sameatsLogo} \n                alt=\"SAMEATS\" \n                className=\"h-12 w-auto mb-4\"\n              />\n              <p className=\"text-gray-300 leading-relaxed mb-6\">\n                {t(\n                  \"La solution complète pour digitaliser votre restaurant sans commission. Site web, applications mobiles et back-office professionnel.\",\n                  \"The complete solution to digitize your restaurant without commission. Website, mobile apps and professional back-office.\"\n                )}\n              </p>\n            </div>\n\n            {/* Contact info */}\n            <div className=\"space-y-3 mb-6\">\n              <div className=\"flex items-center gap-3 text-gray-300\">\n                <i className=\"fas fa-map-marker-alt text-primary-400 w-4\"></i>\n                <div>\n                  {contact.address.map((line, index) => (\n                    <div key={index} className=\"text-sm\">{line}</div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-3 text-gray-300\">\n                <i className=\"fas fa-phone text-primary-400 w-4\"></i>\n                <span className=\"text-sm\">{contact.phone}</span>\n              </div>\n              <div className=\"flex items-center gap-3 text-gray-300\">\n                <i className=\"fas fa-envelope text-primary-400 w-4\"></i>\n                <span className=\"text-sm\">{contact.email}</span>\n              </div>\n            </div>\n\n            {/* Social links */}\n            <div className=\"flex gap-4\">\n              {socialLinks.map((social, index) => (\n                <a\n                  key={index}\n                  href={social.href}\n                  className=\"w-10 h-10 bg-dark-600 rounded-xl flex items-center justify-center text-gray-400 hover:bg-primary-500 hover:text-white transition-all duration-300 hover:scale-110\"\n                  aria-label={social.name}\n                >\n                  <i className={social.icon}></i>\n                </a>\n              ))}\n            </div>\n          </div>\n\n          {/* Navigation links */}\n          {navigation.map((section, index) => (\n            <div key={index} className=\"lg:col-span-1\">\n              <h3 className=\"text-white font-semibold mb-4\">{section.title}</h3>\n              <ul className=\"space-y-3\">\n                {section.links.map((link, linkIndex) => (\n                  <li key={linkIndex}>\n                    <Link href={link.href}>\n                      <span className=\"text-gray-400 hover:text-primary-400 transition-colors text-sm cursor-pointer\">\n                        {link.name}\n                      </span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n\n        {/* Value proposition banner */}\n        <div className=\"bg-gradient-to-r from-primary-500/10 to-secondary-500/10 border border-primary-500/20 rounded-2xl p-6 md:p-8 mb-12\">\n          <div className=\"text-center\">\n            <h3 className=\"text-2xl md:text-3xl font-bold gradient-text mb-4\">\n              {t(\"Prêt à commencer ?\", \"Ready to get started?\")}\n            </h3>\n            <p className=\"text-gray-300 mb-6 max-w-2xl mx-auto\">\n              {t(\n                \"Rejoignez plus de 500 restaurants qui nous font confiance pour développer leurs ventes en ligne\",\n                \"Join over 500 restaurants who trust us to grow their online sales\"\n              )}\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <button className=\"btn-primary px-8 py-3 rounded-xl font-semibold hover-lift\">\n                  {t(\"Demander une démo\", \"Request a demo\")}\n                </button>\n              </Link>\n              <Link href=\"/pricing\">\n                <button className=\"btn-secondary px-8 py-3 rounded-xl font-semibold hover-lift\">\n                  {t(\"Voir les tarifs\", \"See pricing\")}\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom bar */}\n        <div className=\"pt-8 border-t border-gray-700/50\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n            <div className=\"text-gray-400 text-sm\">\n              © 2025 SAMEATS. {t(\"Tous droits réservés.\", \"All rights reserved.\")}\n            </div>\n            \n            <div className=\"flex flex-wrap items-center gap-6 text-gray-400 text-sm\">\n              <span className=\"flex items-center gap-2\">\n                <i className=\"fas fa-shield-alt text-green-400\"></i>\n                {t(\"100% sécurisé\", \"100% secure\")}\n              </span>\n              <span className=\"flex items-center gap-2\">\n                <i className=\"fas fa-percent text-primary-400\"></i>\n                {t(\"0% commission\", \"0% commission\")}\n              </span>\n              <span className=\"flex items-center gap-2\">\n                <i className=\"fas fa-clock text-secondary-400\"></i>\n                {t(\"Support 24/7\", \"24/7 Support\")}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":8025},"client/src/components/hero-3d-section.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport { useLanguage } from \"./language-provider\";\nimport logoImage from \"@assets/logo-blanc_1755211740901.png\";\n\nexport function Hero3DSection() {\n  const { t } = useLanguage();\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [is3DSupported, setIs3DSupported] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n\n  useEffect(() => {\n    // Check for reduced motion preference\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setPrefersReducedMotion(mediaQuery.matches);\n\n    // Check for WebGL support\n    const canvas = document.createElement('canvas');\n    const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    setIs3DSupported(!!gl);\n\n    // Only load Three.js on desktop with WebGL support and no reduced motion preference\n    if (gl && !mediaQuery.matches && window.innerWidth > 768) {\n      import('three').then(({ Scene, PerspectiveCamera, WebGLRenderer, CircleGeometry, MeshBasicMaterial, Mesh, Group, Vector3 }) => {\n        if (!canvasRef.current) return;\n\n        const scene = new Scene();\n        const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        const renderer = new WebGLRenderer({ \n          canvas: canvasRef.current, \n          alpha: true, \n          antialias: true,\n          powerPreference: \"low-power\"\n        });\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n        // Create orbiting elements representing our services\n        const group = new Group();\n        \n        // Create simple geometric shapes representing: Website, Mobile App, Back-office\n        const elements = [\n          { color: '#FF6A00', radius: 0.3, distance: 3, speed: 0.01 }, // Website (orange)\n          { color: '#FFC700', radius: 0.25, distance: 2.5, speed: 0.015 }, // Mobile App (yellow)\n          { color: '#FF8C42', radius: 0.35, distance: 3.5, speed: 0.008 } // Back-office (orange-yellow)\n        ];\n\n        const meshes: any[] = [];\n        \n        elements.forEach((element, index) => {\n          const geometry = new CircleGeometry(element.radius, 32);\n          const material = new MeshBasicMaterial({ \n            color: element.color,\n            transparent: true,\n            opacity: 0.8\n          });\n          const mesh = new Mesh(geometry, material);\n          \n          const angle = (index / elements.length) * Math.PI * 2;\n          mesh.position.x = Math.cos(angle) * element.distance;\n          mesh.position.y = Math.sin(angle) * element.distance;\n          mesh.position.z = Math.sin(angle * 2) * 0.5;\n          \n          group.add(mesh);\n          meshes.push(mesh);\n        });\n\n        scene.add(group);\n        camera.position.z = 6;\n\n        // Animation loop\n        const animate = () => {\n          requestAnimationFrame(animate);\n\n          // Rotate the entire group slowly\n          group.rotation.y += 0.005;\n          group.rotation.x += 0.002;\n\n          // Individual element animation\n          meshes.forEach((mesh, index) => {\n            const element = elements[index];\n            const time = Date.now() * element.speed;\n            \n            mesh.position.x = Math.cos(time) * element.distance;\n            mesh.position.y = Math.sin(time) * element.distance;\n            mesh.position.z = Math.sin(time * 2) * 0.5;\n            \n            mesh.rotation.z += 0.01;\n          });\n\n          renderer.render(scene, camera);\n        };\n\n        animate();\n\n        // Handle resize\n        const handleResize = () => {\n          camera.aspect = window.innerWidth / window.innerHeight;\n          camera.updateProjectionMatrix();\n          renderer.setSize(window.innerWidth, window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n          window.removeEventListener('resize', handleResize);\n          renderer.dispose();\n        };\n      }).catch(() => {\n        setIs3DSupported(false);\n      });\n    }\n  }, []);\n\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-dark-900 via-dark-800 to-dark-700\">\n      {/* 3D Canvas for desktop */}\n      {is3DSupported && !prefersReducedMotion && (\n        <canvas \n          ref={canvasRef}\n          className=\"absolute inset-0 w-full h-full opacity-30\"\n          style={{ pointerEvents: 'none' }}\n        />\n      )}\n\n      {/* Fallback background for mobile or reduced motion */}\n      {(!is3DSupported || prefersReducedMotion) && (\n        <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/10 via-secondary-500/5 to-primary-600/10\">\n          <div className=\"absolute top-1/4 left-1/4 w-32 h-32 bg-primary-500/20 rounded-full blur-3xl animate-pulse\"></div>\n          <div className=\"absolute bottom-1/3 right-1/4 w-40 h-40 bg-secondary-500/20 rounded-full blur-3xl animate-pulse\" style={{ animationDelay: '1s' }}></div>\n          <div className=\"absolute top-1/2 right-1/3 w-24 h-24 bg-primary-400/20 rounded-full blur-3xl animate-pulse\" style={{ animationDelay: '2s' }}></div>\n        </div>\n      )}\n\n      {/* Content */}\n      <div className=\"container mx-auto px-4 md:px-6 relative z-10 text-center\">\n        {/* Logo */}\n        <div className=\"mb-8 md:mb-12 animate-fadeInScale\">\n          <img \n            src={logoImage} \n            alt=\"SAMEATS\"\n            className=\"h-20 md:h-24 w-auto mx-auto drop-shadow-2xl\"\n          />\n        </div>\n\n        {/* Main heading */}\n        <h1 className=\"text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-poppins font-bold mb-8 leading-tight animate-slideInUp\">\n          <span className=\"block mb-4\">\n            {t(\"Votre solution complète\", \"Your complete solution\")}\n          </span>\n          <span className=\"gradient-text block\">\n            {t(\"de commande en ligne\", \"for online ordering\")}\n          </span>\n        </h1>\n\n        {/* Subtitle with key value prop */}\n        <p className=\"text-xl md:text-2xl text-gray-300 mb-4 max-w-4xl mx-auto leading-relaxed animate-slideInUp\" style={{ animationDelay: '0.2s' }}>\n          {t(\n            \"Sans commission — vous gardez vos marges\",\n            \"No commission — you keep your margins\"\n          )}\n        </p>\n\n        <p className=\"text-lg md:text-xl text-gray-400 mb-12 max-w-3xl mx-auto leading-relaxed animate-slideInUp\" style={{ animationDelay: '0.3s' }}>\n          {t(\n            \"Site web + Apps + Back-office complet pour digitaliser votre restaurant\",\n            \"Website + Apps + Complete back-office to digitize your restaurant\"\n          )}\n        </p>\n\n        {/* Main CTAs */}\n        <div className=\"flex flex-col sm:flex-row gap-6 justify-center mb-16 animate-slideInUp\" style={{ animationDelay: '0.4s' }}>\n          <button \n            className=\"btn-primary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift group\"\n            onClick={() => document.getElementById('pricing')?.scrollIntoView({ behavior: 'smooth' })}\n          >\n            <span className=\"flex items-center gap-3\">\n              <i className=\"fas fa-rocket\"></i>\n              {t(\"Démarrer à 500 €\", \"Start at €500\")}\n              <i className=\"fas fa-arrow-right group-hover:translate-x-1 transition-transform\"></i>\n            </span>\n          </button>\n          \n          <button \n            className=\"btn-secondary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift group\"\n            onClick={() => document.getElementById('demo')?.scrollIntoView({ behavior: 'smooth' })}\n          >\n            <span className=\"flex items-center gap-3\">\n              <i className=\"fas fa-play\"></i>\n              {t(\"Demander une démo\", \"Request a demo\")}\n              <i className=\"fas fa-external-link-alt group-hover:scale-110 transition-transform\"></i>\n            </span>\n          </button>\n        </div>\n\n        {/* Key benefits banner */}\n        <div className=\"animate-fadeInScale\" style={{ animationDelay: '0.5s' }}>\n          <div className=\"inline-flex flex-wrap items-center justify-center gap-6 md:gap-8 bg-dark-600/50 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 md:p-8\">\n            <div className=\"flex items-center gap-3 text-green-400\">\n              <i className=\"fas fa-check-circle text-lg\"></i>\n              <span className=\"font-medium\">{t(\"Installation 500 €\", \"€500 setup\")}</span>\n            </div>\n            <div className=\"hidden sm:block w-px h-6 bg-gray-600\"></div>\n            <div className=\"flex items-center gap-3 text-primary-400\">\n              <i className=\"fas fa-gift text-lg\"></i>\n              <span className=\"font-medium\">{t(\"1 mois gratuit\", \"1 month free\")}</span>\n            </div>\n            <div className=\"hidden sm:block w-px h-6 bg-gray-600\"></div>\n            <div className=\"flex items-center gap-3 text-secondary-400\">\n              <i className=\"fas fa-percentage text-lg\"></i>\n              <span className=\"font-medium\">{t(\"0% commission\", \"0% commission\")}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Scroll indicator */}\n        <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce\">\n          <i className=\"fas fa-chevron-down text-gray-400 text-xl\"></i>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":9458},"client/src/components/hero-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\nimport { ThreeHeroBackground } from \"./three-hero-background\";\nimport sameatsLogo from \"@assets/logo-blanc_1755211740901.png\";\n\nexport function HeroSection() {\n  const { t } = useLanguage();\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center pt-16 md:pt-20 overflow-hidden bg-gradient-to-br from-dark-800 via-dark-700 to-dark-600\">\n      {/* Three.js Background */}\n      <ThreeHeroBackground />\n      \n      {/* Enhanced Background Elements for fallback */}\n      <div className=\"blob w-96 h-96 bg-primary-500 top-10 -right-20 animate-blob opacity-30\"></div>\n      <div className=\"blob w-80 h-80 bg-secondary-500 bottom-10 -left-20 animate-blob opacity-30\" style={{ animationDelay: '2s' }}></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 text-center relative z-10\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"mb-6 md:mb-8\">\n            <span className=\"inline-block px-4 py-2 bg-primary-500/20 border border-primary-500/30 rounded-full text-xs md:text-sm font-medium text-primary-300 mb-4 md:mb-6 animate-fadeInScale\">\n              {t(\"🚀 Solution N°1 en France\", \"🚀 #1 Solution in France\")}\n            </span>\n          </div>\n          {/* Logo showcase */}\n          <div className=\"mb-8 animate-fadeInScale\">\n            <img \n              src={sameatsLogo} \n              alt=\"SAMEATS\"\n              className=\"h-16 md:h-20 w-auto mx-auto drop-shadow-2xl\"\n            />\n          </div>\n          \n          <h1 className=\"text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-poppins font-bold mb-6 md:mb-8 leading-tight animate-slideInUp\">\n            <span className=\"block mb-2 md:mb-4\">\n              {t(\"Tout ce dont votre restaurant a besoin\", \"Everything your restaurant needs\")}\n            </span>\n            <span className=\"gradient-text block\">\n              {t(\"pour vendre en ligne\", \"to sell online\")}\n            </span>\n          </h1>\n          \n          <p className=\"text-lg md:text-xl text-gray-300 mb-6 md:mb-8 max-w-4xl mx-auto leading-relaxed animate-slideInUp\" style={{ animationDelay: '0.2s' }}>\n            {t(\n              \"SAMEATS est un système de commande en ligne pour restaurants qui permet à vos clients de passer des commandes directement depuis votre site web ou app sans commission additionnelle.\",\n              \"SAMEATS is an online ordering system for restaurants that lets your customers place their food orders directly from your website or app without additional commissions.\"\n            )}\n            <br />\n            <span className=\"gradient-text font-semibold\">\n              {t(\"Installation 500 € + 1 mois gratuit\", \"€500 setup + 1 month free\")}\n            </span>\n          </p>\n          \n\n          \n          <div className=\"flex flex-col sm:flex-row gap-6 justify-center mb-16\">\n            <button \n              onClick={() => scrollToSection('pricing')}\n              className=\"modern-button px-10 py-5 rounded-2xl font-semibold text-lg hover-lift text-white shadow-lg\"\n            >\n              <span className=\"relative z-10 flex items-center justify-center gap-2\">\n                <i className=\"fas fa-rocket\"></i>\n                {t(\"Démarrer à 500 €\", \"Get started for €500\")}\n              </span>\n            </button>\n            <button \n              onClick={() => scrollToSection('demo')}\n              className=\"border-2 border-primary-500 px-10 py-5 rounded-2xl font-semibold text-lg hover:bg-primary-500 hover:shadow-lg transition-all duration-300 backdrop-blur-sm bg-white/5\"\n            >\n              <span className=\"flex items-center justify-center gap-2\">\n                <i className=\"fas fa-play-circle\"></i>\n                {t(\"Demander une démo\", \"Request a demo\")}\n              </span>\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-3xl mx-auto\">\n            <div className=\"flex items-center justify-center space-x-3\">\n              <i className=\"fas fa-rocket text-primary-500 text-xl\"></i>\n              <span className=\"font-medium\">\n                {t(\"Prêt en quelques jours\", \"Go live in days\")}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-center space-x-3\">\n              <i className=\"fas fa-hand-holding-dollar text-primary-500 text-xl\"></i>\n              <span className=\"font-medium\">\n                {t(\"Sans commission sur vos ventes\", \"No commission on your sales\")}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-center space-x-3\">\n              <i className=\"fas fa-headset text-primary-500 text-xl\"></i>\n              <span className=\"font-medium\">\n                {t(\"Support réactif\", \"Responsive support\")}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5162},"client/src/components/key-benefits-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\n\nexport function KeyBenefitsSection() {\n  const { t } = useLanguage();\n\n  const benefits = [\n    {\n      icon: \"fas fa-chart-line\",\n      title: t(\"Augmentation des commandes\", \"Increase orders\"),\n      description: t(\"Boostez vos ventes avec un système optimisé\", \"Boost sales with an optimized system\"),\n      gradient: \"from-green-500 to-emerald-600\"\n    },\n    {\n      icon: \"fas fa-heart\",\n      title: t(\"Fidélisation client\", \"Customer loyalty\"),\n      description: t(\"Programme de fidélité et notifications push\", \"Loyalty program and push notifications\"),\n      gradient: \"from-pink-500 to-rose-600\"\n    },\n    {\n      icon: \"fas fa-cogs\",\n      title: t(\"Gestion simplifiée\", \"Simple management\"),\n      description: t(\"Back-office intuitif pour tout gérer\", \"Intuitive back-office to manage everything\"),\n      gradient: \"from-blue-500 to-cyan-600\"\n    },\n    {\n      icon: \"fas fa-hand-paper\",\n      title: t(\"Click & Collect\", \"Click & Collect\"),\n      description: t(\"Commandes à emporter sans attente\", \"Takeaway orders without waiting\"),\n      gradient: \"from-purple-500 to-indigo-600\"\n    },\n    {\n      icon: \"fas fa-shipping-fast\",\n      title: t(\"Livraison intégrée\", \"Integrated delivery\"),\n      description: t(\"Gestion complète de vos livraisons\", \"Complete delivery management\"),\n      gradient: \"from-orange-500 to-red-600\"\n    },\n    {\n      icon: \"fas fa-mobile-alt\",\n      title: t(\"Applications mobiles\", \"Mobile apps\"),\n      description: t(\"iOS & Android avec votre marque\", \"iOS & Android with your branding\"),\n      gradient: \"from-teal-500 to-green-600\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 bg-gradient-to-b from-dark-700 to-dark-800 relative overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute top-0 left-0 w-full h-full\">\n        <div className=\"absolute top-20 right-20 w-40 h-40 bg-primary-500/5 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-20 left-20 w-32 h-32 bg-secondary-500/5 rounded-full blur-3xl\"></div>\n      </div>\n\n      <div className=\"container mx-auto px-4 md:px-6 relative z-10\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-block px-4 py-2 bg-primary-500/10 border border-primary-500/20 rounded-full text-sm font-medium text-primary-300 mb-6\">\n            {t(\"✨ Bénéfices clés\", \"✨ Key Benefits\")}\n          </div>\n          <h2 className=\"text-4xl md:text-6xl font-poppins font-bold mb-6 gradient-text\">\n            {t(\"Pourquoi choisir SAMEATS\", \"Why choose SAMEATS\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-4xl mx-auto leading-relaxed\">\n            {t(\n              \"Découvrez les avantages qui font la différence pour votre restaurant\",\n              \"Discover the advantages that make the difference for your restaurant\"\n            )}\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {benefits.map((benefit, index) => (\n            <div \n              key={index} \n              className=\"neo-card p-8 rounded-2xl hover-lift group relative overflow-hidden\"\n              style={{ animationDelay: `${index * 0.1}s` }}\n            >\n              <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/5 to-secondary-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\n              \n              <div className=\"relative z-10\">\n                <div className={`w-16 h-16 bg-gradient-to-r ${benefit.gradient} rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300 shadow-lg`}>\n                  <i className={`${benefit.icon} text-white text-xl`}></i>\n                </div>\n                \n                <h3 className=\"text-xl font-poppins font-semibold mb-4 group-hover:text-primary-300 transition-colors\">\n                  {benefit.title}\n                </h3>\n                \n                <p className=\"text-gray-300 leading-relaxed\">\n                  {benefit.description}\n                </p>\n\n                {/* Hover effect indicator */}\n                <div className=\"absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                  <div className=\"w-2 h-2 bg-primary-400 rounded-full animate-pulse\"></div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Bottom CTA */}\n        <div className=\"text-center mt-16\">\n          <button \n            className=\"btn-primary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift group\"\n            onClick={() => document.getElementById('clients')?.scrollIntoView({ behavior: 'smooth' })}\n          >\n            <span className=\"flex items-center gap-3\">\n              {t(\"Voir nos clients satisfaits\", \"See our satisfied clients\")}\n              <i className=\"fas fa-arrow-down group-hover:translate-y-1 transition-transform\"></i>\n            </span>\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5117},"client/src/components/language-provider.tsx":{"content":"import { createContext, useContext, useState, useEffect } from \"react\";\n\ninterface LanguageContextType {\n  language: 'fr' | 'en';\n  setLanguage: (lang: 'fr' | 'en') => void;\n  t: (fr: string, en: string) => string;\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nexport function LanguageProvider({ children }: { children: React.ReactNode }) {\n  const [language, setLanguage] = useState<'fr' | 'en'>('fr');\n\n  const t = (fr: string, en: string) => {\n    return language === 'fr' ? fr : en;\n  };\n\n  useEffect(() => {\n    // Update document language\n    document.documentElement.lang = language;\n    \n    // Update page title and meta description\n    const title = language === 'fr' \n      ? 'SAMEATS - Solution de commande en ligne pour restaurants'\n      : 'SAMEATS - Online ordering solution for restaurants';\n    const description = language === 'fr'\n      ? 'Solution complète de commande en ligne pour restaurants : site web, apps mobiles, back-office. Installation 500€ + 1 mois gratuit.'\n      : 'Complete online ordering solution for restaurants: website, mobile apps, back-office. €500 setup + 1 month free.';\n      \n    document.title = title;\n    const metaDescription = document.querySelector('meta[name=\"description\"]') as HTMLMetaElement;\n    if (metaDescription) {\n      metaDescription.content = description;\n    }\n  }, [language]);\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n","size_bytes":1737},"client/src/components/modern-about.tsx":{"content":"import { useLanguage } from \"./language-provider\";\n\nexport function ModernAbout() {\n  const { t } = useLanguage();\n\n  return (\n    <div className=\"pt-20\">\n      {/* Hero Section */}\n      <section className=\"py-24 bg-[var(--background)] relative overflow-hidden\">\n        <div className=\"absolute inset-0 dot-pattern opacity-30\"></div>\n        \n        <div className=\"container mx-auto px-4 md:px-6 relative\">\n          <div className=\"text-center mb-16 animate-fade-in-up\">\n            <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)] border border-[var(--border)] rounded-full mb-6\">\n              <i className=\"fas fa-heart text-[var(--primary)] mr-2\"></i>\n              <span className=\"text-sm text-[var(--text-secondary)]\">\n                {t(\"Notre histoire\", \"Our story\")}\n              </span>\n            </div>\n            \n            <h1 className=\"text-5xl md:text-7xl font-bold mb-6\">\n              <span className=\"text-[var(--text-primary)]\">\n                {t(\"À propos de\", \"About\")}\n              </span>\n              <br />\n              <span className=\"gradient-text-modern\">\n                SAMEATS\n              </span>\n            </h1>\n            \n            <p className=\"text-xl text-[var(--text-secondary)] max-w-4xl mx-auto\">\n              {t(\n                \"Née de 6+ années d'expérience dans l'industrie de la restauration et du fast-food, SAMEATS est la solution SaaS créée par Samkode IT Agency pour digitaliser et moderniser votre restaurant.\",\n                \"Born from 6+ years of experience in the restaurant and fast-food industry, SAMEATS is the SaaS solution created by Samkode IT Agency to digitize and modernize your restaurant.\"\n              )}\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission Section */}\n      <section className=\"py-24 bg-[var(--surface)] relative\">\n        <div className=\"container mx-auto px-4 md:px-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n            <div className=\"animate-fade-in-up\">\n              <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n                <span className=\"text-[var(--text-primary)]\">\n                  {t(\"Notre\", \"Our\")}\n                </span>\n                <br />\n                <span className=\"gradient-text-modern\">\n                  {t(\"mission\", \"mission\")}\n                </span>\n              </h2>\n              \n              <p className=\"text-lg text-[var(--text-secondary)] mb-8\">\n                {t(\n                  \"Nous croyons que chaque restaurant, qu'il soit petit ou grand, mérite d'avoir accès aux meilleures technologies pour prospérer dans l'ère numérique.\",\n                  \"We believe that every restaurant, small or large, deserves access to the best technologies to thrive in the digital age.\"\n                )}\n              </p>\n              \n              <div className=\"space-y-4\">\n                {[\n                  {\n                    title: t(\"Démocratiser la technologie\", \"Democratize technology\"),\n                    description: t(\"Rendre accessible la digitalisation à tous les restaurants\", \"Make digitization accessible to all restaurants\")\n                  },\n                  {\n                    title: t(\"Accompagner la croissance\", \"Support growth\"),\n                    description: t(\"Fournir les outils pour développer votre business\", \"Provide tools to grow your business\")\n                  },\n                  {\n                    title: t(\"Simplifier l'expérience\", \"Simplify the experience\"),\n                    description: t(\"Une solution tout-en-un sans complications\", \"An all-in-one solution without complications\")\n                  }\n                ].map((item, index) => (\n                  <div key={index} className=\"flex items-start space-x-4\">\n                    <div className=\"w-2 h-2 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] rounded-full mt-3 flex-shrink-0\"></div>\n                    <div>\n                      <h4 className=\"font-semibold text-[var(--text-primary)] mb-1\">\n                        {item.title}\n                      </h4>\n                      <p className=\"text-[var(--text-secondary)] text-sm\">\n                        {item.description}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"modern-card p-8 animate-fade-in-up\" style={{ animationDelay: '200ms' }}>\n              <div className=\"grid grid-cols-2 gap-6\">\n                {[\n                  { value: \"6+\", label: t(\"Années d'expérience\", \"Years of experience\"), icon: \"fas fa-calendar-alt\" },\n                  { value: \"15+\", label: t(\"Restaurants clients\", \"Restaurant clients\"), icon: \"fas fa-store\" },\n                  { value: \"3\", label: t(\"Pays\", \"Countries\"), icon: \"fas fa-globe\" },\n                  { value: \"98%\", label: t(\"Satisfaction\", \"Satisfaction\"), icon: \"fas fa-heart\" }\n                ].map((stat, index) => (\n                  <div key={index} className=\"text-center\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-xl flex items-center justify-center mx-auto mb-3\">\n                      <i className={`${stat.icon} text-white`}></i>\n                    </div>\n                    <div className=\"text-2xl font-bold gradient-text-modern mb-1\">\n                      {stat.value}\n                    </div>\n                    <div className=\"text-[var(--text-secondary)] text-xs\">\n                      {stat.label}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Values Section */}\n      <section className=\"py-24 bg-[var(--background)] relative\">\n        <div className=\"absolute inset-0 line-pattern opacity-20\"></div>\n        \n        <div className=\"container mx-auto px-4 md:px-6 relative\">\n          <div className=\"text-center mb-16 animate-fade-in-up\">\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n              <span className=\"text-[var(--text-primary)]\">\n                {t(\"Nos\", \"Our\")}\n              </span>\n              <br />\n              <span className=\"gradient-text-modern\">\n                {t(\"valeurs\", \"values\")}\n              </span>\n            </h2>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {[\n              {\n                icon: \"fas fa-rocket\",\n                title: t(\"Innovation\", \"Innovation\"),\n                description: t(\"Nous intégrons constamment les dernières technologies pour offrir des solutions avant-gardistes.\", \"We constantly integrate the latest technologies to offer cutting-edge solutions.\")\n              },\n              {\n                icon: \"fas fa-users\",\n                title: t(\"Proximité\", \"Proximity\"),\n                description: t(\"Nous comprenons les défis de la restauration car nous venons de cette industrie.\", \"We understand restaurant challenges because we come from this industry.\")\n              },\n              {\n                icon: \"fas fa-shield-alt\",\n                title: t(\"Fiabilité\", \"Reliability\"),\n                description: t(\"Des systèmes robustes et un support technique réactif pour votre tranquillité d'esprit.\", \"Robust systems and responsive technical support for your peace of mind.\")\n              }\n            ].map((value, index) => (\n              <div\n                key={index}\n                className=\"modern-card p-8 text-center group hover:shadow-xl transition-all duration-300 animate-fade-in-up\"\n                style={{ animationDelay: `${index * 200}ms` }}\n              >\n                <div className=\"w-16 h-16 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300\">\n                  <i className={`${value.icon} text-2xl text-white`}></i>\n                </div>\n                \n                <h3 className=\"text-xl font-bold text-[var(--text-primary)] mb-4\">\n                  {value.title}\n                </h3>\n                \n                <p className=\"text-[var(--text-secondary)] leading-relaxed\">\n                  {value.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Team Section */}\n      <section className=\"py-24 bg-[var(--surface)]\">\n        <div className=\"container mx-auto px-4 md:px-6\">\n          <div className=\"text-center mb-16 animate-fade-in-up\">\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n              <span className=\"text-[var(--text-primary)]\">\n                {t(\"L'équipe\", \"The team\")}\n              </span>\n              <br />\n              <span className=\"gradient-text-modern\">\n                {t(\"Samkode\", \"Samkode\")}\n              </span>\n            </h2>\n            \n            <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto\">\n              {t(\n                \"Une équipe passionnée d'experts en technologie et en restauration, dédiée à votre succès.\",\n                \"A passionate team of technology and restaurant experts, dedicated to your success.\"\n              )}\n            </p>\n          </div>\n\n          <div className=\"modern-card p-8 text-center animate-fade-in-up\">\n            <div className=\"w-24 h-24 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-full flex items-center justify-center mx-auto mb-6\">\n              <i className=\"fas fa-code text-3xl text-white\"></i>\n            </div>\n            \n            <h3 className=\"text-2xl font-bold text-[var(--text-primary)] mb-4\">\n              Samkode IT Agency\n            </h3>\n            \n            <p className=\"text-[var(--text-secondary)] text-lg mb-6 max-w-2xl mx-auto\">\n              {t(\n                \"Fondée par des professionnels ayant plus de 6 ans d'expérience dans l'industrie de la restauration et du fast-food, Samkode IT Agency comprend intimement les défis et opportunités de ce secteur.\",\n                \"Founded by professionals with over 6 years of experience in the restaurant and fast-food industry, Samkode IT Agency intimately understands the challenges and opportunities of this sector.\"\n              )}\n            </p>\n            \n            <div className=\"flex flex-wrap justify-center gap-4\">\n              <div className=\"px-4 py-2 bg-[var(--primary)]/10 text-[var(--primary)] rounded-full text-sm font-medium\">\n                {t(\"Développement\", \"Development\")}\n              </div>\n              <div className=\"px-4 py-2 bg-[var(--primary)]/10 text-[var(--primary)] rounded-full text-sm font-medium\">\n                {t(\"Restauration\", \"Restaurant\")}\n              </div>\n              <div className=\"px-4 py-2 bg-[var(--primary)]/10 text-[var(--primary)] rounded-full text-sm font-medium\">\n                {t(\"Innovation\", \"Innovation\")}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":11263},"client/src/components/modern-client-gallery.tsx":{"content":"import { useLanguage } from \"./language-provider\";\nimport poste1 from \"@assets/Poste 1_1755215451809.jpg\";\nimport poste2 from \"@assets/Poste 2_1755215451814.jpg\";\nimport poste3 from \"@assets/Poste 3_1755215451814.jpg\";\nimport poste4 from \"@assets/Poste 4_1755215451814.jpg\";\nimport poste5 from \"@assets/Poste 5_1755215451815.jpg\";\n\nexport function ModernClientGallery() {\n  const { t } = useLanguage();\n\n  const clients = [\n    {\n      name: \"T9 Restaurant\",\n      type: t(\"Restaurant & Grill\", \"Restaurant & Grill\"),\n      location: t(\"Vitry-sur-Seine, France\", \"Vitry-sur-Seine, France\"),\n      image: poste1,\n      description: t(\n        \"Restaurant moderne spécialisé dans les grillades et la cuisine internationale\",\n        \"Modern restaurant specializing in grills and international cuisine\"\n      ),\n      website: \"https://www.t9-restaurant.fr/\"\n    },\n    {\n      name: \"Campus Food Court\",\n      type: t(\"Food Court\", \"Food Court\"),\n      location: t(\"Champs-sur-Marne, France\", \"Champs-sur-Marne, France\"),\n      image: poste2,\n      description: t(\n        \"Espace de restauration universitaire avec plusieurs concepts culinaires\",\n        \"University dining space with multiple culinary concepts\"\n      ),\n      website: \"https://www.campusfoodcourt.fr/\"\n    },\n    {\n      name: \"First Pizza\",\n      type: t(\"Pizzeria\", \"Pizzeria\"),\n      location: t(\"Noyon, France\", \"Noyon, France\"),\n      image: poste3,\n      description: t(\n        \"Pizzeria artisanale proposant des pizzas fraîches et authentiques\",\n        \"Artisanal pizzeria offering fresh and authentic pizzas\"\n      ),\n      website: \"https://www.firstpizza60.fr/\"\n    },\n    {\n      name: \"Patroné Forno\",\n      type: t(\"Pizzeria italienne\", \"Italian Pizzeria\"),\n      location: t(\"Viry-Châtillon, France\", \"Viry-Châtillon, France\"),\n      image: poste4,\n      description: t(\n        \"Authentique pizzeria italienne avec four à bois traditionnel\",\n        \"Authentic Italian pizzeria with traditional wood-fired oven\"\n      ),\n      website: \"https://www.patroneforno.fr/\"\n    },\n    {\n      name: \"Sidi Bou Le Mans\",\n      type: t(\"Restaurant traditionnel\", \"Traditional Restaurant\"),\n      location: t(\"Le Mans, France\", \"Le Mans, France\"),\n      image: poste5,\n      description: t(\n        \"Restaurant traditionnel proposant une cuisine authentique dans un cadre moderne\",\n        \"Traditional restaurant offering authentic cuisine in a modern setting\"\n      ),\n      website: \"https://www.sidibou-lemans.fr/\"\n    },\n    {\n      name: \"World Food\",\n      type: t(\"Restaurant international\", \"International Restaurant\"),\n      location: t(\"Paris, France\", \"Paris, France\"),\n      image: poste1,\n      description: t(\n        \"Restaurant international proposant une cuisine du monde variée\",\n        \"International restaurant offering diverse world cuisine\"\n      ),\n      website: \"https://www.worldfood-75.fr/\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 bg-[var(--background)] relative overflow-hidden\">\n      {/* Background */}\n      <div className=\"absolute inset-0 dot-pattern opacity-20\"></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative\">\n        {/* Header */}\n        <div className=\"text-center mb-20 animate-fade-in-up\">\n          <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)] border border-[var(--border)] rounded-full mb-6\">\n            <i className=\"fas fa-store text-[var(--primary)] mr-2\"></i>\n            <span className=\"text-sm text-[var(--text-secondary)]\">\n              {t(\"Nos clients partenaires\", \"Our partner clients\")}\n            </span>\n          </div>\n          \n          <h2 className=\"text-4xl md:text-6xl font-bold mb-6\">\n            <span className=\"text-[var(--text-primary)]\">\n              {t(\"Ils nous font\", \"They trust\")}\n            </span>\n            <br />\n            <span className=\"gradient-text-modern\">\n              {t(\"confiance\", \"us\")}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto\">\n            {t(\n              \"Découvrez les restaurants qui ont choisi SAMEATS pour digitaliser leur business et booster leurs ventes\",\n              \"Discover the restaurants that chose SAMEATS to digitize their business and boost their sales\"\n            )}\n          </p>\n        </div>\n\n        {/* Clients Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {clients.map((client, index) => (\n            <div\n              key={index}\n              className=\"group animate-fade-in-up\"\n              style={{ animationDelay: `${index * 150}ms` }}\n            >\n              <div className=\"modern-card overflow-hidden h-full\">\n                {/* Image */}\n                <div className=\"relative overflow-hidden\">\n                  <img \n                    src={client.image}\n                    alt={client.name}\n                    className=\"w-full h-64 object-cover group-hover:scale-110 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\"></div>\n                  <div className=\"absolute bottom-4 left-4 right-4\">\n                    <div className=\"inline-flex items-center px-3 py-1 bg-white/90 backdrop-blur-sm rounded-full text-xs font-medium text-gray-800\">\n                      <i className=\"fas fa-map-marker-alt mr-1 text-[var(--primary)]\"></i>\n                      {client.location}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Content */}\n                <div className=\"p-6\">\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-xl font-bold text-[var(--text-primary)] mb-1\">\n                        {client.name}\n                      </h3>\n                      <p className=\"text-sm text-[var(--primary)] font-medium\">\n                        {client.type}\n                      </p>\n                    </div>\n                    <div className=\"w-10 h-10 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-xl flex items-center justify-center\">\n                      <i className=\"fas fa-check text-white text-sm\"></i>\n                    </div>\n                  </div>\n                  \n                  <p className=\"text-[var(--text-secondary)] text-sm leading-relaxed mb-4\">\n                    {client.description}\n                  </p>\n\n                  <div className=\"flex items-center justify-between pt-4 border-t border-[var(--border)]\">\n                    <div className=\"flex items-center text-xs text-[var(--text-muted)]\">\n                      <i className=\"fas fa-star text-[var(--accent)] mr-1\"></i>\n                      <span>{t(\"Client SAMEATS\", \"SAMEATS Client\")}</span>\n                    </div>\n                    <div className=\"flex items-center text-xs text-[var(--success)]\">\n                      <div className=\"w-2 h-2 bg-[var(--success)] rounded-full mr-2 animate-pulse\"></div>\n                      <span>{t(\"Actif\", \"Active\")}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Stats Section */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-16\">\n          {[\n            { value: \"15+\", label: t(\"Restaurants clients\", \"Restaurant clients\"), icon: \"fas fa-store\" },\n            { value: \"3\", label: t(\"Pays actifs\", \"Active countries\"), icon: \"fas fa-globe\" },\n            { value: \"50K+\", label: t(\"Commandes traitées\", \"Orders processed\"), icon: \"fas fa-shopping-cart\" },\n            { value: \"98%\", label: t(\"Satisfaction client\", \"Client satisfaction\"), icon: \"fas fa-heart\" }\n          ].map((stat, index) => (\n            <div\n              key={index}\n              className=\"modern-card p-6 text-center group animate-fade-in-up\"\n              style={{ animationDelay: `${index * 100 + 750}ms` }}\n            >\n              <div className=\"w-12 h-12 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform\">\n                <i className={`${stat.icon} text-white`}></i>\n              </div>\n              <div className=\"text-2xl md:text-3xl font-bold gradient-text-modern mb-1\">\n                {stat.value}\n              </div>\n              <div className=\"text-[var(--text-secondary)] text-sm\">\n                {stat.label}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* CTA Section */}\n        <div className=\"text-center animate-fade-in-up\" style={{ animationDelay: \"1000ms\" }}>\n          <div className=\"modern-card p-8 bg-gradient-to-r from-[var(--surface)] to-[var(--surface-light)]\">\n            <h3 className=\"text-2xl font-bold text-[var(--text-primary)] mb-4\">\n              {t(\"Rejoignez nos clients satisfaits\", \"Join our satisfied clients\")}\n            </h3>\n            <p className=\"text-[var(--text-secondary)] mb-6 max-w-2xl mx-auto\">\n              {t(\n                \"Vous aussi, digitalisez votre restaurant et augmentez vos ventes avec SAMEATS\",\n                \"You too, digitize your restaurant and increase your sales with SAMEATS\"\n              )}\n            </p>\n            <button className=\"inline-flex items-center px-8 py-4 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white font-semibold rounded-xl hover:shadow-xl transform hover:scale-105 transition-all duration-300\">\n              <i className=\"fas fa-rocket mr-2\"></i>\n              <span>{t(\"Commencer maintenant\", \"Start now\")}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":9906},"client/src/components/modern-client-showcase.tsx":{"content":"import { useLanguage } from \"./language-provider\";\nimport poste1 from \"@assets/Poste 1_1755215451809.jpg\";\nimport poste2 from \"@assets/Poste 2_1755215451814.jpg\";\nimport poste3 from \"@assets/Poste 3_1755215451814.jpg\";\nimport poste4 from \"@assets/Poste 4_1755215451814.jpg\";\nimport poste5 from \"@assets/Poste 5_1755215451815.jpg\";\n\nexport function ModernClientShowcase() {\n  const { t } = useLanguage();\n\n  const clients = [\n    {\n      name: \"T9 Restaurant\",\n      type: t(\"Restaurant & Grill\", \"Restaurant & Grill\"),\n      revenue: \"+45%\",\n      orders: \"2,500+\",\n      quote: t(\n        \"Sameats a transformé notre façon de gérer les commandes. Nos ventes ont explosé depuis la mise en place !\",\n        \"Sameats transformed how we manage orders. Our sales have exploded since implementation!\"\n      ),\n      image: poste1,\n      logo: \"T9\",\n      growth: \"+45%\",\n      metric: t(\"de CA en plus\", \"revenue increase\"),\n      website: \"https://www.t9-restaurant.fr/\"\n    },\n    {\n      name: \"Campus Food Court\",\n      type: t(\"Food Court\", \"Food Court\"),\n      revenue: \"+60%\",\n      orders: \"4,200+\",\n      quote: t(\n        \"Interface intuitive et intégrations parfaites. Le support est exceptionnel, je recommande vivement !\",\n        \"Intuitive interface and perfect integrations. Exceptional support, I highly recommend!\"\n      ),\n      image: poste2,\n      logo: \"CFC\",\n      growth: \"+60%\",\n      metric: t(\"de commandes\", \"more orders\"),\n      website: \"https://www.campusfoodcourt.fr/\"\n    },\n    {\n      name: \"First Pizza\",\n      type: t(\"Pizzeria\", \"Pizzeria\"),\n      revenue: \"+38%\",\n      orders: \"1,800+\",\n      quote: t(\n        \"La solution complète dont nous avions besoin. Nos clients adorent commander via l'app !\",\n        \"The complete solution we needed. Our customers love ordering through the app!\"\n      ),\n      image: poste3,\n      logo: \"FP\",\n      growth: \"+38%\",\n      metric: t(\"de satisfaction client\", \"customer satisfaction\"),\n      website: \"https://www.firstpizza60.fr/\"\n    },\n    {\n      name: \"Patroné Forno\",\n      type: t(\"Pizzeria italienne\", \"Italian pizzeria\"),\n      revenue: \"+52%\",\n      orders: \"3,100+\",\n      quote: t(\n        \"Grâce à Sameats, nous avons doublé notre chiffre d'affaires en 6 mois !\",\n        \"Thanks to Sameats, we doubled our revenue in 6 months!\"\n      ),\n      image: poste4,\n      logo: \"PF\",\n      growth: \"+52%\",\n      metric: t(\"de croissance\", \"growth\"),\n      website: \"https://www.patroneforno.fr/\"\n    },\n    {\n      name: \"Sidi Bou Le Mans\",\n      type: t(\"Restaurant traditionnel\", \"Traditional restaurant\"),\n      revenue: \"+35%\",\n      orders: \"2,800+\",\n      quote: t(\n        \"Une solution moderne qui respecte nos traditions. Parfait pour notre clientèle !\",\n        \"A modern solution that respects our traditions. Perfect for our clientele!\"\n      ),\n      image: poste5,\n      logo: \"SBLM\",\n      growth: \"+35%\",\n      metric: t(\"de fidélisation\", \"customer retention\"),\n      website: \"https://www.sidibou-lemans.fr/\"\n    },\n    {\n      name: \"World Food\",\n      type: t(\"Restaurant international\", \"International restaurant\"),\n      revenue: \"+28%\",\n      orders: \"1,900+\",\n      quote: t(\n        \"SAMEATS nous a permis d'atteindre une clientèle plus large avec notre cuisine du monde !\",\n        \"SAMEATS allowed us to reach a wider audience with our world cuisine!\"\n      ),\n      image: poste1,\n      logo: \"WF\",\n      growth: \"+28%\",\n      metric: t(\"de nouveaux clients\", \"new customers\"),\n      website: \"https://www.worldfood-75.fr/\"\n    }\n  ];\n\n  const stats = [\n    { value: \"15+\", label: t(\"Restaurants\", \"Restaurants\") },\n    { value: \"3\", label: t(\"Pays\", \"Countries\") },\n    { value: \"98%\", label: t(\"Satisfaction\", \"Satisfaction\") },\n    { value: \"€2M+\", label: t(\"CA généré\", \"Revenue generated\") }\n  ];\n\n  return (\n    <section className=\"py-24 relative overflow-hidden\">\n      {/* Background */}\n      <div className=\"absolute inset-0 bg-[var(--surface)]/30\"></div>\n      <div className=\"absolute inset-0 line-pattern\"></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative\">\n        {/* Section Header */}\n        <div className=\"text-center mb-16 animate-fade-in-up\">\n          <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)] border border-[var(--border)] rounded-full mb-6\">\n            <div className=\"w-2 h-2 bg-[var(--success)] rounded-full mr-2 animate-pulse\"></div>\n            <span className=\"text-sm text-[var(--text-secondary)]\">\n              {t(\"Nos clients\", \"Our clients\")}\n            </span>\n          </div>\n          \n          <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n            <span className=\"text-[var(--text-primary)]\">\n              {t(\"Nous travaillons avec\", \"We work with\")}\n            </span>\n            <br />\n            <span className=\"gradient-text-modern\">\n              {t(\"votre entreprise\", \"your business\")}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto\">\n            {t(\n              \"Optimisez l'efficacité de votre restaurant grâce à des intégrations fluides pour la commande en ligne\",\n              \"Enhance your restaurant's efficiency with seamless integrations for online ordering\"\n            )}\n          </p>\n        </div>\n\n        {/* Client Testimonials Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {clients.map((client, index) => (\n            <div\n              key={index}\n              className=\"modern-card p-6 hover:shadow-xl transition-all duration-300 animate-fade-in-up group\"\n              style={{ animationDelay: `${index * 100}ms` }}\n            >\n              {/* Client Header */}\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-14 h-14 rounded-xl overflow-hidden bg-[var(--surface-light)] border border-[var(--border)] mr-4 flex-shrink-0\">\n                  <img \n                    src={client.image} \n                    alt={client.name}\n                    className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-300\"\n                  />\n                </div>\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center justify-between mb-1\">\n                    <h4 className=\"font-bold text-[var(--text-primary)] text-sm\">\n                      {client.name}\n                    </h4>\n                    <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] flex items-center justify-center\">\n                      <span className=\"text-white font-bold text-xs\">\n                        {client.logo}\n                      </span>\n                    </div>\n                  </div>\n                  <p className=\"text-xs text-[var(--text-secondary)]\">\n                    {client.type}\n                  </p>\n                </div>\n              </div>\n              \n              {/* Quote */}\n              <blockquote className=\"text-sm text-[var(--text-primary)] leading-relaxed mb-4 italic min-h-[60px]\">\n                \"{client.quote}\"\n              </blockquote>\n              \n              {/* Metrics */}\n              <div className=\"flex items-center justify-between pt-4 border-t border-[var(--border)]\">\n                <div className=\"text-center flex-1\">\n                  <div className=\"text-lg font-bold gradient-text-modern\">\n                    {client.growth}\n                  </div>\n                  <div className=\"text-xs text-[var(--text-muted)]\">\n                    {client.metric}\n                  </div>\n                </div>\n                <div className=\"w-px h-8 bg-[var(--border)] mx-3\"></div>\n                <div className=\"text-center flex-1\">\n                  <div className=\"text-lg font-bold text-[var(--primary)]\">\n                    {client.orders}\n                  </div>\n                  <div className=\"text-xs text-[var(--text-muted)]\">\n                    {t(\"commandes/mois\", \"orders/month\")}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Stats Grid */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-16\">\n          {stats.map((stat, index) => (\n            <div\n              key={index}\n              className=\"modern-card p-6 text-center group animate-fade-in-up\"\n              style={{ animationDelay: `${index * 100 + 500}ms` }}\n            >\n              <div className=\"text-3xl md:text-4xl font-bold gradient-text-modern mb-2 group-hover:scale-110 transition-transform duration-300\">\n                {stat.value}\n              </div>\n              <div className=\"text-[var(--text-secondary)] text-sm md:text-base\">\n                {stat.label}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Trust Badges */}\n        <div className=\"text-center animate-fade-in-up\" style={{ animationDelay: \"600ms\" }}>\n          <div className=\"inline-flex items-center space-x-8 px-8 py-4 bg-[var(--surface)]/50 backdrop-blur-sm border border-[var(--border)] rounded-2xl\">\n            <div className=\"flex items-center text-sm text-[var(--text-secondary)]\">\n              <i className=\"fas fa-shield-check text-[var(--success)] mr-2\"></i>\n              <span>{t(\"Certifié RGPD\", \"GDPR Certified\")}</span>\n            </div>\n            <div className=\"w-px h-4 bg-[var(--border)]\"></div>\n            <div className=\"flex items-center text-sm text-[var(--text-secondary)]\">\n              <i className=\"fas fa-award text-[var(--primary)] mr-2\"></i>\n              <span>{t(\"15+ clients satisfaits\", \"15+ satisfied clients\")}</span>\n            </div>\n            <div className=\"w-px h-4 bg-[var(--border)]\"></div>\n            <div className=\"flex items-center text-sm text-[var(--text-secondary)]\">\n              <i className=\"fas fa-globe text-[var(--accent)] mr-2\"></i>\n              <span>{t(\"3 pays\", \"3 countries\")}</span>\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n    </section>\n  );\n}","size_bytes":10170},"client/src/components/modern-features-advanced.tsx":{"content":"import { useState } from \"react\";\nimport { useLanguage } from \"./language-provider\";\nimport mobileAppImage from \"@assets/Poste-Layout_05_1755216769453.jpg\";\nimport desktopLoginImage from \"@assets/Poste-Layout_03_1755216769456.jpg\";\nimport mobileDesktopImage from \"@assets/Poste-Layout_04_1755216769457.jpg\";\nimport contactFormImage from \"@assets/Poste-Layout_06_1755216769457.jpg\";\nimport pricingImage from \"@assets/Poste-Layout_02_1755216769457.jpg\";\n\nexport function ModernFeaturesAdvanced() {\n  const { t } = useLanguage();\n  const [activeFeature, setActiveFeature] = useState(0);\n\n  const mainFeatures = [\n    {\n      id: \"mobile-apps\",\n      icon: \"fas fa-mobile-alt\",\n      title: t(\"Applications Mobiles\", \"Mobile Applications\"),\n      shortDesc: t(\"Apps iOS & Android\", \"iOS & Android Apps\"),\n      description: t(\n        \"Applications mobiles complètes avec interface de commande intuitive, promotions en temps réel et gestion des commandes pour vos clients.\",\n        \"Complete mobile applications with intuitive ordering interface, real-time promotions and order management for your customers.\"\n      ),\n      image: mobileAppImage,\n      features: [\n        t(\"Interface de commande intuitive\", \"Intuitive ordering interface\"),\n        t(\"Promotions et événements\", \"Promotions and events\"),\n        t(\"Suivi commandes en temps réel\", \"Real-time order tracking\"),\n        t(\"Programme de fidélité intégré\", \"Integrated loyalty program\")\n      ],\n      color: \"from-[var(--primary)] to-[var(--accent)]\"\n    },\n    {\n      id: \"desktop-solution\",\n      icon: \"fas fa-desktop\",\n      title: t(\"Solution Desktop\", \"Desktop Solution\"),\n      shortDesc: t(\"Interface web complète\", \"Complete web interface\"),\n      description: t(\n        \"Solution de commande en ligne 100% personnalisée pour restaurants avec interface d'administration complète et tableau de connexion sécurisé.\",\n        \"100% customized online ordering solution for restaurants with complete admin interface and secure login dashboard.\"\n      ),\n      image: desktopLoginImage,\n      features: [\n        t(\"Solution 100% personnalisée\", \"100% customized solution\"),\n        t(\"Interface d'administration\", \"Admin interface\"),\n        t(\"Connexion sécurisée\", \"Secure login\"),\n        t(\"Gestion complète restaurant\", \"Complete restaurant management\")\n      ],\n      color: \"from-blue-500 to-cyan-400\"\n    },\n    {\n      id: \"cross-platform\",\n      icon: \"fas fa-laptop-mobile\",\n      title: t(\"Multi-Plateformes\", \"Cross-Platform\"),\n      shortDesc: t(\"Disponible partout\", \"Available everywhere\"),\n      description: t(\n        \"Applications disponibles sur iOS & Android avec interface desktop synchronisée. Vos clients commandent depuis n'importe quel appareil.\",\n        \"Applications available on iOS & Android with synchronized desktop interface. Your customers order from any device.\"\n      ),\n      image: mobileDesktopImage,\n      features: [\n        t(\"Applications iOS & Android\", \"iOS & Android applications\"),\n        t(\"Interface desktop\", \"Desktop interface\"),\n        t(\"Synchronisation en temps réel\", \"Real-time synchronization\"),\n        t(\"Expérience utilisateur uniforme\", \"Unified user experience\")\n      ],\n      color: \"from-purple-500 to-pink-500\"\n    }\n  ];\n\n  const additionalFeatures = [\n    {\n      icon: \"fas fa-truck\",\n      title: t(\"Livraison Intelligente\", \"Smart Delivery\"),\n      description: t(\"Optimisation automatique des trajets et suivi en temps réel\", \"Automatic route optimization and real-time tracking\"),\n      metric: \"90%\",\n      metricLabel: t(\"plus rapide\", \"faster\")\n    },\n    {\n      icon: \"fas fa-credit-card\", \n      title: t(\"Paiements Sécurisés\", \"Secure Payments\"),\n      description: t(\"Intégration complète avec tous les moyens de paiement\", \"Complete integration with all payment methods\"),\n      metric: \"100%\",\n      metricLabel: t(\"sécurisé\", \"secure\")\n    },\n    {\n      icon: \"fas fa-users\",\n      title: t(\"Fidélisation Client\", \"Customer Loyalty\"),\n      description: t(\"Programme de fidélité et marketing automatisé\", \"Loyalty program and automated marketing\"),\n      metric: \"+65%\",\n      metricLabel: t(\"rétention\", \"retention\")\n    },\n    {\n      icon: \"fas fa-cog\",\n      title: t(\"Intégrations\", \"Integrations\"),\n      description: t(\"Connectez vos outils favoris et automatisez votre workflow\", \"Connect your favorite tools and automate your workflow\"),\n      metric: \"50+\",\n      metricLabel: t(\"intégrations\", \"integrations\")\n    }\n  ];\n\n  return (\n    <section className=\"py-24 relative overflow-hidden\">\n      {/* Background */}\n      <div className=\"absolute inset-0 bg-gradient-to-b from-[var(--background)] to-[var(--surface)]/30\"></div>\n      <div className=\"absolute inset-0 dot-pattern opacity-40\"></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative\">\n        {/* Header */}\n        <div className=\"text-center mb-20 animate-fade-in-up\">\n          <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)] border border-[var(--border)] rounded-full mb-6\">\n            <i className=\"fas fa-rocket text-[var(--primary)] mr-2\"></i>\n            <span className=\"text-sm text-[var(--text-secondary)]\">\n              {t(\"Fonctionnalités avancées\", \"Advanced features\")}\n            </span>\n          </div>\n          \n          <h2 className=\"text-4xl md:text-6xl font-bold mb-6\">\n            <span className=\"text-[var(--text-primary)]\">\n              {t(\"Tout ce dont vous avez\", \"Everything you need\")}\n            </span>\n            <br />\n            <span className=\"gradient-text-modern\">\n              {t(\"besoin pour réussir\", \"to succeed\")}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto\">\n            {t(\n              \"Une solution complète qui s'adapte à votre restaurant et évolue avec votre business\",\n              \"A complete solution that adapts to your restaurant and grows with your business\"\n            )}\n          </p>\n        </div>\n\n        {/* Main Features Showcase */}\n        <div className=\"mb-20\">\n          {/* Feature Navigation */}\n          <div className=\"flex flex-wrap justify-center gap-4 mb-12\">\n            {mainFeatures.map((feature, index) => (\n              <button\n                key={feature.id}\n                onClick={() => setActiveFeature(index)}\n                className={`px-6 py-3 rounded-xl font-semibold transition-all duration-300 ${\n                  activeFeature === index\n                    ? 'bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white shadow-lg scale-105'\n                    : 'bg-[var(--surface)] text-[var(--text-secondary)] hover:text-[var(--text-primary)] hover:bg-[var(--surface-light)]'\n                }`}\n              >\n                <i className={`${feature.icon} mr-2`}></i>\n                {feature.shortDesc}\n              </button>\n            ))}\n          </div>\n\n          {/* Active Feature Display */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            {/* Feature Info */}\n            <div className=\"space-y-6 animate-slide-in-left\">\n              <div className=\"inline-flex items-center px-4 py-2 bg-gradient-to-r from-[var(--primary)]/10 to-[var(--accent)]/10 border border-[var(--primary)]/20 rounded-full\">\n                <i className={`${mainFeatures[activeFeature].icon} text-[var(--primary)] mr-2`}></i>\n                <span className=\"text-sm font-medium text-[var(--primary)]\">\n                  {mainFeatures[activeFeature].title}\n                </span>\n              </div>\n              \n              <h3 className=\"text-3xl font-bold text-[var(--text-primary)]\">\n                {mainFeatures[activeFeature].title}\n              </h3>\n              \n              <p className=\"text-lg text-[var(--text-secondary)] leading-relaxed\">\n                {mainFeatures[activeFeature].description}\n              </p>\n              \n              <div className=\"space-y-3\">\n                {mainFeatures[activeFeature].features.map((item, index) => (\n                  <div key={index} className=\"flex items-center\">\n                    <div className=\"w-2 h-2 bg-[var(--primary)] rounded-full mr-3\"></div>\n                    <span className=\"text-[var(--text-primary)]\">{item}</span>\n                  </div>\n                ))}\n              </div>\n              \n              <button \n                className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white font-semibold rounded-xl hover:shadow-lg transform hover:scale-105 transition-all duration-300\"\n                onClick={() => {\n                  const contactSection = document.getElementById('contact');\n                  contactSection?.scrollIntoView({ behavior: 'smooth' });\n                }}\n              >\n                <span>{t(\"En savoir plus\", \"Learn more\")}</span>\n                <i className=\"fas fa-arrow-right ml-2\"></i>\n              </button>\n            </div>\n\n            {/* Feature Visual */}\n            <div className=\"animate-slide-in-right\">\n              <div className=\"relative\">\n                <div className=\"absolute -inset-4 bg-gradient-to-r from-[var(--primary)]/20 to-[var(--accent)]/20 rounded-3xl blur-xl\"></div>\n                <div className=\"relative modern-card p-6 overflow-hidden\">\n                  <img \n                    src={mainFeatures[activeFeature].image}\n                    alt={mainFeatures[activeFeature].title}\n                    className=\"w-full h-auto rounded-xl transform hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-[var(--background)]/50 to-transparent rounded-xl\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Additional Features Grid */}\n        <div className=\"animate-fade-in-up\">\n          <h3 className=\"text-3xl font-bold text-center text-[var(--text-primary)] mb-12\">\n            {t(\"Et bien plus encore...\", \"And much more...\")}\n          </h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {additionalFeatures.map((feature, index) => (\n              <div\n                key={index}\n                className=\"modern-card p-6 text-center group hover:shadow-xl transition-all duration-300 animate-fade-in-up\"\n                style={{ animationDelay: `${index * 100}ms` }}\n              >\n                <div className=\"w-16 h-16 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                  <i className={`${feature.icon} text-2xl text-white`}></i>\n                </div>\n                \n                <h4 className=\"text-xl font-bold text-[var(--text-primary)] mb-3\">\n                  {feature.title}\n                </h4>\n                \n                <p className=\"text-[var(--text-secondary)] text-sm mb-4 leading-relaxed\">\n                  {feature.description}\n                </p>\n                \n                <div className=\"pt-4 border-t border-[var(--border)]\">\n                  <div className=\"text-2xl font-bold gradient-text-modern\">\n                    {feature.metric}\n                  </div>\n                  <div className=\"text-xs text-[var(--text-muted)]\">\n                    {feature.metricLabel}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Integration Showcase */}\n        <div className=\"mt-20 text-center animate-fade-in-up\">\n          <h3 className=\"text-2xl font-bold text-[var(--text-primary)] mb-8\">\n            {t(\"Intégrations disponibles\", \"Available integrations\")}\n          </h3>\n          \n          <div className=\"flex flex-wrap items-center justify-center gap-8 opacity-60\">\n            {[\n              { icon: \"fab fa-stripe\", name: \"Stripe\" },\n              { icon: \"fab fa-paypal\", name: \"PayPal\" },\n              { icon: \"fas fa-envelope\", name: \"Email\" },\n              { icon: \"fab fa-whatsapp\", name: \"WhatsApp\" },\n              { icon: \"fab fa-facebook\", name: \"Facebook\" },\n              { icon: \"fab fa-instagram\", name: \"Instagram\" },\n              { icon: \"fab fa-google\", name: \"Google\" },\n              { icon: \"fas fa-chart-bar\", name: \"Analytics\" }\n            ].map((integration, index) => (\n              <div key={index} className=\"flex items-center space-x-2 text-[var(--text-muted)]\">\n                <i className={`${integration.icon} text-xl`}></i>\n                <span className=\"text-sm font-medium\">{integration.name}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":12938},"client/src/components/modern-features-grid.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { useLanguage } from \"./language-provider\";\n\nexport function ModernFeaturesGrid() {\n  const { t } = useLanguage();\n  const [hoveredCard, setHoveredCard] = useState<number | null>(null);\n\n  const features = [\n    {\n      icon: \"fas fa-globe\",\n      title: t(\"Site Web Professionnel\", \"Professional Website\"),\n      description: t(\n        \"Site de commande en ligne responsive et optimisé pour tous les appareils\",\n        \"Responsive online ordering website optimized for all devices\"\n      ),\n      gradient: \"from-blue-500 to-cyan-400\",\n      delay: \"0ms\"\n    },\n    {\n      icon: \"fas fa-mobile-alt\",\n      title: t(\"Applications Mobiles\", \"Mobile Applications\"),\n      description: t(\n        \"Applications iOS et Android natives avec votre marque et vos couleurs\",\n        \"Native iOS and Android apps with your brand and colors\"\n      ),\n      gradient: \"from-purple-500 to-pink-400\",\n      delay: \"100ms\"\n    },\n    {\n      icon: \"fas fa-chart-line\",\n      title: t(\"Back-Office Complet\", \"Complete Back-Office\"),\n      description: t(\n        \"Tableau de bord avancé pour gérer commandes, menu et analytics\",\n        \"Advanced dashboard to manage orders, menu and analytics\"\n      ),\n      gradient: \"from-green-500 to-emerald-400\",\n      delay: \"200ms\"\n    },\n    {\n      icon: \"fas fa-truck\",\n      title: t(\"Gestion Livraison\", \"Delivery Management\"),\n      description: t(\n        \"Système de livraison avec suivi en temps réel et optimisation des trajets\",\n        \"Delivery system with real-time tracking and route optimization\"\n      ),\n      gradient: \"from-orange-500 to-red-400\",\n      delay: \"300ms\"\n    },\n    {\n      icon: \"fas fa-credit-card\",\n      title: t(\"Paiements Sécurisés\", \"Secure Payments\"),\n      description: t(\n        \"Intégration de tous les moyens de paiement avec sécurité bancaire\",\n        \"Integration of all payment methods with banking security\"\n      ),\n      gradient: \"from-indigo-500 to-blue-400\",\n      delay: \"400ms\"\n    },\n    {\n      icon: \"fas fa-users\",\n      title: t(\"Fidélisation Client\", \"Customer Loyalty\"),\n      description: t(\n        \"Programme de fidélité et notifications push pour retenir vos clients\",\n        \"Loyalty program and push notifications to retain your customers\"\n      ),\n      gradient: \"from-pink-500 to-rose-400\",\n      delay: \"500ms\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 relative overflow-hidden\">\n      {/* Background Elements */}\n      <div className=\"absolute inset-0 dot-pattern\"></div>\n      <div className=\"absolute top-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-[var(--border)] to-transparent\"></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative\">\n        {/* Section Header */}\n        <div className=\"text-center mb-16 animate-fade-in-up\">\n          <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)]/50 backdrop-blur-sm border border-[var(--border)] rounded-full mb-6\">\n            <i className=\"fas fa-rocket text-[var(--primary)] mr-2\"></i>\n            <span className=\"text-sm text-[var(--text-secondary)]\">\n              {t(\"Solution complète\", \"Complete solution\")}\n            </span>\n          </div>\n          \n          <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n            <span className=\"gradient-text-modern\">\n              {t(\"Tout ce dont vous avez besoin\", \"Everything you need\")}\n            </span>\n            <br />\n            <span className=\"text-[var(--text-primary)]\">\n              {t(\"pour digitaliser votre restaurant\", \"to digitize your restaurant\")}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto leading-relaxed\">\n            {t(\n              \"Une plateforme complète qui remplace tous vos outils actuels. Site web, applications, back-office et bien plus encore.\",\n              \"A complete platform that replaces all your current tools. Website, applications, back-office and much more.\"\n            )}\n          </p>\n        </div>\n\n        {/* Features Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {features.map((feature, index) => (\n            <div\n              key={index}\n              className=\"group modern-card p-8 relative overflow-hidden animate-fade-in-up\"\n              style={{ animationDelay: feature.delay }}\n              onMouseEnter={() => setHoveredCard(index)}\n              onMouseLeave={() => setHoveredCard(null)}\n            >\n              {/* Background Gradient Effect */}\n              <div \n                className={`absolute inset-0 bg-gradient-to-br ${feature.gradient} opacity-0 group-hover:opacity-5 transition-opacity duration-500`}\n              />\n              \n              {/* Icon */}\n              <div className=\"relative mb-6\">\n                <div className={`w-16 h-16 rounded-2xl bg-gradient-to-br ${feature.gradient} flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300`}>\n                  <i className={`${feature.icon} text-2xl text-white`}></i>\n                </div>\n              </div>\n\n              {/* Content */}\n              <div className=\"relative\">\n                <h3 className=\"text-xl font-bold text-[var(--text-primary)] mb-3 group-hover:text-[var(--primary)] transition-colors\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-[var(--text-secondary)] leading-relaxed\">\n                  {feature.description}\n                </p>\n              </div>\n\n              {/* Hover Effect */}\n              <div className=\"absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left\"></div>\n            </div>\n          ))}\n        </div>\n\n        {/* CTA Section */}\n        <div className=\"text-center animate-fade-in-up\" style={{ animationDelay: \"600ms\" }}>\n          <div className=\"max-w-2xl mx-auto bg-[var(--surface)]/50 backdrop-blur-sm border border-[var(--border)] rounded-2xl p-8 md:p-12\">\n            <h3 className=\"text-2xl md:text-3xl font-bold text-[var(--text-primary)] mb-4\">\n              {t(\"Prêt à transformer votre restaurant ?\", \"Ready to transform your restaurant?\")}\n            </h3>\n            <p className=\"text-[var(--text-secondary)] mb-8 text-lg\">\n              {t(\n                \"Rejoignez plus de 500 restaurants qui nous font confiance\",\n                \"Join over 500 restaurants who trust us\"\n              )}\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <button className=\"btn-modern-primary text-lg\">\n                  {t(\"Commencer maintenant\", \"Start now\")}\n                  <i className=\"fas fa-arrow-right ml-2\"></i>\n                </button>\n              </Link>\n              \n              <Link href=\"/features\">\n                <button className=\"btn-modern-secondary text-lg\">\n                  <i className=\"fas fa-play mr-2\"></i>\n                  {t(\"Voir toutes les fonctionnalités\", \"See all features\")}\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":7427},"client/src/components/modern-footer.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { useLanguage } from \"./language-provider\";\nimport sameatsLogo from \"@assets/logo-blanc_1755211740901.png\";\n\nexport function ModernFooter() {\n  const { t, language, setLanguage } = useLanguage();\n  const [newsletterEmail, setNewsletterEmail] = useState(\"\");\n  const [isSubscribing, setIsSubscribing] = useState(false);\n  const [subscriptionMessage, setSubscriptionMessage] = useState(\"\");\n\n  const footerSections = [\n    {\n      title: t(\"Produit\", \"Product\"),\n      links: [\n        { name: t(\"Fonctionnalités\", \"Features\"), href: \"/features\" },\n        { name: t(\"Tarifs\", \"Pricing\"), href: \"/pricing\" },\n        { name: t(\"Démonstration\", \"Demo\"), href: \"/contact\" },\n        { name: t(\"Intégrations\", \"Integrations\"), href: \"/features\" }\n      ]\n    },\n    {\n      title: t(\"Entreprise\", \"Company\"),\n      links: [\n        { name: t(\"À propos\", \"About\"), href: \"/about\" },\n        { name: t(\"Contact\", \"Contact\"), href: \"/contact\" },\n        { name: t(\"Blog\", \"Blog\"), href: \"/blog\" },\n        { name: t(\"Carrières\", \"Careers\"), href: \"/careers\" }\n      ]\n    },\n    {\n      title: t(\"Support\", \"Support\"),\n      links: [\n        { name: t(\"Centre d'aide\", \"Help Center\"), href: \"/help\" },\n        { name: t(\"Documentation\", \"Documentation\"), href: \"/docs\" },\n        { name: t(\"Formation\", \"Training\"), href: \"/training\" },\n        { name: t(\"Statut\", \"Status\"), href: \"/status\" }\n      ]\n    },\n    {\n      title: t(\"Légal\", \"Legal\"),\n      links: [\n        { name: t(\"Confidentialité\", \"Privacy\"), href: \"/privacy\" },\n        { name: t(\"Conditions\", \"Terms\"), href: \"/terms\" },\n        { name: t(\"Cookies\", \"Cookies\"), href: \"/cookies\" },\n        { name: t(\"RGPD\", \"GDPR\"), href: \"/gdpr\" }\n      ]\n    }\n  ];\n\n  const socialLinks = [\n    { icon: \"fab fa-twitter\", href: \"https://twitter.com/sameats_fr\", name: \"Twitter\" },\n    { icon: \"fab fa-linkedin\", href: \"https://linkedin.com/company/sameats\", name: \"LinkedIn\" },\n    { icon: \"fab fa-facebook\", href: \"https://facebook.com/sameats.fr\", name: \"Facebook\" },\n    { icon: \"fab fa-instagram\", href: \"https://instagram.com/sameats_fr\", name: \"Instagram\" }\n  ];\n\n  const handleNewsletterSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newsletterEmail.trim()) return;\n\n    setIsSubscribing(true);\n    setSubscriptionMessage(\"\");\n\n    try {\n      const response = await fetch('/api/newsletter', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: newsletterEmail }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setSubscriptionMessage(t(\"Inscription réussie !\", \"Subscription successful!\"));\n        setNewsletterEmail(\"\");\n      } else {\n        setSubscriptionMessage(t(\"Erreur lors de l'inscription\", \"Subscription failed\"));\n      }\n    } catch (error) {\n      setSubscriptionMessage(t(\"Erreur réseau\", \"Network error\"));\n    } finally {\n      setIsSubscribing(false);\n      setTimeout(() => setSubscriptionMessage(\"\"), 5000);\n    }\n  };\n\n  return (\n    <footer className=\"bg-[var(--surface)] border-t border-[var(--border)] relative overflow-hidden\">\n      {/* Background Pattern */}\n      <div className=\"absolute inset-0 dot-pattern opacity-30\"></div>\n      \n      <div className=\"container-responsive relative\">\n        {/* Main Footer Content */}\n        <div className=\"py-12 sm:py-16\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-8 sm:gap-12\">\n            {/* Brand Section */}\n            <div className=\"sm:col-span-2 lg:col-span-2\">\n              <Link href=\"/\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3 mb-4 sm:mb-6 cursor-pointer group\">\n                  <img \n                    src={sameatsLogo} \n                    alt=\"SAMEATS\" \n                    className=\"h-8 sm:h-10 w-auto transition-transform group-hover:scale-105\"\n                  />\n                  <span className=\"text-xl sm:text-2xl font-bold bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] bg-clip-text text-transparent\">\n                    SAMEATS\n                  </span>\n                </div>\n              </Link>\n              \n              <p className=\"text-[var(--text-secondary)] mb-4 sm:mb-6 leading-relaxed max-w-md text-sm sm:text-base\">\n                {t(\n                  \"La solution complète pour digitaliser votre restaurant sans commission. Plus de 500 restaurants nous font confiance.\",\n                  \"The complete solution to digitize your restaurant without commission. Over 500 restaurants trust us.\"\n                )}\n              </p>\n\n              {/* Newsletter Signup */}\n              <div className=\"mb-6 sm:mb-8\">\n                <h4 className=\"font-semibold text-[var(--text-primary)] mb-3 text-sm sm:text-base\">\n                  {t(\"Restez informé\", \"Stay updated\")}\n                </h4>\n                <form onSubmit={handleNewsletterSubmit} className=\"flex flex-col sm:flex-row gap-2\">\n                  <input\n                    type=\"email\"\n                    value={newsletterEmail}\n                    onChange={(e) => setNewsletterEmail(e.target.value)}\n                    placeholder={t(\"Votre email\", \"Your email\")}\n                    className=\"flex-1 px-3 sm:px-4 py-2.5 bg-[var(--surface-light)] border border-[var(--border)] rounded-lg text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:outline-none focus:border-[var(--primary)] transition-colors text-sm sm:text-base touch-target\"\n                    required\n                    disabled={isSubscribing}\n                  />\n                  <button \n                    type=\"submit\"\n                    disabled={isSubscribing || !newsletterEmail.trim()}\n                    className=\"px-4 sm:px-6 py-2.5 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white rounded-lg hover:shadow-[var(--shadow-glow)] transition-all duration-300 hover:scale-105 touch-target mobile-no-hover disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isSubscribing ? (\n                      <i className=\"fas fa-spinner fa-spin\"></i>\n                    ) : (\n                      <i className=\"fas fa-arrow-right\"></i>\n                    )}\n                  </button>\n                </form>\n                {subscriptionMessage && (\n                  <div className={`mt-2 text-xs sm:text-sm ${subscriptionMessage.includes('réussie') || subscriptionMessage.includes('successful') ? 'text-green-500' : 'text-red-500'}`}>\n                    {subscriptionMessage}\n                  </div>\n                )}\n              </div>\n\n              {/* Social Links */}\n              <div className=\"flex space-x-3 sm:space-x-4\">\n                {socialLinks.map((social, index) => (\n                  <a\n                    key={index}\n                    href={social.href}\n                    className=\"w-10 h-10 bg-[var(--surface-light)] border border-[var(--border)] rounded-lg flex items-center justify-center text-[var(--text-secondary)] hover:text-[var(--primary)] hover:border-[var(--primary)] transition-all duration-300 hover:scale-110 touch-target mobile-no-hover\"\n                    aria-label={social.name}\n                  >\n                    <i className={`${social.icon} text-sm`}></i>\n                  </a>\n                ))}\n              </div>\n            </div>\n\n            {/* Footer Links */}\n            <div className=\"sm:col-span-2 lg:col-span-3\">\n              <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-6 sm:gap-8\">\n                {footerSections.map((section, index) => (\n                  <div key={index}>\n                    <h4 className=\"font-semibold text-[var(--text-primary)] mb-3 sm:mb-4 text-sm sm:text-base\">\n                      {section.title}\n                    </h4>\n                    <ul className=\"space-y-2 sm:space-y-3\">\n                      {section.links.map((link, linkIndex) => (\n                        <li key={linkIndex}>\n                          <Link href={link.href}>\n                            <span className=\"text-[var(--text-secondary)] hover:text-[var(--primary)] transition-colors cursor-pointer text-xs sm:text-sm touch-target\">\n                              {link.name}\n                            </span>\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"py-6 sm:py-8 border-t border-[var(--border)]\">\n          <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\n            {/* Copyright */}\n            <div className=\"text-[var(--text-muted)] text-xs sm:text-sm text-center sm:text-left\">\n              © {new Date().getFullYear()} SAMEATS. {t(\"Tous droits réservés.\", \"All rights reserved.\")}\n            </div>\n\n            {/* Language Switcher */}\n            <div className=\"flex items-center gap-3 sm:gap-4\">\n              <span className=\"text-[var(--text-muted)] text-xs sm:text-sm\">\n                {t(\"Langue:\", \"Language:\")}\n              </span>\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => setLanguage('fr')}\n                  className={`px-2 sm:px-3 py-1.5 text-xs sm:text-sm rounded-lg transition-all touch-target ${\n                    language === 'fr'\n                      ? 'bg-[var(--primary)] text-white'\n                      : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)] hover:bg-[var(--surface-light)]'\n                  }`}\n                >\n                  🇫🇷 FR\n                </button>\n                <button\n                  onClick={() => setLanguage('en')}\n                  className={`px-2 sm:px-3 py-1.5 text-xs sm:text-sm rounded-lg transition-all touch-target ${\n                    language === 'en'\n                      ? 'bg-[var(--primary)] text-white'\n                      : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)] hover:bg-[var(--surface-light)]'\n                  }`}\n                >\n                  🇺🇸 EN\n                </button>\n              </div>\n            </div>\n\n            {/* Contact Info - Hidden on mobile */}\n            <div className=\"hidden lg:flex items-center gap-4 xl:gap-6 text-xs sm:text-sm text-[var(--text-muted)]\">\n              <div className=\"flex items-center gap-2\">\n                <i className=\"fas fa-envelope text-[var(--primary)]\"></i>\n                <span>contact@sameats.com</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <i className=\"fas fa-phone text-[var(--primary)]\"></i>\n                <span>+33 1 23 45 67 89</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Call to Action - Hidden on mobile footer */}\n        <div className=\"hidden sm:block absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n          <Link href=\"/contact\">\n            <div className=\"bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white px-6 sm:px-8 py-3 sm:py-4 rounded-xl shadow-[var(--shadow-glow)] hover:scale-105 transition-all duration-300 cursor-pointer mobile-no-hover\">\n              <div className=\"text-center\">\n                <div className=\"font-semibold mb-1 text-sm sm:text-base\">\n                  {t(\"Prêt à commencer ?\", \"Ready to get started?\")}\n                </div>\n                <div className=\"text-xs sm:text-sm opacity-90\">\n                  {t(\"Contactez-nous dès maintenant\", \"Contact us now\")}\n                </div>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":11976},"client/src/components/modern-hero.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport { useLanguage } from \"./language-provider\";\n\nexport function ModernHero() {\n  const { t } = useLanguage();\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      setMousePosition({\n        x: (e.clientX / window.innerWidth) * 100,\n        y: (e.clientY / window.innerHeight) * 100,\n      });\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, []);\n\n  const features = [\n    { icon: \"fas fa-globe\", text: t(\"Site web professionnel\", \"Professional website\") },\n    { icon: \"fas fa-mobile-alt\", text: t(\"Applications mobiles\", \"Mobile apps\") },\n    { icon: \"fas fa-chart-line\", text: t(\"Back-office complet\", \"Complete back-office\") },\n    { icon: \"fas fa-percent\", text: t(\"0% commission\", \"0% commission\") }\n  ];\n\n  const stats = [\n    { number: \"15+\", label: t(\"Restaurants\", \"Restaurants\") },\n    { number: \"3\", label: t(\"Pays\", \"Countries\") },\n    { number: \"98%\", label: t(\"Satisfaction\", \"Satisfaction\") },\n    { number: \"24/7\", label: t(\"Support\", \"Support\") }\n  ];\n\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\n      {/* Animated Background */}\n      <div className=\"absolute inset-0 bg-[var(--gradient-hero)]\">\n        {/* Gradient Orbs - Hidden on mobile for performance */}\n        <div \n          className=\"hidden sm:block absolute w-64 sm:w-80 lg:w-96 h-64 sm:h-80 lg:h-96 rounded-full opacity-10 sm:opacity-15 lg:opacity-20 blur-2xl sm:blur-3xl transition-transform duration-1000 ease-out\"\n          style={{\n            background: 'radial-gradient(circle, var(--primary) 0%, transparent 70%)',\n            transform: `translate(${mousePosition.x * 0.3}px, ${mousePosition.y * 0.3}px)`,\n            left: '5%',\n            top: '10%',\n          }}\n        />\n        <div \n          className=\"hidden sm:block absolute w-48 sm:w-64 lg:w-80 h-48 sm:h-64 lg:h-80 rounded-full opacity-8 sm:opacity-12 lg:opacity-15 blur-2xl sm:blur-3xl transition-transform duration-1000 ease-out\"\n          style={{\n            background: 'radial-gradient(circle, var(--accent) 0%, transparent 70%)',\n            transform: `translate(${-mousePosition.x * 0.2}px, ${-mousePosition.y * 0.2}px)`,\n            right: '5%',\n            bottom: '10%',\n          }}\n        />\n        \n        {/* Grid Pattern - Simplified on mobile */}\n        <div \n          className=\"absolute inset-0 opacity-3 sm:opacity-5\"\n          style={{\n            backgroundImage: `linear-gradient(var(--border) 1px, transparent 1px), linear-gradient(90deg, var(--border) 1px, transparent 1px)`,\n            backgroundSize: '30px 30px sm:40px sm:40px lg:50px lg:50px',\n            transform: `translate(${mousePosition.x * 0.05}px, ${mousePosition.y * 0.05}px)`,\n          }}\n        />\n      </div>\n\n      <div className=\"relative container-responsive pt-16 sm:pt-20 lg:pt-24\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Hero Content */}\n          <div className=\"text-center mb-12 sm:mb-16 animate-fade-in-up\">\n            {/* Badge */}\n            <div className=\"inline-flex items-center px-3 sm:px-4 py-2 bg-[var(--surface)]/50 backdrop-blur-sm border border-[var(--border)] rounded-full mb-6 sm:mb-8\">\n              <div className=\"w-2 h-2 bg-[var(--success)] rounded-full mr-2 animate-pulse\"></div>\n              <span className=\"text-xs sm:text-sm text-[var(--text-secondary)]\">\n                {t(\"Solution complète sans commission\", \"Complete solution without commission\")}\n              </span>\n            </div>\n\n            {/* Main Headline */}\n            <h1 className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-bold leading-tight mb-4 sm:mb-6 px-4 sm:px-0\">\n              <span className=\"block text-[var(--text-primary)]\">\n                {t(\"Digitalisez\", \"Digitize\")}\n              </span>\n              <span className=\"block bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] bg-clip-text text-transparent\">\n                {t(\"votre restaurant\", \"your restaurant\")}\n              </span>\n              <span className=\"block text-[var(--text-primary)]\">\n                {t(\"sans commission\", \"without commission\")}\n              </span>\n            </h1>\n\n            {/* Subtitle */}\n            <p className=\"text-base sm:text-lg md:text-xl lg:text-2xl text-[var(--text-secondary)] mb-6 sm:mb-8 max-w-xs sm:max-w-2xl lg:max-w-3xl mx-auto leading-relaxed px-4 sm:px-0\">\n              {t(\n                \"La solution complète pour créer votre site de commande, vos applications mobiles et gérer votre business en ligne\",\n                \"The complete solution to create your ordering website, mobile apps and manage your business online\"\n              )}\n            </p>\n\n            {/* Feature Pills */}\n            <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 mb-8 sm:mb-12 px-4 sm:px-0\">\n              {features.map((feature, index) => (\n                <div \n                  key={index}\n                  className=\"flex items-center px-3 sm:px-4 py-2 bg-[var(--surface)]/30 backdrop-blur-sm border border-[var(--border)] rounded-full text-xs sm:text-sm text-[var(--text-secondary)] hover:border-[var(--primary)]/50 transition-all duration-300 mobile-no-hover\"\n                  style={{ animationDelay: `${index * 100}ms` }}\n                >\n                  <i className={`${feature.icon} text-[var(--primary)] mr-1 sm:mr-2 text-xs sm:text-sm`}></i>\n                  <span className=\"whitespace-nowrap\">{feature.text}</span>\n                </div>\n              ))}\n            </div>\n\n            {/* CTA Buttons */}\n            <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center mb-12 sm:mb-16 px-4 sm:px-0\">\n              <Link href=\"/contact\">\n                <button className=\"group w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white font-semibold rounded-xl hover:shadow-[var(--shadow-glow)] transition-all duration-300 hover:scale-105 text-base sm:text-lg touch-target\">\n                  <span>{t(\"Commencer gratuitement\", \"Start for free\")}</span>\n                  <i className=\"fas fa-arrow-right ml-2 group-hover:translate-x-1 transition-transform\"></i>\n                </button>\n              </Link>\n              \n              <Link href=\"/features\">\n                <button className=\"w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 bg-[var(--surface)]/50 backdrop-blur-sm border border-[var(--border)] text-[var(--text-primary)] font-semibold rounded-xl hover:border-[var(--primary)]/50 hover:bg-[var(--surface)]/70 transition-all duration-300 text-base sm:text-lg touch-target mobile-no-hover\">\n                  <i className=\"fas fa-play mr-2\"></i>\n                  {t(\"Voir la démo\", \"Watch demo\")}\n                </button>\n              </Link>\n            </div>\n          </div>\n\n          {/* Stats Section */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 sm:gap-6 lg:gap-8 max-w-4xl mx-auto px-4 sm:px-0\">\n            {stats.map((stat, index) => (\n              <div \n                key={index}\n                className=\"text-center group animate-fade-in-up p-4 sm:p-0\"\n                style={{ animationDelay: `${800 + index * 100}ms` }}\n              >\n                <div className=\"text-2xl sm:text-3xl lg:text-4xl font-bold bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] bg-clip-text text-transparent mb-1 sm:mb-2 group-hover:scale-110 transition-transform duration-300\">\n                  {stat.number}\n                </div>\n                <div className=\"text-[var(--text-secondary)] text-xs sm:text-sm lg:text-base\">\n                  {stat.label}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Scroll Indicator - Hidden on mobile */}\n          <div className=\"hidden sm:block absolute bottom-6 lg:bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce\">\n            <div className=\"w-5 sm:w-6 h-8 sm:h-10 border-2 border-[var(--border)] rounded-full flex justify-center\">\n              <div className=\"w-1 h-2 sm:h-3 bg-[var(--primary)] rounded-full mt-2 animate-pulse\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":8467},"client/src/components/modern-integrations.tsx":{"content":"import { useState } from \"react\";\nimport { useLanguage } from \"./language-provider\";\n\nexport function ModernIntegrations() {\n  const { t } = useLanguage();\n  const [activeCategory, setActiveCategory] = useState(\"delivery\");\n\n  const integrationCategories: Record<string, {\n    title: string;\n    icon: string;\n    description: string;\n    integrations: Array<{ name: string; logo: string; type: string }>;\n  }> = {\n    delivery: {\n      title: t(\"Livraison & Logistique\", \"Delivery & Logistics\"),\n      icon: \"fas fa-truck\",\n      description: t(\n        \"Connectez-vous aux principales plateformes de livraison et services logistiques\",\n        \"Connect to major delivery platforms and logistics services\"\n      ),\n      integrations: [\n        { name: \"Glovo\", logo: \"fab fa-google\", type: \"Plateforme de livraison\" },\n        { name: \"Stuart\", logo: \"fas fa-motorcycle\", type: \"Livraison express\" },\n        { name: \"Wolt Drive\", logo: \"fas fa-car\", type: \"Livraison restaurant\" },\n        { name: \"Stava\", logo: \"fas fa-shipping-fast\", type: \"Logistique\" },\n        { name: \"DeliGoo\", logo: \"fas fa-truck-moving\", type: \"Livraison food\" },\n        { name: \"Relay\", logo: \"fas fa-exchange-alt\", type: \"Points relais\" },\n        { name: \"ShipDay\", logo: \"fas fa-calendar-day\", type: \"Planification livraison\" },\n        { name: \"Restimo\", logo: \"fas fa-route\", type: \"Optimisation trajets\" },\n        { name: \"PAPU.io\", logo: \"fas fa-map-marked-alt\", type: \"Gestion livraison\" },\n        { name: \"Smart Delivery Track\", logo: \"fas fa-satellite\", type: \"Suivi en temps réel\" }\n      ]\n    },\n    pos: {\n      title: t(\"Systèmes de Caisse\", \"POS Systems\"),\n      icon: \"fas fa-cash-register\",\n      description: t(\n        \"Intégration avec les principaux systèmes de point de vente\",\n        \"Integration with major point of sale systems\"\n      ),\n      integrations: [\n        { name: \"POS Bistro\", logo: \"fas fa-utensils\", type: \"POS Restaurant\" },\n        { name: \"Foodsoft\", logo: \"fas fa-hamburger\", type: \"Gestion restaurant\" },\n        { name: \"izzyRest\", logo: \"fas fa-tablet-alt\", type: \"Caisse tactile\" },\n        { name: \"X2\", logo: \"fas fa-times\", type: \"POS Moderne\" },\n        { name: \"SimpleGastronomy\", logo: \"fas fa-wine-glass\", type: \"Gastronomie\" },\n        { name: \"Generic REST API\", logo: \"fas fa-plug\", type: \"API personnalisée\" },\n        { name: \"Star CloudPRNT\", logo: \"fas fa-print\", type: \"Impression cloud\" }\n      ]\n    },\n    payment: {\n      title: t(\"Moyens de Paiement\", \"Payment Methods\"),\n      icon: \"fas fa-credit-card\",\n      description: t(\n        \"Acceptez tous les moyens de paiement locaux et internationaux\",\n        \"Accept all local and international payment methods\"\n      ),\n      integrations: [\n        { name: \"Stripe\", logo: \"fab fa-stripe\", type: \"Paiement en ligne\" },\n        { name: \"Adyen\", logo: \"fas fa-globe\", type: \"Paiement global\" },\n        { name: \"PayU\", logo: \"fas fa-university\", type: \"Paiement digital\" },\n        { name: \"PayPal\", logo: \"fab fa-paypal\", type: \"Portefeuille digital\" },\n        { name: \"Apple Pay\", logo: \"fab fa-apple\", type: \"Paiement mobile\" },\n        { name: \"Google Pay\", logo: \"fab fa-google\", type: \"Paiement Google\" },\n        { name: \"AliPay\", logo: \"fas fa-mobile-alt\", type: \"Paiement chinois\" },\n        { name: \"Cash App Pay\", logo: \"fas fa-dollar-sign\", type: \"Paiement instantané\" },\n        { name: \"Link\", logo: \"fas fa-link\", type: \"Paiement direct\" },\n        { name: \"GrabPay\", logo: \"fas fa-hand-holding-usd\", type: \"Paiement asiatique\" },\n        { name: \"Mobile Pay\", logo: \"fas fa-mobile\", type: \"Paiement mobile\" },\n        { name: \"PayNow\", logo: \"fas fa-clock\", type: \"Paiement instantané\" },\n        { name: \"PromptPay\", logo: \"fas fa-qrcode\", type: \"QR Code payment\" },\n        { name: \"WeChat Pay\", logo: \"fab fa-weixin\", type: \"Paiement WeChat\" }\n      ]\n    },\n    bnpl: {\n      title: t(\"Paiement Différé\", \"Buy Now Pay Later\"),\n      icon: \"fas fa-calendar-plus\",\n      description: t(\n        \"Solutions de paiement fractionné et différé\",\n        \"Split and deferred payment solutions\"\n      ),\n      integrations: [\n        { name: \"Affirm\", logo: \"fas fa-check-circle\", type: \"Crédit consommateur\" },\n        { name: \"AfterPay\", logo: \"fas fa-calendar-week\", type: \"Paiement en 4x\" },\n        { name: \"ClearPay\", logo: \"fas fa-gem\", type: \"Paiement échelonné\" },\n        { name: \"Klarna\", logo: \"fas fa-shopping-bag\", type: \"Achat différé\" }\n      ]\n    },\n    banking: {\n      title: t(\"Services Bancaires\", \"Banking Services\"),\n      icon: \"fas fa-university\",\n      description: t(\n        \"Intégrations bancaires et virements directs\",\n        \"Banking integrations and direct transfers\"\n      ),\n      integrations: [\n        { name: \"Bancontact\", logo: \"fas fa-credit-card\", type: \"Belgique\" },\n        { name: \"Blik\", logo: \"fas fa-mobile-alt\", type: \"Pologne\" },\n        { name: \"EPS\", logo: \"fas fa-euro-sign\", type: \"Autriche\" },\n        { name: \"FPX\", logo: \"fas fa-landmark\", type: \"Malaisie\" },\n        { name: \"Giropay\", logo: \"fas fa-exchange-alt\", type: \"Allemagne\" },\n        { name: \"iDEAL\", logo: \"fas fa-heart\", type: \"Pays-Bas\" },\n        { name: \"P24\", logo: \"fas fa-shopping-cart\", type: \"Pologne\" },\n        { name: \"Sofort\", logo: \"fas fa-bolt\", type: \"Europe\" },\n        { name: \"ACH Direct Debit\", logo: \"fas fa-university\", type: \"USA\" },\n        { name: \"Bacs Direct Debit\", logo: \"fas fa-pound-sign\", type: \"UK\" },\n        { name: \"BECS\", logo: \"fas fa-coins\", type: \"Australie\" },\n        { name: \"Pre-authorized debit\", logo: \"fas fa-maple-leaf\", type: \"Canada\" },\n        { name: \"Boleto\", logo: \"fas fa-barcode\", type: \"Brésil\" },\n        { name: \"SEPA debit\", logo: \"fas fa-euro-sign\", type: \"Europe\" },\n        { name: \"Konbini\", logo: \"fas fa-store\", type: \"Japon\" },\n        { name: \"OXXO\", logo: \"fas fa-shopping-basket\", type: \"Mexique\" }\n      ]\n    },\n    analytics: {\n      title: t(\"Analytics & Marketing\", \"Analytics & Marketing\"),\n      icon: \"fas fa-chart-line\",\n      description: t(\n        \"Outils d'analyse et de marketing digital\",\n        \"Analytics and digital marketing tools\"\n      ),\n      integrations: [\n        { name: \"Google Analytics\", logo: \"fab fa-google\", type: \"Analytics web\" },\n        { name: \"Google Tag Manager\", logo: \"fas fa-tags\", type: \"Gestion tags\" },\n        { name: \"Meta\", logo: \"fab fa-meta\", type: \"Facebook/Instagram\" },\n        { name: \"CookieYes\", logo: \"fas fa-cookie-bite\", type: \"Gestion cookies\" }\n      ]\n    },\n    websites: {\n      title: t(\"Plateformes Web\", \"Web Platforms\"),\n      icon: \"fas fa-globe\",\n      description: t(\n        \"Intégrations avec les plateformes de création de sites\",\n        \"Integrations with website creation platforms\"\n      ),\n      integrations: [\n        { name: \"WordPress\", logo: \"fab fa-wordpress\", type: \"CMS populaire\" },\n        { name: \"Duda\", logo: \"fas fa-paint-brush\", type: \"Website builder\" },\n        { name: \"Wix\", logo: \"fab fa-wix\", type: \"Création sites\" },\n        { name: \"SquareSpace\", logo: \"fas fa-square\", type: \"Design sites\" }\n      ]\n    }\n  };\n\n  const categories = Object.keys(integrationCategories);\n\n  return (\n    <section className=\"py-24 bg-[var(--background)] relative overflow-hidden\">\n      {/* Background */}\n      <div className=\"absolute inset-0 grid-pattern opacity-20\"></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative\">\n        {/* Header */}\n        <div className=\"text-center mb-20 animate-fade-in-up\">\n          <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)] border border-[var(--border)] rounded-full mb-6\">\n            <i className=\"fas fa-plug text-[var(--primary)] mr-2\"></i>\n            <span className=\"text-sm text-[var(--text-secondary)]\">\n              {t(\"Intégrations disponibles\", \"Available integrations\")}\n            </span>\n          </div>\n          \n          <h2 className=\"text-4xl md:text-6xl font-bold mb-6\">\n            <span className=\"text-[var(--text-primary)]\">\n              {t(\"Plus de\", \"More than\")}\n            </span>\n            <br />\n            <span className=\"gradient-text-modern\">\n              {t(\"100 intégrations\", \"100 integrations\")}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto\">\n            {t(\n              \"Connectez SAMEATS à tous vos outils favoris. Paiements, livraison, analytics, marketing et bien plus.\",\n              \"Connect SAMEATS to all your favorite tools. Payments, delivery, analytics, marketing and more.\"\n            )}\n          </p>\n        </div>\n\n        {/* Categories Navigation */}\n        <div className=\"flex flex-wrap justify-center gap-4 mb-16\">\n          {categories.map((category) => {\n            const cat = integrationCategories[category];\n            return (\n              <button\n                key={category}\n                onClick={() => setActiveCategory(category)}\n                className={`px-6 py-3 rounded-xl font-semibold transition-all duration-300 ${\n                  activeCategory === category\n                    ? 'bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white shadow-lg scale-105'\n                    : 'bg-[var(--surface)] text-[var(--text-secondary)] hover:text-[var(--text-primary)] hover:bg-[var(--surface-light)]'\n                }`}\n              >\n                <i className={`${cat.icon} mr-2`}></i>\n                {cat.title}\n              </button>\n            );\n          })}\n        </div>\n\n        {/* Active Category Display */}\n        <div className=\"mb-16\">\n          <div className=\"text-center mb-12 animate-slide-in-up\">\n            <h3 className=\"text-3xl font-bold text-[var(--text-primary)] mb-4\">\n              {integrationCategories[activeCategory].title}\n            </h3>\n            <p className=\"text-lg text-[var(--text-secondary)] max-w-2xl mx-auto\">\n              {integrationCategories[activeCategory].description}\n            </p>\n          </div>\n\n          {/* Integrations Grid */}\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6\">\n            {integrationCategories[activeCategory].integrations.map((integration, index) => (\n              <div\n                key={index}\n                className=\"modern-card p-6 text-center group hover:shadow-xl transition-all duration-300 animate-fade-in-up\"\n                style={{ animationDelay: `${index * 50}ms` }}\n              >\n                <div className=\"w-16 h-16 bg-gradient-to-br from-[var(--surface-light)] to-[var(--surface)] rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                  <i className={`${integration.logo} text-2xl text-[var(--primary)]`}></i>\n                </div>\n                \n                <h4 className=\"text-lg font-bold text-[var(--text-primary)] mb-2\">\n                  {integration.name}\n                </h4>\n                \n                <p className=\"text-[var(--text-secondary)] text-sm\">\n                  {integration.type}\n                </p>\n                \n                <div className=\"mt-4 pt-4 border-t border-[var(--border)]\">\n                  <div className=\"inline-flex items-center px-3 py-1 bg-[var(--primary)]/10 text-[var(--primary)] rounded-full text-xs font-medium\">\n                    <i className=\"fas fa-check mr-1\"></i>\n                    {t(\"Disponible\", \"Available\")}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Stats Section */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-16\">\n          {[\n            { value: \"100+\", label: t(\"Intégrations\", \"Integrations\"), icon: \"fas fa-plug\" },\n            { value: \"50+\", label: t(\"Moyens de paiement\", \"Payment methods\"), icon: \"fas fa-credit-card\" },\n            { value: \"10+\", label: t(\"Plateformes livraison\", \"Delivery platforms\"), icon: \"fas fa-truck\" },\n            { value: \"15+\", label: t(\"Systèmes POS\", \"POS systems\"), icon: \"fas fa-cash-register\" }\n          ].map((stat, index) => (\n            <div\n              key={index}\n              className=\"modern-card p-6 text-center group animate-fade-in-up\"\n              style={{ animationDelay: `${index * 150}ms` }}\n            >\n              <div className=\"w-12 h-12 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform\">\n                <i className={`${stat.icon} text-white`}></i>\n              </div>\n              <div className=\"text-2xl md:text-3xl font-bold gradient-text-modern mb-1\">\n                {stat.value}\n              </div>\n              <div className=\"text-[var(--text-secondary)] text-sm\">\n                {stat.label}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* CTA Section */}\n        <div className=\"text-center animate-fade-in-up\">\n          <div className=\"modern-card p-8 bg-gradient-to-r from-[var(--surface)] to-[var(--surface-light)]\">\n            <h3 className=\"text-2xl font-bold text-[var(--text-primary)] mb-4\">\n              {t(\"Besoin d'une intégration personnalisée ?\", \"Need a custom integration?\")}\n            </h3>\n            <p className=\"text-[var(--text-secondary)] mb-6 max-w-2xl mx-auto\">\n              {t(\n                \"Notre équipe technique peut développer des intégrations sur mesure pour répondre à vos besoins spécifiques\",\n                \"Our technical team can develop custom integrations to meet your specific needs\"\n              )}\n            </p>\n            <button className=\"inline-flex items-center px-8 py-4 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white font-semibold rounded-xl hover:shadow-xl transform hover:scale-105 transition-all duration-300\">\n              <i className=\"fas fa-code mr-2\"></i>\n              <span>{t(\"Demander une intégration\", \"Request integration\")}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":14210},"client/src/components/modern-navigation.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { useLanguage } from \"./language-provider\";\nimport sameatsLogo from \"@assets/logo-blanc_1755211740901.png\";\n\nexport function ModernNavigation() {\n  const [location] = useLocation();\n  const { t, language, setLanguage } = useLanguage();\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const navigation = [\n    { name: t(\"Accueil\", \"Home\"), href: \"/\" },\n    { name: t(\"Fonctionnalités\", \"Features\"), href: \"/features\" },\n    { name: t(\"Clients\", \"Clients\"), href: \"/clients\" },\n    { name: t(\"Tarifs\", \"Pricing\"), href: \"/pricing\" },\n    { name: t(\"À Propos\", \"About\"), href: \"/about\" },\n    { name: t(\"Contact\", \"Contact\"), href: \"/contact\" }\n  ];\n\n  return (\n    <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\n      isScrolled \n        ? 'bg-[var(--surface)]/95 backdrop-blur-xl border-b border-[var(--border)]' \n        : 'bg-transparent'\n    }`}>\n      <div className=\"container-responsive\">\n        <div className=\"flex items-center justify-between h-14 sm:h-16 md:h-20\">\n          {/* Logo */}\n          <Link href=\"/\">\n            <div className=\"flex items-center space-x-2 sm:space-x-3 cursor-pointer group\">\n              <img \n                src={sameatsLogo} \n                alt=\"SAMEATS\" \n                className=\"h-6 sm:h-8 md:h-10 w-auto transition-transform group-hover:scale-105\"\n              />\n              <span className=\"text-lg sm:text-xl font-bold bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] bg-clip-text text-transparent\">\n                SAMEATS\n              </span>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:flex items-center space-x-6 xl:space-x-8\">\n            {navigation.map((item) => (\n              <Link key={item.name} href={item.href}>\n                <span className={`relative py-2 px-3 text-sm font-medium smooth-transition cursor-pointer group touch-target rounded-lg hover:bg-[var(--surface)]/50 ${\n                  location === item.href\n                    ? 'text-[var(--primary)] bg-[var(--surface)]/30'\n                    : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)]'\n                }`}>\n                  {item.name}\n                  <span className={`absolute bottom-0 left-0 w-full h-0.5 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] transform transition-transform ${\n                    location === item.href ? 'scale-x-100' : 'scale-x-0 group-hover:scale-x-100'\n                  }`} />\n                </span>\n              </Link>\n            ))}\n          </div>\n\n          {/* Right Section */}\n          <div className=\"flex items-center space-x-2 sm:space-x-4\">\n            {/* Language Switcher */}\n            <div className=\"hidden lg:flex items-center space-x-2\">\n              <button\n                onClick={() => setLanguage('fr')}\n                className={`px-2 sm:px-3 py-1.5 text-xs sm:text-sm rounded-lg transition-all touch-target ${\n                  language === 'fr'\n                    ? 'bg-[var(--primary)] text-white'\n                    : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)] hover:bg-[var(--surface-light)]'\n                }`}\n              >\n                FR\n              </button>\n              <button\n                onClick={() => setLanguage('en')}\n                className={`px-2 sm:px-3 py-1.5 text-xs sm:text-sm rounded-lg transition-all touch-target ${\n                  language === 'en'\n                    ? 'bg-[var(--primary)] text-white'\n                    : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)] hover:bg-[var(--surface-light)]'\n                }`}\n              >\n                EN\n              </button>\n            </div>\n\n            {/* CTA Button */}\n            <Link href=\"/contact\">\n              <button className=\"hidden sm:flex items-center px-4 sm:px-6 py-2 sm:py-2.5 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white text-xs sm:text-sm font-medium rounded-xl hover:shadow-[var(--shadow-glow)] transition-all duration-300 hover:scale-105 touch-target\">\n                <span className=\"hidden sm:inline\">{t(\"Demander une démo\", \"Get Demo\")}</span>\n                <span className=\"sm:hidden\">{t(\"Démo\", \"Demo\")}</span>\n                <i className=\"fas fa-arrow-right ml-1 sm:ml-2 text-xs\"></i>\n              </button>\n            </Link>\n\n            {/* Mobile Menu Button */}\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"lg:hidden p-2 text-[var(--text-secondary)] hover:text-[var(--text-primary)] transition-colors touch-target\"\n            >\n              <i className={`fas ${isMobileMenuOpen ? 'fa-times' : 'fa-bars'} text-lg sm:text-xl`}></i>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile/Tablet Menu */}\n        <div className={`lg:hidden transition-all duration-300 overflow-hidden ${\n          isMobileMenuOpen ? 'max-h-screen opacity-100' : 'max-h-0 opacity-0'\n        }`}>\n          <div className=\"py-4 space-y-2 border-t border-[var(--border)] bg-[var(--surface)]/95 backdrop-blur-xl\">\n            {navigation.map((item) => (\n              <Link key={item.name} href={item.href}>\n                <div \n                  className={`block mx-4 px-4 py-3 text-base font-medium rounded-lg transition-colors cursor-pointer touch-target ${\n                    location === item.href\n                      ? 'bg-[var(--primary)] text-white'\n                      : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)] hover:bg-[var(--surface-light)]'\n                  }`}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  {item.name}\n                </div>\n              </Link>\n            ))}\n            \n            {/* Mobile Language Switcher */}\n            <div className=\"flex items-center justify-between px-4 py-3 mx-4 bg-[var(--surface-light)] rounded-lg\">\n              <span className=\"text-sm text-[var(--text-muted)]\">{t(\"Langue:\", \"Language:\")}</span>\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => setLanguage('fr')}\n                  className={`px-3 py-1.5 text-sm rounded-lg transition-all touch-target ${\n                    language === 'fr'\n                      ? 'bg-[var(--primary)] text-white'\n                      : 'text-[var(--text-secondary)] hover:bg-[var(--surface)]'\n                  }`}\n                >\n                  FR\n                </button>\n                <button\n                  onClick={() => setLanguage('en')}\n                  className={`px-3 py-1.5 text-sm rounded-lg transition-all touch-target ${\n                    language === 'en'\n                      ? 'bg-[var(--primary)] text-white'\n                      : 'text-[var(--text-secondary)] hover:bg-[var(--surface)]'\n                  }`}\n                >\n                  EN\n                </button>\n              </div>\n            </div>\n\n            {/* Mobile CTA */}\n            <Link href=\"/contact\">\n              <div \n                className=\"mx-4 mt-4 text-center py-4 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white text-base font-medium rounded-xl cursor-pointer shadow-lg touch-target\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                <i className=\"fas fa-video mr-2\"></i>\n                {t(\"Demander une démo gratuite\", \"Get Free Demo\")}\n              </div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}","size_bytes":8014},"client/src/components/modern-pricing-section.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { useLanguage } from \"./language-provider\";\n\nexport function ModernPricingSection() {\n  const { t } = useLanguage();\n  const [billingCycle, setBillingCycle] = useState<'monthly' | 'yearly'>('monthly');\n\n  const plans = [\n    {\n      name: t(\"Starter\", \"Starter\"),\n      description: t(\"Parfait pour commencer\", \"Perfect to get started\"),\n      monthlyPrice: 69,\n      yearlyPrice: 59,\n      setupFee: 500,\n      features: [\n        t(\"Site web de commande\", \"Ordering website\"),\n        t(\"1 application mobile\", \"1 mobile app\"),\n        t(\"Back-office basique\", \"Basic back-office\"),\n        t(\"Support par email\", \"Email support\"),\n        t(\"Analytics de base\", \"Basic analytics\"),\n        t(\"Jusqu'à 100 commandes/mois\", \"Up to 100 orders/month\")\n      ],\n      highlighted: false,\n      gradient: \"from-blue-500 to-cyan-400\"\n    },\n    {\n      name: t(\"Professional\", \"Professional\"),\n      description: t(\"Le plus populaire\", \"Most popular\"),\n      monthlyPrice: 119,\n      yearlyPrice: 99,\n      setupFee: 500,\n      features: [\n        t(\"Tout du plan Starter\", \"Everything in Starter\"),\n        t(\"2 applications mobiles\", \"2 mobile apps\"),\n        t(\"Back-office avancé\", \"Advanced back-office\"),\n        t(\"Support prioritaire\", \"Priority support\"),\n        t(\"Analytics avancées\", \"Advanced analytics\"),\n        t(\"Programme de fidélité\", \"Loyalty program\"),\n        t(\"Notifications push\", \"Push notifications\"),\n        t(\"Commandes illimitées\", \"Unlimited orders\")\n      ],\n      highlighted: true,\n      gradient: \"from-orange-500 to-pink-500\"\n    },\n    {\n      name: t(\"Enterprise\", \"Enterprise\"),\n      description: t(\"Pour les grandes entreprises\", \"For large businesses\"),\n      monthlyPrice: 199,\n      yearlyPrice: 169,\n      setupFee: 500,\n      features: [\n        t(\"Tout du plan Professional\", \"Everything in Professional\"),\n        t(\"Applications illimitées\", \"Unlimited apps\"),\n        t(\"Multi-établissements\", \"Multi-location\"),\n        t(\"Support dédié 24/7\", \"Dedicated 24/7 support\"),\n        t(\"API personnalisée\", \"Custom API\"),\n        t(\"Intégrations sur mesure\", \"Custom integrations\"),\n        t(\"Formation personnalisée\", \"Personal training\"),\n        t(\"Manager de compte dédié\", \"Dedicated account manager\")\n      ],\n      highlighted: false,\n      gradient: \"from-purple-500 to-indigo-500\"\n    }\n  ];\n\n  const faqs = [\n    {\n      question: t(\"Y a-t-il des commissions sur les ventes ?\", \"Are there any commissions on sales?\"),\n      answer: t(\n        \"Non, aucune commission ! Vous gardez 100% de vos revenus. Nous ne prenons que l'abonnement mensuel.\",\n        \"No commission at all! You keep 100% of your revenue. We only charge the monthly subscription.\"\n      )\n    },\n    {\n      question: t(\"Puis-je changer de plan à tout moment ?\", \"Can I change plans anytime?\"),\n      answer: t(\n        \"Oui, vous pouvez upgrader ou downgrader votre plan à tout moment depuis votre tableau de bord.\",\n        \"Yes, you can upgrade or downgrade your plan anytime from your dashboard.\"\n      )\n    },\n    {\n      question: t(\"Qu'est-ce qui est inclus dans les frais d'installation ?\", \"What's included in the setup fee?\"),\n      answer: t(\n        \"L'installation inclut : configuration complète, formation de votre équipe, migration des données et personnalisation de votre marque.\",\n        \"Setup includes: complete configuration, team training, data migration and brand customization.\"\n      )\n    }\n  ];\n\n  return (\n    <section className=\"py-24 relative overflow-hidden\">\n      {/* Background */}\n      <div className=\"absolute inset-0 dot-pattern\"></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative\">\n        {/* Section Header */}\n        <div className=\"text-center mb-16 animate-fade-in-up\">\n          <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)]/50 backdrop-blur-sm border border-[var(--border)] rounded-full mb-6\">\n            <i className=\"fas fa-tag text-[var(--primary)] mr-2\"></i>\n            <span className=\"text-sm text-[var(--text-secondary)]\">\n              {t(\"Tarification transparente\", \"Transparent pricing\")}\n            </span>\n          </div>\n          \n          <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n            <span className=\"text-[var(--text-primary)]\">\n              {t(\"Des prix\", \"Pricing\")}\n            </span>\n            <br />\n            <span className=\"gradient-text-modern\">\n              {t(\"sans surprise\", \"without surprises\")}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto mb-8\">\n            {t(\n              \"Choisissez le plan qui correspond à vos besoins. Aucune commission, aucun frais caché.\",\n              \"Choose the plan that fits your needs. No commission, no hidden fees.\"\n            )}\n          </p>\n\n          {/* Billing Toggle */}\n          <div className=\"inline-flex items-center p-1 bg-[var(--surface)] border border-[var(--border)] rounded-xl\">\n            <button\n              onClick={() => setBillingCycle('monthly')}\n              className={`px-6 py-2 text-sm font-medium rounded-lg transition-all ${\n                billingCycle === 'monthly'\n                  ? 'bg-[var(--primary)] text-white'\n                  : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)]'\n              }`}\n            >\n              {t(\"Mensuel\", \"Monthly\")}\n            </button>\n            <button\n              onClick={() => setBillingCycle('yearly')}\n              className={`px-6 py-2 text-sm font-medium rounded-lg transition-all relative ${\n                billingCycle === 'yearly'\n                  ? 'bg-[var(--primary)] text-white'\n                  : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)]'\n              }`}\n            >\n              {t(\"Annuel\", \"Yearly\")}\n              <span className=\"absolute -top-2 -right-2 bg-[var(--success)] text-white text-xs px-2 py-1 rounded-full\">\n                -15%\n              </span>\n            </button>\n          </div>\n        </div>\n\n        {/* Pricing Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-20\">\n          {plans.map((plan, index) => (\n            <div\n              key={index}\n              className={`relative animate-fade-in-up ${\n                plan.highlighted \n                  ? 'md:scale-105 md:-translate-y-4' \n                  : ''\n              }`}\n              style={{ animationDelay: `${index * 100}ms` }}\n            >\n              {/* Popular Badge */}\n              {plan.highlighted && (\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2 z-10\">\n                  <div className=\"bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white px-4 py-2 rounded-full text-sm font-medium\">\n                    {t(\"Plus populaire\", \"Most popular\")}\n                  </div>\n                </div>\n              )}\n\n              <div className={`modern-card p-8 relative overflow-hidden h-full ${\n                plan.highlighted ? 'border-[var(--primary)]' : ''\n              }`}>\n                {/* Background Gradient */}\n                <div className={`absolute inset-0 bg-gradient-to-br ${plan.gradient} opacity-0 hover:opacity-5 transition-opacity duration-500`} />\n                \n                {/* Plan Header */}\n                <div className=\"relative mb-8\">\n                  <h3 className=\"text-2xl font-bold text-[var(--text-primary)] mb-2\">\n                    {plan.name}\n                  </h3>\n                  <p className=\"text-[var(--text-secondary)]\">\n                    {plan.description}\n                  </p>\n                </div>\n\n                {/* Pricing */}\n                <div className=\"relative mb-8\">\n                  <div className=\"flex items-baseline mb-2\">\n                    <span className=\"text-4xl font-bold gradient-text-modern\">\n                      €{billingCycle === 'monthly' ? plan.monthlyPrice : plan.yearlyPrice}\n                    </span>\n                    <span className=\"text-[var(--text-secondary)] ml-2\">\n                      /{t(\"mois\", \"month\")}\n                    </span>\n                  </div>\n                  {billingCycle === 'yearly' && (\n                    <div className=\"text-sm text-[var(--success)]\">\n                      {t(\"Économisez\", \"Save\")} €{(plan.monthlyPrice - plan.yearlyPrice) * 12}/an\n                    </div>\n                  )}\n                  <div className=\"text-sm text-[var(--text-muted)] mt-2\">\n                    + €{plan.setupFee} {t(\"frais d'installation unique\", \"one-time setup fee\")}\n                  </div>\n                </div>\n\n                {/* Features */}\n                <div className=\"relative mb-8\">\n                  <ul className=\"space-y-3\">\n                    {plan.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <i className=\"fas fa-check text-[var(--success)] mr-3 w-4\"></i>\n                        <span className=\"text-[var(--text-secondary)]\">{feature}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                {/* CTA Button */}\n                <div className=\"relative\">\n                  <Link href=\"/contact\">\n                    <button className={`w-full py-3 rounded-xl font-semibold transition-all duration-300 ${\n                      plan.highlighted\n                        ? 'btn-modern-primary'\n                        : 'btn-modern-secondary'\n                    }`}>\n                      {t(\"Commencer maintenant\", \"Start now\")}\n                    </button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* FAQ Section */}\n        <div className=\"max-w-4xl mx-auto animate-fade-in-up\" style={{ animationDelay: \"400ms\" }}>\n          <h3 className=\"text-3xl font-bold text-center mb-12\">\n            <span className=\"gradient-text-modern\">\n              {t(\"Questions fréquentes\", \"Frequently asked questions\")}\n            </span>\n          </h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {faqs.map((faq, index) => (\n              <div key={index} className=\"modern-card p-6\">\n                <h4 className=\"font-semibold text-[var(--text-primary)] mb-3\">\n                  {faq.question}\n                </h4>\n                <p className=\"text-[var(--text-secondary)] text-sm leading-relaxed\">\n                  {faq.answer}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Bottom CTA */}\n        <div className=\"text-center mt-16 animate-fade-in-up\" style={{ animationDelay: \"500ms\" }}>\n          <div className=\"max-w-2xl mx-auto\">\n            <h3 className=\"text-2xl font-bold text-[var(--text-primary)] mb-4\">\n              {t(\"Encore des questions ?\", \"Still have questions?\")}\n            </h3>\n            <p className=\"text-[var(--text-secondary)] mb-6\">\n              {t(\n                \"Notre équipe est là pour vous aider à choisir le meilleur plan\",\n                \"Our team is here to help you choose the best plan\"\n              )}\n            </p>\n            <Link href=\"/contact\">\n              <button className=\"btn-modern-primary text-lg\">\n                <i className=\"fas fa-comments mr-2\"></i>\n                {t(\"Parler à un expert\", \"Talk to an expert\")}\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":11771},"client/src/components/modern-quote-section.tsx":{"content":"import { useState } from \"react\";\nimport { useLanguage } from \"./language-provider\";\n\nexport function ModernQuoteSection() {\n  const { t } = useLanguage();\n  const [activeTab, setActiveTab] = useState<'contact' | 'quote'>('contact');\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    restaurantName: '',\n    restaurantType: '',\n    currentOrderVolume: '',\n    message: '',\n    urgency: 'normal',\n    budget: '',\n    acceptTerms: false,\n    acceptNewsletter: false\n  });\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    if (type === 'checkbox') {\n      const checked = (e.target as HTMLInputElement).checked;\n      setFormData(prev => ({ ...prev, [name]: checked }));\n    } else {\n      setFormData(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Form submitted:', formData);\n    // Ici vous pourrez ajouter l'envoi vers votre API\n  };\n\n  return (\n    <div className=\"py-24 bg-[var(--surface)] relative overflow-hidden\">\n      <div className=\"absolute inset-0 dot-pattern opacity-20\"></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative\">\n        {/* Header */}\n        <div className=\"text-center mb-16 animate-fade-in-up\">\n          <div className=\"inline-flex items-center px-4 py-2 bg-[var(--background)]/80 backdrop-blur-sm border border-[var(--border)] rounded-full mb-6\">\n            <i className=\"fas fa-comments text-[var(--primary)] mr-2\"></i>\n            <span className=\"text-sm text-[var(--text-secondary)]\">\n              {t(\"Parlons de votre projet\", \"Let's talk about your project\")}\n            </span>\n          </div>\n          \n          <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n            <span className=\"text-[var(--text-primary)]\">\n              {t(\"Prêt à digitaliser\", \"Ready to digitize\")}\n            </span>\n            <br />\n            <span className=\"gradient-text-modern\">\n              {t(\"votre restaurant ?\", \"your restaurant?\")}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto mb-8\">\n            {t(\n              \"Contactez-nous pour une consultation gratuite ou demandez un devis personnalisé\",\n              \"Contact us for a free consultation or request a personalized quote\"\n            )}\n          </p>\n        </div>\n\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Tab Navigation */}\n          <div className=\"flex mb-8 bg-[var(--background)] rounded-2xl p-2 border border-[var(--border)]\">\n            <button\n              onClick={() => setActiveTab('contact')}\n              className={`flex-1 py-3 px-6 rounded-xl font-semibold transition-all duration-300 ${\n                activeTab === 'contact'\n                  ? 'bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white shadow-lg'\n                  : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)]'\n              }`}\n            >\n              <i className=\"fas fa-envelope mr-2\"></i>\n              {t(\"Contact simple\", \"Simple contact\")}\n            </button>\n            <button\n              onClick={() => setActiveTab('quote')}\n              className={`flex-1 py-3 px-6 rounded-xl font-semibold transition-all duration-300 ${\n                activeTab === 'quote'\n                  ? 'bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white shadow-lg'\n                  : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)]'\n              }`}\n            >\n              <i className=\"fas fa-calculator mr-2\"></i>\n              {t(\"Demande de devis\", \"Quote request\")}\n            </button>\n          </div>\n\n          {/* Form Content */}\n          <div className=\"modern-card p-8 animate-fade-in-up\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {/* Common Fields */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                    {t(\"Nom complet *\", \"Full name *\")}\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    required\n                    className=\"w-full px-4 py-3 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all\"\n                    placeholder={t(\"Votre nom\", \"Your name\")}\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                    {t(\"Email professionnel *\", \"Professional email *\")}\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    required\n                    className=\"w-full px-4 py-3 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all\"\n                    placeholder={t(\"votre@email.com\", \"your@email.com\")}\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                    {t(\"Téléphone\", \"Phone\")}\n                  </label>\n                  <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleInputChange}\n                    className=\"w-full px-4 py-3 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all\"\n                    placeholder={t(\"+33 1 23 45 67 89\", \"+1 234 567 8900\")}\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                    {t(\"Nom du restaurant *\", \"Restaurant name *\")}\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"restaurantName\"\n                    value={formData.restaurantName}\n                    onChange={handleInputChange}\n                    required\n                    className=\"w-full px-4 py-3 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all\"\n                    placeholder={t(\"Nom de votre restaurant\", \"Your restaurant name\")}\n                  />\n                </div>\n              </div>\n\n              {/* Quote-specific fields */}\n              {activeTab === 'quote' && (\n                <>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                        {t(\"Type de restaurant\", \"Restaurant type\")}\n                      </label>\n                      <select\n                        name=\"restaurantType\"\n                        value={formData.restaurantType}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-3 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all\"\n                      >\n                        <option value=\"\">{t(\"Sélectionnez\", \"Select\")}</option>\n                        <option value=\"fast-food\">{t(\"Fast Food\", \"Fast Food\")}</option>\n                        <option value=\"pizzeria\">{t(\"Pizzeria\", \"Pizzeria\")}</option>\n                        <option value=\"restaurant-traditionnel\">{t(\"Restaurant traditionnel\", \"Traditional restaurant\")}</option>\n                        <option value=\"food-court\">{t(\"Food Court\", \"Food Court\")}</option>\n                        <option value=\"boulangerie\">{t(\"Boulangerie\", \"Bakery\")}</option>\n                        <option value=\"autre\">{t(\"Autre\", \"Other\")}</option>\n                      </select>\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                        {t(\"Volume de commandes actuel\", \"Current order volume\")}\n                      </label>\n                      <select\n                        name=\"currentOrderVolume\"\n                        value={formData.currentOrderVolume}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-3 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all\"\n                      >\n                        <option value=\"\">{t(\"Sélectionnez\", \"Select\")}</option>\n                        <option value=\"0-50\">{t(\"0-50 commandes/jour\", \"0-50 orders/day\")}</option>\n                        <option value=\"50-100\">{t(\"50-100 commandes/jour\", \"50-100 orders/day\")}</option>\n                        <option value=\"100-200\">{t(\"100-200 commandes/jour\", \"100-200 orders/day\")}</option>\n                        <option value=\"200+\">{t(\"200+ commandes/jour\", \"200+ orders/day\")}</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                        {t(\"Budget mensuel estimé\", \"Estimated monthly budget\")}\n                      </label>\n                      <select\n                        name=\"budget\"\n                        value={formData.budget}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-3 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all\"\n                      >\n                        <option value=\"\">{t(\"Sélectionnez\", \"Select\")}</option>\n                        <option value=\"69-99\">€69 - €99</option>\n                        <option value=\"99-149\">€99 - €149</option>\n                        <option value=\"149-199\">€149 - €199</option>\n                        <option value=\"199+\">€199+</option>\n                      </select>\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                        {t(\"Urgence du projet\", \"Project urgency\")}\n                      </label>\n                      <select\n                        name=\"urgency\"\n                        value={formData.urgency}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-3 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all\"\n                      >\n                        <option value=\"normal\">{t(\"Normal (2-4 semaines)\", \"Normal (2-4 weeks)\")}</option>\n                        <option value=\"urgent\">{t(\"Urgent (1-2 semaines)\", \"Urgent (1-2 weeks)\")}</option>\n                        <option value=\"immediate\">{t(\"Immédiat (cette semaine)\", \"Immediate (this week)\")}</option>\n                      </select>\n                    </div>\n                  </div>\n                </>\n              )}\n\n              {/* Message */}\n              <div>\n                <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                  {t(\"Message\", \"Message\")}\n                </label>\n                <textarea\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleInputChange}\n                  rows={4}\n                  className=\"w-full px-4 py-3 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all resize-none\"\n                  placeholder={t(\n                    \"Décrivez votre projet et vos besoins spécifiques...\",\n                    \"Describe your project and specific needs...\"\n                  )}\n                />\n              </div>\n\n              {/* Checkboxes */}\n              <div className=\"space-y-4\">\n                <label className=\"flex items-start\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"acceptTerms\"\n                    checked={formData.acceptTerms}\n                    onChange={handleInputChange}\n                    required\n                    className=\"mt-1 mr-3 text-[var(--primary)] focus:ring-[var(--primary)] border-[var(--border)] rounded\"\n                  />\n                  <span className=\"text-sm text-[var(--text-secondary)]\">\n                    {t(\n                      \"J'accepte les conditions d'utilisation et la politique de confidentialité (RGPD) *\",\n                      \"I accept the terms of use and privacy policy (GDPR) *\"\n                    )}\n                  </span>\n                </label>\n                \n                <label className=\"flex items-start\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"acceptNewsletter\"\n                    checked={formData.acceptNewsletter}\n                    onChange={handleInputChange}\n                    className=\"mt-1 mr-3 text-[var(--primary)] focus:ring-[var(--primary)] border-[var(--border)] rounded\"\n                  />\n                  <span className=\"text-sm text-[var(--text-secondary)]\">\n                    {t(\n                      \"Je souhaite recevoir des conseils et actualités sur la digitalisation des restaurants\",\n                      \"I want to receive tips and news about restaurant digitization\"\n                    )}\n                  </span>\n                </label>\n              </div>\n\n              {/* Submit Button */}\n              <div className=\"text-center\">\n                <button\n                  type=\"submit\"\n                  className=\"inline-flex items-center px-8 py-4 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white font-semibold rounded-xl hover:shadow-lg transform hover:scale-105 transition-all duration-300\"\n                >\n                  <i className={`${activeTab === 'contact' ? 'fas fa-paper-plane' : 'fas fa-calculator'} mr-2`}></i>\n                  {activeTab === 'contact' \n                    ? t(\"Envoyer le message\", \"Send message\")\n                    : t(\"Demander un devis\", \"Request quote\")\n                  }\n                </button>\n                \n                <p className=\"text-xs text-[var(--text-muted)] mt-4\">\n                  {t(\n                    \"Réponse garantie sous 24h • Consultation gratuite • Sans engagement\",\n                    \"Guaranteed response within 24h • Free consultation • No commitment\"\n                  )}\n                </p>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":16226},"client/src/components/modern-testimonials.tsx":{"content":"import { useState } from \"react\";\nimport { useLanguage } from \"./language-provider\";\n\nexport function ModernTestimonials() {\n  const { t } = useLanguage();\n  const [currentTestimonial, setCurrentTestimonial] = useState(0);\n\n  const testimonials = [\n    {\n      name: \"Ahmed Ben Salem\",\n      position: t(\"Gérant\", \"Manager\"),\n      restaurant: \"T9 Restaurant\",\n      location: t(\"Vitry-sur-Seine\", \"Vitry-sur-Seine\"),\n      avatar: \"AB\",\n      quote: t(\n        \"SAMEATS a complètement transformé notre façon de gérer les commandes. Nos ventes ont augmenté de 45% en seulement 3 mois. L'interface est intuitive et nos clients adorent l'application mobile.\",\n        \"SAMEATS completely transformed how we manage orders. Our sales increased by 45% in just 3 months. The interface is intuitive and our customers love the mobile app.\"\n      ),\n      rating: 5,\n      metrics: {\n        growth: \"+45%\",\n        metric: t(\"de ventes\", \"sales increase\"),\n        orders: \"2,500+\",\n        period: t(\"commandes/mois\", \"orders/month\")\n      },\n      website: \"https://www.t9-restaurant.fr/\"\n    },\n    {\n      name: \"Fatima Khelifi\",\n      position: t(\"Directrice\", \"Director\"),\n      restaurant: \"Campus Food Court\",\n      location: t(\"Champs-sur-Marne\", \"Champs-sur-Marne\"),\n      avatar: \"FK\",\n      quote: t(\n        \"La solution SAMEATS nous a permis de centraliser tous nos points de vente en un seul système. Le support client est exceptionnel et l'équipe est toujours disponible pour nous aider.\",\n        \"The SAMEATS solution allowed us to centralize all our points of sale in one system. Customer support is exceptional and the team is always available to help us.\"\n      ),\n      rating: 5,\n      metrics: {\n        growth: \"+60%\",\n        metric: t(\"d'efficacité\", \"efficiency\"),\n        orders: \"4,200+\",\n        period: t(\"commandes/mois\", \"orders/month\")\n      },\n      website: \"https://www.campusfoodcourt.fr/\"\n    },\n    {\n      name: \"Marco Rossi\",\n      position: t(\"Propriétaire\", \"Owner\"),\n      restaurant: \"Patroné Forno\",\n      location: t(\"Viry-Châtillon\", \"Viry-Châtillon\"),\n      avatar: \"MR\",\n      quote: t(\n        \"En tant que pizzeria traditionnelle, nous avions besoin d'une solution moderne qui respecte notre authenticité. SAMEATS a parfaitement répondu à nos attentes avec un design élégant.\",\n        \"As a traditional pizzeria, we needed a modern solution that respects our authenticity. SAMEATS perfectly met our expectations with an elegant design.\"\n      ),\n      rating: 5,\n      metrics: {\n        growth: \"+52%\",\n        metric: t(\"de croissance\", \"growth\"),\n        orders: \"3,100+\",\n        period: t(\"commandes/mois\", \"orders/month\")\n      },\n      website: \"https://www.patroneforno.fr/\"\n    },\n    {\n      name: \"Mohamed Trabelsi\",\n      position: t(\"Chef propriétaire\", \"Chef Owner\"),\n      restaurant: \"Sidi Bou Le Mans\",\n      location: t(\"Le Mans\", \"Le Mans\"),\n      avatar: \"MT\",\n      quote: t(\n        \"SAMEATS nous a aidés à préserver nos traditions tout en nous modernisant. Nos clients peuvent maintenant commander facilement tout en gardant l'essence de notre restaurant traditionnel.\",\n        \"SAMEATS helped us preserve our traditions while modernizing. Our customers can now order easily while keeping the essence of our traditional restaurant.\"\n      ),\n      rating: 5,\n      metrics: {\n        growth: \"+35%\",\n        metric: t(\"de fidélisation\", \"customer retention\"),\n        orders: \"2,800+\",\n        period: t(\"commandes/mois\", \"orders/month\")\n      },\n      website: \"https://www.sidibou-lemans.fr/\"\n    },\n    {\n      name: \"Laurent Dubois\",\n      position: t(\"Gérant\", \"Manager\"),\n      restaurant: \"First Pizza\",\n      location: t(\"Noyon\", \"Noyon\"),\n      avatar: \"LD\",\n      quote: t(\n        \"La solution complète dont nous avions besoin. Nos clients adorent commander via l'app et notre chiffre d'affaires a vraiment décollé !\",\n        \"The complete solution we needed. Our customers love ordering through the app and our revenue has really taken off!\"\n      ),\n      rating: 5,\n      metrics: {\n        growth: \"+38%\",\n        metric: t(\"de satisfaction client\", \"customer satisfaction\"),\n        orders: \"1,800+\",\n        period: t(\"commandes/mois\", \"orders/month\")\n      },\n      website: \"https://www.firstpizza60.fr/\"\n    },\n    {\n      name: \"Sarah Martinez\",\n      position: t(\"Propriétaire\", \"Owner\"),\n      restaurant: \"World Food\",\n      location: t(\"Paris\", \"Paris\"),\n      avatar: \"SM\",\n      quote: t(\n        \"SAMEATS nous a permis d'atteindre une clientèle internationale avec notre cuisine du monde. Les fonctionnalités multilingues sont parfaites !\",\n        \"SAMEATS allowed us to reach an international clientele with our world cuisine. The multilingual features are perfect!\"\n      ),\n      rating: 5,\n      metrics: {\n        growth: \"+28%\",\n        metric: t(\"de nouveaux clients\", \"new customers\"),\n        orders: \"1,900+\",\n        period: t(\"commandes/mois\", \"orders/month\")\n      },\n      website: \"https://www.worldfood-75.fr/\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 bg-[var(--surface)] relative overflow-hidden\">\n      {/* Background */}\n      <div className=\"absolute inset-0 line-pattern opacity-30\"></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative\">\n        {/* Header */}\n        <div className=\"text-center mb-20 animate-fade-in-up\">\n          <div className=\"inline-flex items-center px-4 py-2 bg-[var(--background)] border border-[var(--border)] rounded-full mb-6\">\n            <i className=\"fas fa-quote-left text-[var(--primary)] mr-2\"></i>\n            <span className=\"text-sm text-[var(--text-secondary)]\">\n              {t(\"Témoignages clients\", \"Client testimonials\")}\n            </span>\n          </div>\n          \n          <h2 className=\"text-4xl md:text-6xl font-bold mb-6\">\n            <span className=\"text-[var(--text-primary)]\">\n              {t(\"Ce que disent\", \"What our\")}\n            </span>\n            <br />\n            <span className=\"gradient-text-modern\">\n              {t(\"nos clients\", \"clients say\")}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto\">\n            {t(\n              \"Découvrez les retours authentiques de nos restaurateurs partenaires sur leur expérience avec SAMEATS\",\n              \"Discover authentic feedback from our restaurant partners about their experience with SAMEATS\"\n            )}\n          </p>\n        </div>\n\n        {/* Main Testimonial */}\n        <div className=\"max-w-4xl mx-auto mb-16\">\n          <div className=\"modern-card p-8 md:p-12 text-center animate-fade-in-up\">\n            <div className=\"mb-8\">\n              <div className=\"text-6xl text-[var(--primary)]/20 mb-6 font-serif\">\"</div>\n              <blockquote className=\"text-xl md:text-2xl text-[var(--text-primary)] leading-relaxed italic mb-8\">\n                {testimonials[currentTestimonial].quote}\n              </blockquote>\n              \n              {/* Rating */}\n              <div className=\"flex justify-center mb-6\">\n                {[...Array(testimonials[currentTestimonial].rating)].map((_, i) => (\n                  <i key={i} className=\"fas fa-star text-[var(--accent)] text-xl mx-1\"></i>\n                ))}\n              </div>\n            </div>\n\n            {/* Author Info */}\n            <div className=\"flex flex-col md:flex-row items-center justify-center space-y-4 md:space-y-0 md:space-x-8 mb-8\">\n              <div className=\"flex items-center\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-full flex items-center justify-center mr-4\">\n                  <span className=\"text-white font-bold text-lg\">\n                    {testimonials[currentTestimonial].avatar}\n                  </span>\n                </div>\n                <div className=\"text-left\">\n                  <h4 className=\"text-xl font-bold text-[var(--text-primary)]\">\n                    {testimonials[currentTestimonial].name}\n                  </h4>\n                  <p className=\"text-[var(--text-secondary)]\">\n                    {testimonials[currentTestimonial].position}\n                  </p>\n                  <p className=\"text-[var(--primary)] font-medium text-sm\">\n                    {testimonials[currentTestimonial].restaurant}\n                  </p>\n                </div>\n              </div>\n\n              {/* Metrics */}\n              <div className=\"flex space-x-8\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold gradient-text-modern\">\n                    {testimonials[currentTestimonial].metrics.growth}\n                  </div>\n                  <div className=\"text-sm text-[var(--text-muted)]\">\n                    {testimonials[currentTestimonial].metrics.metric}\n                  </div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-[var(--primary)]\">\n                    {testimonials[currentTestimonial].metrics.orders}\n                  </div>\n                  <div className=\"text-sm text-[var(--text-muted)]\">\n                    {testimonials[currentTestimonial].metrics.period}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Navigation */}\n            <div className=\"flex justify-center space-x-3\">\n              {testimonials.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentTestimonial(index)}\n                  className={`w-3 h-3 rounded-full transition-all duration-300 ${\n                    index === currentTestimonial\n                      ? 'bg-[var(--primary)] scale-125'\n                      : 'bg-[var(--border)] hover:bg-[var(--primary)]/50'\n                  }`}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* All Testimonials Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-16\">\n          {testimonials.map((testimonial, index) => (\n            <div\n              key={index}\n              className={`modern-card p-6 cursor-pointer transition-all duration-300 animate-fade-in-up ${\n                index === currentTestimonial\n                  ? 'ring-2 ring-[var(--primary)] scale-105'\n                  : 'hover:scale-102'\n              }`}\n              style={{ animationDelay: `${index * 150}ms` }}\n              onClick={() => setCurrentTestimonial(index)}\n            >\n              <div className=\"flex items-start mb-4\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-xl flex items-center justify-center mr-3 flex-shrink-0\">\n                  <span className=\"text-white font-bold text-sm\">\n                    {testimonial.avatar}\n                  </span>\n                </div>\n                <div className=\"flex-1\">\n                  <h4 className=\"font-bold text-[var(--text-primary)] text-sm\">\n                    {testimonial.name}\n                  </h4>\n                  <p className=\"text-xs text-[var(--text-secondary)]\">\n                    {testimonial.position}\n                  </p>\n                  <p className=\"text-xs text-[var(--primary)] font-medium\">\n                    {testimonial.restaurant}\n                  </p>\n                </div>\n                <div className=\"flex\">\n                  {[...Array(testimonial.rating)].map((_, i) => (\n                    <i key={i} className=\"fas fa-star text-[var(--accent)] text-xs\"></i>\n                  ))}\n                </div>\n              </div>\n              \n              <blockquote className=\"text-sm text-[var(--text-primary)] italic leading-relaxed mb-4 line-clamp-3\">\n                \"{testimonial.quote}\"\n              </blockquote>\n              \n              <div className=\"flex justify-between pt-4 border-t border-[var(--border)]\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold gradient-text-modern\">\n                    {testimonial.metrics.growth}\n                  </div>\n                  <div className=\"text-xs text-[var(--text-muted)]\">\n                    {testimonial.metrics.metric}\n                  </div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-[var(--primary)]\">\n                    {testimonial.metrics.orders}\n                  </div>\n                  <div className=\"text-xs text-[var(--text-muted)]\">\n                    {testimonial.metrics.period}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Trust Indicators */}\n        <div className=\"text-center animate-fade-in-up\" style={{ animationDelay: \"600ms\" }}>\n          <div className=\"inline-flex flex-wrap items-center justify-center gap-8 px-8 py-4 bg-[var(--background)]/80 backdrop-blur-sm border border-[var(--border)] rounded-2xl\">\n            <div className=\"flex items-center text-sm text-[var(--text-secondary)]\">\n              <i className=\"fas fa-shield-check text-[var(--success)] mr-2\"></i>\n              <span>{t(\"Témoignages vérifiés\", \"Verified testimonials\")}</span>\n            </div>\n            <div className=\"w-px h-4 bg-[var(--border)]\"></div>\n            <div className=\"flex items-center text-sm text-[var(--text-secondary)]\">\n              <i className=\"fas fa-users text-[var(--primary)] mr-2\"></i>\n              <span>{t(\"15+ restaurants satisfaits\", \"15+ satisfied restaurants\")}</span>\n            </div>\n            <div className=\"w-px h-4 bg-[var(--border)]\"></div>\n            <div className=\"flex items-center text-sm text-[var(--text-secondary)]\">\n              <i className=\"fas fa-star text-[var(--accent)] mr-2\"></i>\n              <span>{t(\"4.9/5 satisfaction moyenne\", \"4.9/5 average satisfaction\")}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":14146},"client/src/components/navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { useLanguage } from \"./language-provider\";\nimport sameatsLogo from \"@assets/logo-blanc_1755211740901.png\";\n\nexport function Navigation() {\n  const { language, setLanguage, t } = useLanguage();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navigation = [\n    { name: t(\"Accueil\", \"Home\"), href: \"/\", id: \"home\" },\n    { name: t(\"Fonctionnalités\", \"Features\"), href: \"/features\", id: \"features\" },\n    { name: t(\"Tarifs\", \"Pricing\"), href: \"/pricing\", id: \"pricing\" },\n    { name: t(\"À Propos\", \"About\"), href: \"/about\", id: \"about\" },\n    { name: t(\"Contact\", \"Contact\"), href: \"/contact\", id: \"contact\" }\n  ];\n\n  const isActive = (href: string) => {\n    if (href === \"/\" && location === \"/\") return true;\n    if (href !== \"/\" && location.startsWith(href)) return true;\n    return false;\n  };\n\n  return (\n    <nav className=\"fixed top-0 w-full z-50 bg-black/80 backdrop-blur-xl border-b border-gray-700/50 transition-all duration-300\">\n      <div className=\"container mx-auto px-4 md:px-6 py-3 md:py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <Link href=\"/\">\n            <div className=\"flex items-center cursor-pointer\">\n              <img \n                src={sameatsLogo} \n                alt=\"SAMEATS\" \n                className=\"h-8 md:h-10 w-auto drop-shadow-lg hover:scale-105 transition-transform duration-300\"\n              />\n            </div>\n          </Link>\n          \n          {/* Navigation Links */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navigation.map((item) => (\n              <Link key={item.id} href={item.href}>\n                <span className={`hover:text-primary-500 transition-colors cursor-pointer font-medium ${\n                  isActive(item.href) ? 'text-primary-400' : 'text-white'\n                }`}>\n                  {item.name}\n                </span>\n              </Link>\n            ))}\n          </div>\n          \n          {/* Language Toggle & CTA */}\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center bg-dark-600 rounded-lg p-1\">\n              <button\n                onClick={() => setLanguage('fr')}\n                className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\n                  language === 'fr' \n                    ? 'bg-primary-gradient text-white' \n                    : 'text-gray-400 hover:text-white'\n                }`}\n              >\n                FR\n              </button>\n              <button\n                onClick={() => setLanguage('en')}\n                className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\n                  language === 'en' \n                    ? 'bg-primary-gradient text-white' \n                    : 'text-gray-400 hover:text-white'\n                }`}\n              >\n                EN\n              </button>\n            </div>\n            <Link href=\"/contact\">\n              <button className=\"bg-primary-gradient px-6 py-2 rounded-lg font-medium hover:shadow-lg transition-all hover-lift\">\n                {t(\"Démo gratuite\", \"Free Demo\")}\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":3390},"client/src/components/pricing-section.tsx":{"content":"import { useState } from \"react\";\nimport { useLanguage } from \"./language-provider\";\n\nexport function PricingSection() {\n  const { t } = useLanguage();\n  const [isAnnual, setIsAnnual] = useState(false);\n\n  const scrollToContact = () => {\n    const element = document.getElementById('contact');\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const plans = [\n    {\n      name: \"Start\",\n      price: \"69€\",\n      features: [\n        t(\"1 établissement\", \"1 location\"),\n        t(\"Commandes illimitées\", \"Unlimited orders\"),\n        t(\"Site de commande\", \"Ordering website\"),\n        t(\"Click & collect\", \"Click & collect\"),\n        t(\"Support email\", \"Email support\")\n      ],\n      popular: false\n    },\n    {\n      name: \"Grow\",\n      price: \"119€\",\n      features: [\n        t(\"Jusqu'à 3 établissements\", \"Up to 3 locations\"),\n        t(\"Zones de livraison\", \"Delivery zones\"),\n        t(\"Upsell/cross-sell\", \"Upsell/cross-sell\"),\n        t(\"Impressions cuisine/KDS\", \"Kitchen printing/KDS\"),\n        t(\"Support prioritaire\", \"Priority support\")\n      ],\n      popular: true\n    },\n    {\n      name: \"Pro\",\n      price: \"199€\",\n      features: [\n        t(\"Apps iOS/Android\", \"iOS/Android apps\"),\n        t(\"Multi-langues/devises\", \"Multi-language/currency\"),\n        t(\"Promos avancées\", \"Advanced promos\"),\n        t(\"SLA 99,9%\", \"99.9% SLA\"),\n        t(\"Support chat\", \"Chat support\")\n      ],\n      popular: false\n    },\n    {\n      name: \"Enterprise\",\n      price: t(\"Sur devis\", \"On quote\"),\n      features: [\n        t(\">10 établissements\", \">10 locations\"),\n        t(\"Intégrations\", \"Integrations\"),\n        t(\"SSO\", \"SSO\"),\n        t(\"Formation\", \"Training\"),\n        t(\"Account manager\", \"Account manager\")\n      ],\n      popular: false\n    }\n  ];\n\n  return (\n    <section id=\"pricing\" className=\"py-24 bg-gradient-to-br from-dark-700 via-dark-800 to-dark-900 relative overflow-hidden\">\n      {/* Background elements */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute top-10 left-20 w-64 h-64 bg-primary-500/5 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-10 right-20 w-64 h-64 bg-secondary-500/5 rounded-full blur-3xl\"></div>\n      </div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 relative z-10\">\n        <div className=\"text-center mb-16 md:mb-20\">\n          <div className=\"inline-block px-4 py-2 bg-green-500/10 border border-green-500/20 rounded-full text-sm font-medium text-green-300 mb-6\">\n            {t(\"💰 Prix Transparents\", \"💰 Transparent Pricing\")}\n          </div>\n          <h2 className=\"text-4xl md:text-6xl font-poppins font-bold mb-6 gradient-text\">\n            {t(\"Tarifs transparents\", \"Transparent Pricing\")}\n          </h2>\n          <div className=\"max-w-4xl mx-auto\">\n            <p className=\"text-xl text-gray-300 mb-6 leading-relaxed\">\n              {t(\n                \"0% commission SAMEATS • Frais PSP à votre charge • Installation 500€ + 1 mois gratuit\",\n                \"0% SAMEATS commission • PSP fees on you • €500 setup + 1 month free\"\n              )}\n            </p>\n            <div className=\"flex flex-wrap justify-center gap-4 text-sm\">\n              <span className=\"px-4 py-2 bg-green-500/20 text-green-300 rounded-full\">\n                {t(\"✓ Sans engagement\", \"✓ No commitment\")}\n              </span>\n              <span className=\"px-4 py-2 bg-blue-500/20 text-blue-300 rounded-full\">\n                {t(\"✓ Support inclus\", \"✓ Support included\")}\n              </span>\n              <span className=\"px-4 py-2 bg-purple-500/20 text-purple-300 rounded-full\">\n                {t(\"✓ Mises à jour gratuites\", \"✓ Free updates\")}\n              </span>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-center space-x-4 mb-8\">\n            <span className=\"text-gray-400\">\n              {t(\"Mensuel\", \"Monthly\")}\n            </span>\n            <div className=\"relative\">\n              <input \n                type=\"checkbox\" \n                id=\"annual-toggle\" \n                className=\"sr-only\"\n                checked={isAnnual}\n                onChange={(e) => setIsAnnual(e.target.checked)}\n              />\n              <label htmlFor=\"annual-toggle\" className=\"block w-14 h-8 bg-gray-600 rounded-full cursor-pointer\">\n                <div className={`w-6 h-6 bg-white rounded-full shadow-md transform transition-transform duration-300 mt-1 ${\n                  isAnnual ? 'translate-x-7' : 'translate-x-1'\n                }`}></div>\n              </label>\n            </div>\n            <span className=\"text-primary-500 font-medium\">\n              {t(\"Annuel (-15%)\", \"Annual (-15%)\")}\n            </span>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 md:gap-8 max-w-7xl mx-auto\">\n          {plans.map((plan, index) => (\n            <div key={index} className={`neo-card p-8 rounded-2xl hover-lift group relative transition-all duration-500 ${\n              plan.popular ? 'border-2 border-primary-500 scale-105' : ''\n            }`}>\n              {plan.popular && (\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                  <span className=\"bg-primary-gradient px-6 py-2 rounded-full text-sm font-semibold shadow-lg\">\n                    <i className=\"fas fa-crown mr-2\"></i>\n                    {t(\"Populaire\", \"Popular\")}\n                  </span>\n                </div>\n              )}\n              \n              <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/5 to-secondary-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-2xl\"></div>\n              \n              <div className=\"text-center relative z-10\">\n                <div className=\"w-16 h-16 bg-primary-gradient rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300 shadow-lg\">\n                  <i className={`${plan.popular ? 'fas fa-crown' : 'fas fa-rocket'} text-white text-xl`}></i>\n                </div>\n                <h3 className=\"text-2xl font-poppins font-bold mb-4 group-hover:text-primary-300 transition-colors\">{plan.name}</h3>\n                <div className=\"text-4xl font-bold mb-6\">\n                  <span className=\"gradient-text\">{plan.price}</span>\n                  {plan.price !== t(\"Sur devis\", \"On quote\") && (\n                    <span className=\"text-lg text-gray-400 block text-sm mt-1\">\n                      {t(\"/mois\", \"/month\")}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <ul className=\"space-y-4 mb-8 text-left relative z-10\">\n                {plan.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-start text-sm\">\n                    <div className=\"w-5 h-5 bg-green-500/20 rounded-full flex items-center justify-center mr-3 mt-0.5 flex-shrink-0\">\n                      <i className=\"fas fa-check text-green-400 text-xs\"></i>\n                    </div>\n                    <span className=\"text-gray-300\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n              <button \n                onClick={scrollToContact}\n                className={`w-full py-4 rounded-xl font-semibold transition-all duration-300 relative overflow-hidden relative z-10 ${\n                  plan.popular \n                    ? 'modern-button text-white shadow-lg' \n                    : 'border-2 border-primary-500 hover:bg-primary-500 hover:shadow-lg bg-primary-500/10'\n                }`}\n              >\n                <span className=\"relative z-10 flex items-center justify-center gap-2\">\n                  <i className={`fas ${plan.popular ? 'fa-rocket' : 'fa-arrow-right'}`}></i>\n                  {plan.name === \"Enterprise\" \n                    ? t(\"Nous contacter\", \"Contact Us\")\n                    : t(\"Commencer\", \"Get Started\")\n                  }\n                </span>\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":8216},"client/src/components/revenue-stats.tsx":{"content":"import { useLanguage } from \"./language-provider\";\nimport { useState, useEffect } from \"react\";\n\nexport function RevenueStats() {\n  const { t } = useLanguage();\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n        }\n      },\n      { threshold: 0.3 }\n    );\n\n    const element = document.getElementById('revenue-stats');\n    if (element) observer.observe(element);\n\n    return () => observer.disconnect();\n  }, []);\n\n  const stats = [\n    {\n      label: t(\"Chiffre d'affaires moyen AVANT\", \"Average revenue BEFORE\"),\n      value: \"€3,200\",\n      period: t(\"/mois\", \"/month\"),\n      icon: \"fas fa-chart-line-down\",\n      color: \"text-red-400\",\n      bgColor: \"bg-red-500/10\"\n    },\n    {\n      label: t(\"Chiffre d'affaires moyen APRÈS\", \"Average revenue AFTER\"), \n      value: \"€8,500\",\n      period: t(\"/mois\", \"/month\"),\n      icon: \"fas fa-rocket\",\n      color: \"text-green-400\",\n      bgColor: \"bg-green-500/10\"\n    },\n    {\n      label: t(\"Augmentation moyenne\", \"Average increase\"),\n      value: \"+165%\",\n      period: t(\"en 6 mois\", \"in 6 months\"),\n      icon: \"fas fa-trending-up\",\n      color: \"text-primary-400\",\n      bgColor: \"bg-primary-500/10\"\n    },\n    {\n      label: t(\"Retour sur investissement\", \"Return on investment\"),\n      value: \"420%\",\n      period: t(\"première année\", \"first year\"),\n      icon: \"fas fa-coins\",\n      color: \"text-yellow-400\",\n      bgColor: \"bg-yellow-500/10\"\n    }\n  ];\n\n  const CountUpNumber = ({ target, duration = 2000 }: { target: string; duration?: number }) => {\n    const [count, setCount] = useState(\"0\");\n    \n    useEffect(() => {\n      if (!isVisible) return;\n      \n      // Extract number from string like \"€8,500\" or \"+165%\"\n      const numMatch = target.match(/[\\d,]+/);\n      if (!numMatch) {\n        setCount(target);\n        return;\n      }\n      \n      const targetNum = parseInt(numMatch[0].replace(',', ''));\n      const prefix = target.split(numMatch[0])[0];\n      const suffix = target.split(numMatch[0])[1];\n      \n      let currentNum = 0;\n      const increment = targetNum / (duration / 50);\n      \n      const timer = setInterval(() => {\n        currentNum += increment;\n        if (currentNum >= targetNum) {\n          currentNum = targetNum;\n          clearInterval(timer);\n        }\n        \n        const formattedNum = Math.floor(currentNum).toLocaleString();\n        setCount(`${prefix}${formattedNum}${suffix}`);\n      }, 50);\n      \n      return () => clearInterval(timer);\n    }, [isVisible, target, duration]);\n    \n    return <span>{count}</span>;\n  };\n\n  return (\n    <section id=\"revenue-stats\" className=\"py-20 bg-gradient-to-br from-dark-900 to-black relative overflow-hidden\">\n      {/* Background decoration */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute top-20 left-10 w-64 h-64 bg-green-500/5 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-20 right-10 w-64 h-64 bg-primary-500/5 rounded-full blur-3xl\"></div>\n      </div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-block px-4 py-2 bg-green-500/10 border border-green-500/20 rounded-full text-sm font-medium text-green-300 mb-6\">\n            {t(\"📈 Résultats Prouvés\", \"📈 Proven Results\")}\n          </div>\n          <h2 className=\"text-3xl md:text-5xl font-poppins font-bold mb-6 gradient-text\">\n            {t(\"Impact sur le chiffre d'affaires\", \"Revenue Impact\")}\n          </h2>\n          <p className=\"text-lg md:text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed\">\n            {t(\n              \"Découvrez l'impact réel de SAMEATS sur les revenus de nos clients restaurateurs\",\n              \"Discover the real impact of SAMEATS on our restaurant clients' revenue\"\n            )}\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 md:gap-8\">\n          {stats.map((stat, index) => (\n            <div \n              key={index} \n              className={`neo-card p-6 md:p-8 rounded-2xl text-center group hover-lift ${\n                isVisible ? 'animate-fadeInScale' : 'opacity-0'\n              }`}\n              style={{ animationDelay: `${index * 0.2}s` }}\n            >\n              <div className={`w-16 h-16 ${stat.bgColor} rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300`}>\n                <i className={`${stat.icon} ${stat.color} text-2xl`}></i>\n              </div>\n              \n              <div className={`text-3xl md:text-4xl font-bold mb-2 ${stat.color}`}>\n                <CountUpNumber target={stat.value} />\n              </div>\n              \n              <p className=\"text-gray-400 text-sm mb-3\">{stat.period}</p>\n              \n              <h3 className=\"text-gray-300 font-medium text-sm leading-tight\">\n                {stat.label}\n              </h3>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-16 text-center\">\n          <div className=\"neo-card p-8 rounded-2xl inline-block max-w-2xl\">\n            <h3 className=\"text-xl md:text-2xl font-poppins font-bold mb-4 text-primary-300\">\n              {t(\"Étude basée sur 50+ restaurants\", \"Study based on 50+ restaurants\")}\n            </h3>\n            <p className=\"text-gray-300 text-sm md:text-base leading-relaxed\">\n              {t(\n                \"Résultats moyens observés sur une période de 12 mois après l'implémentation de SAMEATS. Les résultats peuvent varier selon le type d'établissement et la localisation.\",\n                \"Average results observed over a 12-month period after SAMEATS implementation. Results may vary depending on establishment type and location.\"\n              )}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":6010},"client/src/components/seo-head.tsx":{"content":"import { useEffect } from 'react';\nimport { useLanguage } from './language-provider';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  keywords?: string;\n  ogImage?: string;\n  canonical?: string;\n  structuredData?: any;\n}\n\nexport function SEOHead({ \n  title, \n  description, \n  keywords = '',\n  ogImage = '',\n  canonical = '',\n  structuredData = null\n}: SEOHeadProps) {\n  const { language } = useLanguage();\n\n  useEffect(() => {\n    // Set page title\n    document.title = title;\n\n    // Update meta tags\n    const updateMeta = (name: string, content: string) => {\n      let meta = document.querySelector(`meta[name=\"${name}\"]`) ||\n                  document.querySelector(`meta[property=\"${name}\"]`);\n      \n      if (!meta) {\n        meta = document.createElement('meta');\n        if (name.startsWith('og:') || name.startsWith('twitter:')) {\n          meta.setAttribute('property', name);\n        } else {\n          meta.setAttribute('name', name);\n        }\n        document.head.appendChild(meta);\n      }\n      meta.setAttribute('content', content);\n    };\n\n    // Basic meta tags\n    updateMeta('description', description);\n    if (keywords) updateMeta('keywords', keywords);\n    updateMeta('robots', 'index, follow');\n    updateMeta('language', language);\n\n    // Open Graph tags\n    updateMeta('og:title', title);\n    updateMeta('og:description', description);\n    updateMeta('og:type', 'website');\n    updateMeta('og:locale', language === 'fr' ? 'fr_FR' : 'en_US');\n    updateMeta('og:site_name', 'SAMEATS');\n    \n    if (ogImage) {\n      updateMeta('og:image', ogImage);\n      updateMeta('og:image:alt', title);\n    }\n\n    // Twitter Card tags\n    updateMeta('twitter:card', 'summary_large_image');\n    updateMeta('twitter:title', title);\n    updateMeta('twitter:description', description);\n    if (ogImage) updateMeta('twitter:image', ogImage);\n\n    // Canonical URL\n    if (canonical) {\n      let link = document.querySelector('link[rel=\"canonical\"]');\n      if (!link) {\n        link = document.createElement('link');\n        link.setAttribute('rel', 'canonical');\n        document.head.appendChild(link);\n      }\n      link.setAttribute('href', canonical);\n    }\n\n    // Structured data\n    if (structuredData) {\n      let script = document.querySelector('#structured-data');\n      if (!script) {\n        script = document.createElement('script');\n        script.setAttribute('type', 'application/ld+json');\n        script.setAttribute('id', 'structured-data');\n        document.head.appendChild(script);\n      }\n      script.textContent = JSON.stringify(structuredData);\n    }\n\n    // Language alternatives\n    const setLangAlternate = (lang: string, href: string) => {\n      let link = document.querySelector(`link[hreflang=\"${lang}\"]`);\n      if (!link) {\n        link = document.createElement('link');\n        link.setAttribute('rel', 'alternate');\n        link.setAttribute('hreflang', lang);\n        document.head.appendChild(link);\n      }\n      link.setAttribute('href', href);\n    };\n\n    const currentPath = window.location.pathname;\n    setLangAlternate('fr', `https://sameats.com${currentPath}`);\n    setLangAlternate('en', `https://sameats.com/en${currentPath}`);\n    setLangAlternate('x-default', `https://sameats.com${currentPath}`);\n\n  }, [title, description, keywords, ogImage, canonical, structuredData, language]);\n\n  return null;\n}\n\n// Helper function to generate structured data\nexport const generateOrganizationSchema = (language: string) => ({\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"Organization\",\n  \"name\": \"SAMEATS\",\n  \"description\": language === 'fr' \n    ? \"Solution complète de commande en ligne pour restaurants sans commission\"\n    : \"Complete online ordering solution for restaurants without commission\",\n  \"url\": \"https://sameats.com\",\n  \"logo\": \"https://sameats.com/logo.png\",\n  \"contactPoint\": {\n    \"@type\": \"ContactPoint\",\n    \"telephone\": \"+33-1-23-45-67-89\",\n    \"contactType\": \"customer service\",\n    \"availableLanguage\": [\"French\", \"English\"]\n  },\n  \"address\": {\n    \"@type\": \"PostalAddress\",\n    \"streetAddress\": \"123 Avenue des Champs-Élysées\",\n    \"addressLocality\": \"Paris\",\n    \"postalCode\": \"75008\",\n    \"addressCountry\": \"FR\"\n  },\n  \"sameAs\": [\n    \"https://linkedin.com/company/sameats\",\n    \"https://twitter.com/sameats\",\n    \"https://facebook.com/sameats\"\n  ]\n});\n\nexport const generateProductSchema = (language: string) => ({\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"Product\",\n  \"name\": \"SAMEATS\",\n  \"description\": language === 'fr'\n    ? \"Plateforme de commande en ligne complète pour restaurants avec site web, applications mobiles et back-office\"\n    : \"Complete online ordering platform for restaurants with website, mobile apps and back-office\",\n  \"brand\": {\n    \"@type\": \"Brand\",\n    \"name\": \"SAMEATS\"\n  },\n  \"offers\": {\n    \"@type\": \"Offer\",\n    \"price\": \"69\",\n    \"priceCurrency\": \"EUR\",\n    \"priceValidUntil\": \"2025-12-31\",\n    \"availability\": \"https://schema.org/InStock\",\n    \"seller\": {\n      \"@type\": \"Organization\",\n      \"name\": \"SAMEATS\"\n    }\n  },\n  \"aggregateRating\": {\n    \"@type\": \"AggregateRating\",\n    \"ratingValue\": \"4.8\",\n    \"reviewCount\": \"500\"\n  }\n});\n\nexport const generateFAQSchema = (faqs: { question: string; answer: string }[]) => ({\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": faqs.map(faq => ({\n    \"@type\": \"Question\",\n    \"name\": faq.question,\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": faq.answer\n    }\n  }))\n});","size_bytes":5502},"client/src/components/solutions-overview-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\n\nexport function SolutionsOverviewSection() {\n  const { t } = useLanguage();\n\n  const solutions = [\n    {\n      title: t(\"Vendre en ligne\", \"Sell Food Online\"),\n      description: t(\n        \"Système de commande en ligne gratuit prêt à l'emploi. Notre système est conçu pour augmenter vos revenus tout en les protégeant des applications tierces et de leurs frais de commission élevés.\",\n        \"Commission-free direct online ordering right out of the box. Our system is designed to grow your revenue while protecting it from third-party apps and their high commission fees.\"\n      ),\n      icon: \"fas fa-shopping-cart\",\n      color: \"from-green-500 to-emerald-600\"\n    },\n    {\n      title: t(\"Site Web Attractif\", \"Attract more clients directly from your branded website\"),\n      description: t(\n        \"Démarquez-vous des autres restaurants avec une présence web unique et personnalisée. Choisissez parmi une variété de modèles de sites web personnalisables qui correspondent à l'image de marque de votre restaurant.\",\n        \"Stand out from other restaurants with a unique and personalized web presence. Choose from a variety of customizable website templates that match your restaurant's branding.\"\n      ),\n      icon: \"fas fa-globe\",\n      color: \"from-blue-500 to-cyan-600\"\n    },\n    {\n      title: t(\"App Mobile Personnalisée\", \"Improve customer loyalty with your own mobile app\"),\n      description: t(\n        \"Rester en contact avec vos clients est la clé ! Avec SAMEATS, lancez facilement des messages marketing via votre application personnalisée avec notifications push et programmes de fidélité.\",\n        \"Staying in touch with your customers is the key! With SAMEATS, effortlessly launch marketing messages through your branded app with push notifications and loyalty programs.\"\n      ),\n      icon: \"fas fa-mobile-alt\",\n      color: \"from-purple-500 to-pink-600\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 bg-gradient-to-b from-dark-800 to-dark-700 relative overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute top-0 left-0 w-full h-full\">\n        <div className=\"absolute top-32 right-20 w-40 h-40 bg-primary-500/5 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-32 left-20 w-32 h-32 bg-secondary-500/5 rounded-full blur-3xl\"></div>\n      </div>\n\n      <div className=\"container mx-auto px-4 md:px-6 relative z-10\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-block px-4 py-2 bg-primary-500/10 border border-primary-500/20 rounded-full text-sm font-medium text-primary-300 mb-6\">\n            {t(\"🚀 Solutions Complètes\", \"🚀 Complete Solutions\")}\n          </div>\n          <h2 className=\"text-4xl md:text-6xl font-poppins font-bold mb-6 gradient-text\">\n            {t(\"Commencez à vendre en quelques minutes\", \"Start selling in minutes\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-4xl mx-auto leading-relaxed\">\n            {t(\n              \"SAMEATS vous permet de lancer la commande en ligne directe sans commission dès la sortie de la boîte.\",\n              \"SAMEATS lets you launch commission-free direct online ordering right out of the box.\"\n            )}\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-16\">\n          {solutions.map((solution, index) => (\n            <div key={index} className=\"neo-card p-8 rounded-2xl hover-lift group relative overflow-hidden\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/5 to-secondary-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\n              <div className=\"relative z-10\">\n                <div className={`w-16 h-16 bg-gradient-to-r ${solution.color} rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300 shadow-lg`}>\n                  <i className={`${solution.icon} text-white text-xl`}></i>\n                </div>\n                <h3 className=\"text-2xl font-poppins font-semibold mb-4 group-hover:text-primary-300 transition-colors\">\n                  {solution.title}\n                </h3>\n                <p className=\"text-gray-300 leading-relaxed mb-6\">\n                  {solution.description}\n                </p>\n                <button className=\"inline-flex items-center gap-2 text-primary-400 hover:text-primary-300 font-medium transition-colors group-hover:translate-x-1 transition-transform duration-300\">\n                  {t(\"En savoir plus\", \"Find out more\")}\n                  <i className=\"fas fa-arrow-right text-sm\"></i>\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"text-center\">\n          <button className=\"btn-primary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift\">\n            {t(\"Commencer maintenant\", \"Start now\")}\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5047},"client/src/components/solutions-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\n\nexport function SolutionsSection() {\n  const { t } = useLanguage();\n\n  const solutions = [\n    {\n      icon: \"fas fa-utensils\",\n      title: t(\"Restaurateurs indépendants\", \"Independent Restaurants\"),\n      description: t(\n        \"Solution clé en main pour développer vos ventes en ligne rapidement\",\n        \"Turnkey solution to develop your online sales quickly\"\n      ),\n      features: [\n        t(\"Configuration rapide\", \"Quick setup\"),\n        t(\"Prix accessible\", \"Affordable pricing\"),\n        t(\"Support dédié\", \"Dedicated support\")\n      ]\n    },\n    {\n      icon: \"fas fa-building\",\n      title: t(\"Groupes & franchises\", \"Groups & Franchises\"),\n      description: t(\n        \"Gestion centralisée de plusieurs établissements avec branding unifié\",\n        \"Centralized management of multiple locations with unified branding\"\n      ),\n      features: [\n        t(\"Multi-établissements\", \"Multi-location\"),\n        t(\"Rapports consolidés\", \"Consolidated reports\"),\n        t(\"Gestion centralisée\", \"Centralized management\")\n      ]\n    },\n    {\n      icon: \"fas fa-cloud-meatball\",\n      title: t(\"Dark kitchens\", \"Dark Kitchens\"),\n      description: t(\n        \"Solution optimisée pour la livraison et le click & collect\",\n        \"Solution optimized for delivery and click & collect\"\n      ),\n      features: [\n        t(\"100% digital\", \"100% digital\"),\n        t(\"Zones de livraison\", \"Delivery zones\"),\n        t(\"KDS intégré\", \"Integrated KDS\")\n      ]\n    }\n  ];\n\n  return (\n    <section id=\"solutions\" className=\"py-20 bg-dark-800\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-poppins font-bold mb-6\">\n            {t(\"Solutions adaptées\", \"Tailored Solutions\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n            {t(\n              \"Nous accompagnons tous types d'établissements dans leur transformation digitale\",\n              \"We support all types of establishments in their digital transformation\"\n            )}\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {solutions.map((solution, index) => (\n            <div key={index} className=\"glass-card p-8 rounded-xl text-center hover-lift\">\n              <div className=\"w-24 h-24 bg-primary-gradient rounded-full flex items-center justify-center mx-auto mb-6\">\n                <i className={`${solution.icon} text-white text-3xl`}></i>\n              </div>\n              <h3 className=\"text-2xl font-poppins font-semibold mb-4\">\n                {solution.title}\n              </h3>\n              <p className=\"text-gray-300 mb-6\">\n                {solution.description}\n              </p>\n              <ul className=\"text-left space-y-2 text-gray-300\">\n                {solution.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center space-x-2\">\n                    <i className=\"fas fa-check text-primary-500\"></i>\n                    <span>{feature}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3308},"client/src/components/three-hero-background.tsx":{"content":"import { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nexport function ThreeHeroBackground() {\n  const mountRef = useRef<HTMLDivElement>(null);\n  const sceneRef = useRef<THREE.Scene>();\n  const rendererRef = useRef<THREE.WebGLRenderer>();\n  const animationRef = useRef<number>();\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.z = 30;\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({ \n      alpha: true, \n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.setClearColor(0x000000, 0);\n    rendererRef.current = renderer;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Particles\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = window.innerWidth < 768 ? 800 : 1500;\n    const posArray = new Float32Array(particlesCount * 3);\n    const colorArray = new Float32Array(particlesCount * 3);\n\n    for (let i = 0; i < particlesCount * 3; i += 3) {\n      // Position\n      posArray[i] = (Math.random() - 0.5) * 100;\n      posArray[i + 1] = (Math.random() - 0.5) * 100;\n      posArray[i + 2] = (Math.random() - 0.5) * 100;\n\n      // Color gradient from orange to yellow\n      const t = Math.random();\n      colorArray[i] = 1; // R\n      colorArray[i + 1] = 0.4 + t * 0.4; // G\n      colorArray[i + 2] = t * 0.2; // B\n    }\n\n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n    particlesGeometry.setAttribute('color', new THREE.BufferAttribute(colorArray, 3));\n\n    // Particle material\n    const particlesMaterial = new THREE.PointsMaterial({\n      size: window.innerWidth < 768 ? 0.8 : 1.2,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.8,\n      blending: THREE.AdditiveBlending\n    });\n\n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n\n    // Floating geometric shapes\n    const shapes: THREE.Mesh[] = [];\n    const shapeCount = window.innerWidth < 768 ? 8 : 15;\n    \n    for (let i = 0; i < shapeCount; i++) {\n      const geometries = [\n        new THREE.BoxGeometry(2, 2, 2),\n        new THREE.SphereGeometry(1, 8, 6),\n        new THREE.ConeGeometry(1, 2, 6),\n        new THREE.OctahedronGeometry(1.5)\n      ];\n      \n      const geometry = geometries[Math.floor(Math.random() * geometries.length)];\n      const material = new THREE.MeshBasicMaterial({\n        color: new THREE.Color().setHSL(0.1 + Math.random() * 0.1, 0.8, 0.6),\n        transparent: true,\n        opacity: 0.3,\n        wireframe: true\n      });\n\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.position.set(\n        (Math.random() - 0.5) * 60,\n        (Math.random() - 0.5) * 60,\n        (Math.random() - 0.5) * 60\n      );\n      mesh.rotation.set(\n        Math.random() * Math.PI,\n        Math.random() * Math.PI,\n        Math.random() * Math.PI\n      );\n      \n      scene.add(mesh);\n      shapes.push(mesh);\n    }\n\n    // Animation\n    const animate = () => {\n      animationRef.current = requestAnimationFrame(animate);\n\n      // Rotate particles\n      particlesMesh.rotation.y += 0.002;\n      particlesMesh.rotation.x += 0.001;\n\n      // Animate shapes\n      shapes.forEach((shape, index) => {\n        shape.rotation.x += 0.005 + index * 0.001;\n        shape.rotation.y += 0.003 + index * 0.001;\n        shape.position.y += Math.sin(Date.now() * 0.001 + index) * 0.02;\n      });\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle resize\n    const handleResize = () => {\n      if (!rendererRef.current) return;\n      \n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n      rendererRef.current.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Mouse interaction\n    const handleMouseMove = (event: MouseEvent) => {\n      const mouseX = (event.clientX / window.innerWidth) * 2 - 1;\n      const mouseY = -(event.clientY / window.innerHeight) * 2 + 1;\n      \n      camera.position.x = mouseX * 2;\n      camera.position.y = mouseY * 2;\n      camera.lookAt(scene.position);\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      \n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      \n      if (mountRef.current && renderer.domElement) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      \n      renderer.dispose();\n      \n      // Dispose geometries and materials\n      shapes.forEach(shape => {\n        shape.geometry.dispose();\n        (shape.material as THREE.Material).dispose();\n      });\n      particlesGeometry.dispose();\n      particlesMaterial.dispose();\n    };\n  }, []);\n\n  return (\n    <div \n      ref={mountRef} \n      className=\"absolute inset-0 -z-10 opacity-60\"\n      style={{ pointerEvents: 'none' }}\n    />\n  );\n}","size_bytes":5515},"client/src/components/website-examples-section.tsx":{"content":"import { useLanguage } from \"./language-provider\";\n\nexport function WebsiteExamplesSection() {\n  const { t } = useLanguage();\n\n  // Using placeholder images that would represent different restaurant types\n  const examples = [\n    { id: 1, type: \"Pizza\", color: \"from-red-500 to-orange-500\" },\n    { id: 2, type: \"Sushi\", color: \"from-green-500 to-teal-500\" },\n    { id: 3, type: \"Burger\", color: \"from-yellow-500 to-orange-500\" },\n    { id: 4, type: \"Coffee\", color: \"from-amber-600 to-brown-500\" },\n    { id: 5, type: \"Asian\", color: \"from-red-600 to-pink-500\" },\n    { id: 6, type: \"Dessert\", color: \"from-pink-500 to-purple-500\" },\n  ];\n\n  return (\n    <section className=\"py-24 bg-gradient-to-b from-dark-800 to-dark-700 relative overflow-hidden\">\n      <div className=\"container mx-auto px-4 md:px-6\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-block px-4 py-2 bg-primary-500/10 border border-primary-500/20 rounded-full text-sm font-medium text-primary-300 mb-6\">\n            {t(\"🎨 Exemples de Sites\", \"🎨 Website Examples\")}\n          </div>\n          <h2 className=\"text-4xl md:text-6xl font-poppins font-bold mb-6 gradient-text\">\n            {t(\"Voici comment votre site peut ressembler\", \"This is how your website can look\")}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-4xl mx-auto leading-relaxed mb-8\">\n            {t(\n              \"Rencontrez des restaurants qui utilisent déjà SAMEATS 👋\",\n              \"Meet restaurants that are already using SAMEATS 👋\"\n            )}\n          </p>\n        </div>\n\n        {/* Website Examples Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {examples.map((example) => (\n            <div key={example.id} className=\"neo-card p-4 rounded-2xl hover-lift group cursor-pointer overflow-hidden\">\n              <div className=\"relative\">\n                {/* Mock website preview */}\n                <div className=\"aspect-[4/5] bg-gray-900 rounded-lg overflow-hidden border border-gray-700\">\n                  <div className=\"h-full flex flex-col\">\n                    {/* Header */}\n                    <div className=\"bg-gray-800 p-3 border-b border-gray-700\">\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n                        <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\n                        <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                        <div className=\"flex-1 bg-gray-700 h-2 rounded-full mx-4\"></div>\n                      </div>\n                    </div>\n                    \n                    {/* Content */}\n                    <div className=\"flex-1 p-4 space-y-3\">\n                      <div className={`w-full h-20 bg-gradient-to-r ${example.color} rounded-lg flex items-center justify-center`}>\n                        <span className=\"text-white font-bold text-lg\">{example.type}</span>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <div className=\"w-3/4 h-3 bg-gray-700 rounded\"></div>\n                        <div className=\"w-1/2 h-3 bg-gray-700 rounded\"></div>\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <div className=\"h-16 bg-gray-700 rounded\"></div>\n                        <div className=\"h-16 bg-gray-700 rounded\"></div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <div className=\"w-full h-2 bg-gray-700 rounded\"></div>\n                        <div className=\"w-2/3 h-2 bg-gray-700 rounded\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Hover overlay */}\n                <div className=\"absolute inset-0 bg-primary-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-lg flex items-center justify-center\">\n                  <span className=\"text-white font-semibold bg-primary-500 px-4 py-2 rounded-lg\">\n                    {t(\"Voir l'exemple\", \"View Example\")}\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"mt-4 text-center\">\n                <h3 className=\"font-semibold text-lg group-hover:text-primary-300 transition-colors\">\n                  {t(`Restaurant ${example.type}`, `${example.type} Restaurant`)}\n                </h3>\n                <p className=\"text-gray-400 text-sm\">\n                  {t(\"Site personnalisé\", \"Custom website\")}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"text-center\">\n          <button className=\"btn-primary text-lg px-8 py-4 rounded-2xl font-semibold hover-lift\">\n            {t(\"Créer ma boutique en ligne\", \"Create Online Store\")}\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5055},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { ModernNavigation } from \"@/components/modern-navigation\";\nimport { ModernAbout } from \"@/components/modern-about\";\nimport { ModernFooter } from \"@/components/modern-footer\";\nimport { SEOHead, generateOrganizationSchema } from \"@/components/seo-head\";\nimport { useLanguage } from \"@/components/language-provider\";\n\nexport default function About() {\n  const { t, language } = useLanguage();\n\n  return (\n    <div className=\"min-h-screen bg-[var(--background)]\">\n      <SEOHead\n        title={t(\n          \"À Propos SAMEATS - Notre histoire et mission\",\n          \"About SAMEATS - Our story and mission\"\n        )}\n        description={t(\n          \"Découvrez l'histoire de SAMEATS, créé par Samkode après 6+ ans d'expérience dans la restauration. Solution complète pour digitaliser votre restaurant.\",\n          \"Discover SAMEATS story, created by Samkode after 6+ years of restaurant experience. Complete solution to digitize your restaurant.\"\n        )}\n        keywords={t(\n          \"à propos SAMEATS, Samkode, histoire restaurant, digitalisation restaurant\",\n          \"about SAMEATS, Samkode, restaurant story, restaurant digitization\"\n        )}\n        structuredData={generateOrganizationSchema(language)}\n      />\n      <ModernNavigation />\n      <ModernAbout />\n      <ModernFooter />\n    </div>\n  );\n}","size_bytes":1327},"client/src/pages/clients.tsx":{"content":"import { ModernNavigation } from \"@/components/modern-navigation\";\nimport { ModernClientGallery } from \"@/components/modern-client-gallery\";\nimport { ModernTestimonials } from \"@/components/modern-testimonials\";\nimport { ModernFooter } from \"@/components/modern-footer\";\nimport { SEOHead } from \"@/components/seo-head\";\nimport { useLanguage } from \"@/components/language-provider\";\n\nexport function ClientsPage() {\n  const { t, language } = useLanguage();\n\n  return (\n    <div className=\"min-h-screen bg-[var(--background)] text-[var(--text-primary)]\">\n      <SEOHead\n        title={t(\n          \"Nos Clients SAMEATS - Restaurants Partenaires & Témoignages\",\n          \"Our SAMEATS Clients - Partner Restaurants & Testimonials\"\n        )}\n        description={t(\n          \"Découvrez nos restaurants partenaires qui font confiance à SAMEATS et leurs témoignages authentiques sur notre solution de digitalisation.\",\n          \"Discover our partner restaurants who trust SAMEATS and their authentic testimonials about our digitization solution.\"\n        )}\n      />\n      \n      <ModernNavigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-32 pb-20 relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-[var(--background)] via-[var(--surface)]/30 to-[var(--background)]\"></div>\n        <div className=\"absolute inset-0 line-pattern opacity-30\"></div>\n        \n        <div className=\"container mx-auto px-4 md:px-6 relative\">\n          <div className=\"text-center animate-fade-in-up\">\n            <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)] border border-[var(--border)] rounded-full mb-6\">\n              <i className=\"fas fa-users text-[var(--primary)] mr-2\"></i>\n              <span className=\"text-sm text-[var(--text-secondary)]\">\n                {t(\"Nos clients partenaires\", \"Our partner clients\")}\n              </span>\n            </div>\n            \n            <h1 className=\"text-5xl md:text-7xl font-bold mb-6\">\n              <span className=\"text-[var(--text-primary)]\">\n                {t(\"Ils nous font\", \"They trust\")}\n              </span>\n              <br />\n              <span className=\"gradient-text-modern\">\n                {t(\"confiance\", \"us\")}\n              </span>\n            </h1>\n            \n            <p className=\"text-xl text-[var(--text-secondary)] max-w-4xl mx-auto mb-8\">\n              {t(\n                \"Plus de 15 restaurants dans 3 pays font confiance à SAMEATS pour digitaliser leur business. Découvrez leurs histoires de succès et leurs retours d'expérience.\",\n                \"More than 15 restaurants in 3 countries trust SAMEATS to digitize their business. Discover their success stories and feedback.\"\n              )}\n            </p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto\">\n              {[\n                { value: \"15+\", label: t(\"Restaurants clients\", \"Restaurant clients\"), icon: \"fas fa-store\" },\n                { value: \"3\", label: t(\"Pays\", \"Countries\"), icon: \"fas fa-globe\" },\n                { value: \"98%\", label: t(\"Satisfaction\", \"Satisfaction\"), icon: \"fas fa-heart\" }\n              ].map((stat, index) => (\n                <div key={index} className=\"modern-card p-6 text-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-xl flex items-center justify-center mx-auto mb-3\">\n                    <i className={`${stat.icon} text-white`}></i>\n                  </div>\n                  <div className=\"text-3xl font-bold gradient-text-modern mb-1\">\n                    {stat.value}\n                  </div>\n                  <div className=\"text-[var(--text-secondary)] text-sm\">\n                    {stat.label}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <ModernClientGallery />\n      <ModernTestimonials />\n      \n      {/* Success Stories Section */}\n      <section className=\"py-24 bg-[var(--surface)] relative overflow-hidden\">\n        <div className=\"absolute inset-0 dot-pattern opacity-20\"></div>\n        \n        <div className=\"container mx-auto px-4 md:px-6 relative\">\n          <div className=\"text-center mb-16 animate-fade-in-up\">\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n              <span className=\"text-[var(--text-primary)]\">\n                {t(\"Histoires de\", \"Success\")}\n              </span>\n              <br />\n              <span className=\"gradient-text-modern\">\n                {t(\"succès\", \"stories\")}\n              </span>\n            </h2>\n            <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto\">\n              {t(\n                \"Découvrez comment SAMEATS a transformé le business de nos clients\",\n                \"Discover how SAMEATS transformed our clients' business\"\n              )}\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              {\n                title: t(\"T9 Foodies & Grill\", \"T9 Foodies & Grill\"),\n                subtitle: t(\"Augmentation de 45% des ventes\", \"45% sales increase\"),\n                description: t(\n                  \"Grâce à l'application mobile SAMEATS, T9 Foodies & Grill a vu ses commandes en ligne exploser.\",\n                  \"Thanks to the SAMEATS mobile app, T9 Foodies & Grill saw their online orders explode.\"\n                ),\n                metrics: [\n                  { label: t(\"Ventes\", \"Sales\"), value: \"+45%\" },\n                  { label: t(\"Commandes\", \"Orders\"), value: \"2,500/mois\" }\n                ]\n              },\n              {\n                title: t(\"Campus Food Court\", \"Campus Food Court\"),\n                subtitle: t(\"Gestion centralisée de 8 points de vente\", \"Centralized management of 8 outlets\"),\n                description: t(\n                  \"Une seule plateforme pour gérer tous les points de vente du food court universitaire.\",\n                  \"One platform to manage all university food court outlets.\"\n                ),\n                metrics: [\n                  { label: t(\"Efficacité\", \"Efficiency\"), value: \"+60%\" },\n                  { label: t(\"Points de vente\", \"Outlets\"), value: \"8\" }\n                ]\n              },\n              {\n                title: t(\"Patroné Forno\", \"Patroné Forno\"),\n                subtitle: t(\"Digitalisation d'une pizzeria traditionnelle\", \"Traditional pizzeria digitization\"),\n                description: t(\n                  \"Modernisation réussie tout en préservant l'authenticité italienne.\",\n                  \"Successful modernization while preserving Italian authenticity.\"\n                ),\n                metrics: [\n                  { label: t(\"Croissance\", \"Growth\"), value: \"+52%\" },\n                  { label: t(\"Fidélité\", \"Loyalty\"), value: \"85%\" }\n                ]\n              }\n            ].map((story, index) => (\n              <div\n                key={index}\n                className=\"modern-card p-6 animate-fade-in-up\"\n                style={{ animationDelay: `${index * 200}ms` }}\n              >\n                <div className=\"mb-4\">\n                  <h3 className=\"text-xl font-bold text-[var(--text-primary)] mb-2\">\n                    {story.title}\n                  </h3>\n                  <p className=\"text-[var(--primary)] font-medium text-sm\">\n                    {story.subtitle}\n                  </p>\n                </div>\n                \n                <p className=\"text-[var(--text-secondary)] text-sm leading-relaxed mb-6\">\n                  {story.description}\n                </p>\n                \n                <div className=\"grid grid-cols-2 gap-4 pt-4 border-t border-[var(--border)]\">\n                  {story.metrics.map((metric, idx) => (\n                    <div key={idx} className=\"text-center\">\n                      <div className=\"text-lg font-bold gradient-text-modern\">\n                        {metric.value}\n                      </div>\n                      <div className=\"text-xs text-[var(--text-muted)]\">\n                        {metric.label}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      <ModernFooter />\n    </div>\n  );\n}","size_bytes":8452},"client/src/pages/contact.tsx":{"content":"import { useState } from 'react';\nimport { ModernNavigation } from \"@/components/modern-navigation\";\nimport { ModernFooter } from \"@/components/modern-footer\";\nimport { SEOHead, generateOrganizationSchema } from \"@/components/seo-head\";\nimport { useLanguage } from \"@/components/language-provider\";\nimport { submitContactForm, type ContactFormData } from \"@/lib/api\";\n\nexport default function Contact() {\n  const { t, language } = useLanguage();\n  const [activeTab, setActiveTab] = useState<'contact' | 'quote'>('contact');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitMessage, setSubmitMessage] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: '',\n    restaurantType: '',\n    address: '',\n    website: '',\n    needsApp: false,\n    needsDelivery: false,\n    locations: '1',\n    currentSolution: '',\n    urgency: 'medium',\n    rgpdConsent: false\n  });\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.rgpdConsent) {\n      setSubmitMessage(t(\"Veuillez accepter les conditions RGPD\", \"Please accept GDPR conditions\"));\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitMessage(\"\");\n\n    // Add visual feedback immediately\n    const submitButton = e.currentTarget.querySelector('button[type=\"submit\"]') as HTMLButtonElement;\n    if (submitButton) {\n      submitButton.style.transform = 'scale(0.98)';\n      setTimeout(() => {\n        submitButton.style.transform = '';\n      }, 150);\n    }\n\n    try {\n      const contactData: ContactFormData = {\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone,\n        company: formData.company,\n        message: formData.message,\n        type: activeTab,\n        // Tous les champs du formulaire de devis\n        restaurantName: formData.company,\n        restaurantType: formData.restaurantType,\n        address: formData.address || '',\n        website: formData.website || '',\n        currentSolution: formData.currentSolution,\n        urgency: formData.urgency,\n        needsApp: formData.needsApp,\n        needsDelivery: formData.needsDelivery,\n        locations: formData.locations,\n        services: [\n          ...(formData.needsApp ? ['Applications mobiles'] : []),\n          ...(formData.needsDelivery ? ['Système de livraison'] : [])\n        ].join(', '),\n        timeline: formData.urgency,\n        budget: formData.urgency === 'urgent' ? 'Premium' : 'Standard'\n      };\n\n      const result = await submitContactForm(contactData);\n      \n      if (result.success) {\n        setSubmitMessage(\n          t(\n            `Merci ! Votre ${activeTab === 'quote' ? 'demande de devis' : 'message'} a été envoyé avec succès. Nous vous recontacterons rapidement.`,\n            `Thank you! Your ${activeTab === 'quote' ? 'quote request' : 'message'} has been sent successfully. We'll contact you soon.`\n          )\n        );\n        \n        // Reset form\n        setFormData({\n          name: '',\n          email: '',\n          phone: '',\n          company: '',\n          message: '',\n          restaurantType: '',\n          address: '',\n          website: '',\n          needsApp: false,\n          needsDelivery: false,\n          locations: '1',\n          currentSolution: '',\n          urgency: 'medium',\n          rgpdConsent: false\n        });\n      } else {\n        setSubmitMessage(\n          t(\"Erreur lors de l'envoi. Veuillez réessayer.\", \"Error sending. Please try again.\")\n        );\n      }\n    } catch (error) {\n      setSubmitMessage(\n        t(\"Erreur réseau. Veuillez vérifier votre connexion.\", \"Network error. Please check your connection.\")\n      );\n    } finally {\n      setIsSubmitting(false);\n      setTimeout(() => setSubmitMessage(\"\"), 8000);\n    }\n  };\n\n  const contactMethods = [\n    {\n      title: t(\"Discussion directe\", \"Direct chat\"),\n      description: t(\"Échangez en temps réel avec nos experts\", \"Chat in real-time with our experts\"),\n      icon: \"fas fa-comments\",\n      action: t(\"Démarrer le chat\", \"Start chat\"),\n      color: \"from-blue-500 to-cyan-500\",\n      available: true\n    },\n    {\n      title: t(\"Appel téléphonique\", \"Phone call\"),\n      description: t(\"Programmez un appel avec notre équipe\", \"Schedule a call with our team\"),\n      icon: \"fas fa-phone\",\n      action: t(\"Réserver un créneau\", \"Book a slot\"),\n      color: \"from-green-500 to-emerald-500\",\n      available: true\n    },\n    {\n      title: t(\"Démonstration live\", \"Live demo\"),\n      description: t(\"Découvrez SAMEATS en action\", \"Discover SAMEATS in action\"),\n      icon: \"fas fa-video\",\n      action: t(\"Programmer une démo\", \"Schedule demo\"),\n      color: \"from-purple-500 to-violet-500\",\n      available: true\n    }\n  ];\n\n  const contactInfo = [\n    {\n      title: t(\"Support technique\", \"Technical support\"),\n      subtitle: t(\"Disponible 24/7\", \"Available 24/7\"),\n      details: [\"support@sameats.com\", \"+33 1 23 45 67 89\"],\n      icon: \"fas fa-headset\",\n      color: \"text-blue-400\"\n    },\n    {\n      title: t(\"Ventes & Partenariats\", \"Sales & Partnerships\"),\n      subtitle: t(\"Lun-Ven 9h-18h\", \"Mon-Fri 9am-6pm\"),\n      details: [\"sales@sameats.com\", \"+33 1 23 45 67 90\"],\n      icon: \"fas fa-handshake\",\n      color: \"text-green-400\"\n    },\n    {\n      title: t(\"Siège social\", \"Headquarters\"),\n      subtitle: t(\"Paris, France\", \"Paris, France\"),\n      details: [\"123 Avenue des Champs-Élysées\", \"75008 Paris\"],\n      icon: \"fas fa-building\",\n      color: \"text-purple-400\"\n    }\n  ];\n\n  const restaurantTypes = [\n    { value: 'restaurant', label: t('Restaurant traditionnel', 'Traditional restaurant') },\n    { value: 'fast-food', label: t('Fast-food', 'Fast-food') },\n    { value: 'cafe', label: t('Café / Bar', 'Café / Bar') },\n    { value: 'bakery', label: t('Boulangerie', 'Bakery') },\n    { value: 'pizza', label: t('Pizzeria', 'Pizzeria') },\n    { value: 'dark-kitchen', label: t('Dark Kitchen', 'Dark Kitchen') },\n    { value: 'food-truck', label: t('Food Truck', 'Food Truck') },\n    { value: 'chain', label: t('Chaîne / Franchise', 'Chain / Franchise') }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-[var(--background)]\">\n      <SEOHead\n        title={t(\n          \"Contact SAMEATS - Demandez votre devis gratuit\",\n          \"Contact SAMEATS - Request your free quote\"\n        )}\n        description={t(\n          \"Contactez SAMEATS pour une démonstration gratuite. Support technique 24/7, consultation personnalisée et devis sur mesure pour votre restaurant.\",\n          \"Contact SAMEATS for a free demo. 24/7 technical support, personalized consultation and custom quote for your restaurant.\"\n        )}\n        keywords={t(\n          \"contact SAMEATS, devis restaurant, démonstration SAMEATS, support technique, consultation gratuite\",\n          \"contact SAMEATS, restaurant quote, SAMEATS demo, technical support, free consultation\"\n        )}\n        structuredData={generateOrganizationSchema(language)}\n      />\n      <ModernNavigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 sm:pt-24 lg:pt-28 pb-12 sm:pb-16 bg-[var(--background)] relative overflow-hidden\">\n        <div className=\"absolute inset-0 dot-pattern opacity-20\"></div>\n        \n        <div className=\"container-responsive relative\">\n          <div className=\"text-center mb-12 sm:mb-16 animate-fade-in-up\">\n            <div className=\"inline-flex items-center px-3 sm:px-4 py-2 bg-[var(--surface)] border border-[var(--border)] rounded-full mb-4 sm:mb-6\">\n              <i className=\"fas fa-headset text-[var(--primary)] mr-2\"></i>\n              <span className=\"text-xs sm:text-sm text-[var(--text-secondary)]\">\n                {t(\"Support 24/7 disponible\", \"24/7 support available\")}\n              </span>\n            </div>\n            \n            <h1 className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-bold mb-4 sm:mb-6\">\n              <span className=\"text-[var(--text-primary)]\">\n                {t(\"Parlons de votre\", \"Let's talk about your\")}\n              </span>\n              <br />\n              <span className=\"gradient-text-modern\">\n                {t(\"projet\", \"project\")}\n              </span>\n            </h1>\n            \n            <p className=\"text-base sm:text-lg md:text-xl text-[var(--text-secondary)] max-w-xs sm:max-w-2xl lg:max-w-3xl mx-auto mb-6 sm:mb-8 leading-relaxed\">\n              {t(\n                \"Notre équipe d'experts est prête à vous accompagner dans la transformation digitale de votre restaurant. Obtenez une consultation gratuite et un devis personnalisé.\",\n                \"Our team of experts is ready to support you in the digital transformation of your restaurant. Get a free consultation and personalized quote.\"\n              )}\n            </p>\n\n            {/* Quick Stats */}\n            <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6 max-w-4xl mx-auto\">\n              {[\n                { value: '<2h', label: t('Temps de réponse', 'Response time') },\n                { value: '15+', label: t('Restaurants clients', 'Client restaurants') },\n                { value: '24/7', label: t('Support technique', 'Technical support') },\n                { value: '98%', label: t('Satisfaction', 'Satisfaction') }\n              ].map((stat, index) => (\n                <div key={index} className=\"text-center p-2\">\n                  <div className=\"text-xl sm:text-2xl lg:text-3xl font-bold gradient-text-modern mb-1\">\n                    {stat.value}\n                  </div>\n                  <div className=\"text-[var(--text-secondary)] text-xs sm:text-sm\">\n                    {stat.label}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Methods */}\n      <section className=\"py-12 sm:py-16 bg-[var(--surface)] relative\">\n        <div className=\"container-responsive\">\n          <div className=\"text-center mb-8 sm:mb-12 animate-fade-in-up\">\n            <h2 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold mb-4\">\n              <span className=\"text-[var(--text-primary)]\">\n                {t(\"Choisissez votre\", \"Choose your\")}\n              </span>\n              <br />\n              <span className=\"gradient-text-modern\">\n                {t(\"mode de contact\", \"contact method\")}\n              </span>\n            </h2>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 sm:gap-8 mb-12 sm:mb-16\">\n            {contactMethods.map((method, index) => (\n              <div\n                key={index}\n                className=\"modern-card p-6 sm:p-8 text-center group hover-lift transition-all duration-300 animate-fade-in-up mobile-no-hover cursor-pointer\"\n                style={{ animationDelay: `${index * 200}ms` }}\n              >\n                <div className={`w-12 sm:w-16 h-12 sm:h-16 bg-gradient-to-br ${method.color} rounded-2xl flex items-center justify-center mx-auto mb-4 sm:mb-6 group-hover:scale-110 transition-transform duration-300`}>\n                  <i className={`${method.icon} text-lg sm:text-2xl text-white`}></i>\n                </div>\n                \n                <h3 className=\"text-lg sm:text-xl font-bold text-[var(--text-primary)] mb-2\">\n                  {method.title}\n                </h3>\n                \n                <p className=\"text-[var(--text-secondary)] mb-4 sm:mb-6 leading-relaxed text-sm sm:text-base\">\n                  {method.description}\n                </p>\n\n                <button className=\"interactive-button w-full touch-target text-sm sm:text-base text-white py-3 px-6 rounded-xl font-semibold smooth-transition hover:scale-105\">\n                  {method.action}\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Information */}\n      <section className=\"py-16 bg-[var(--background)] relative\">\n        <div className=\"absolute inset-0 line-pattern opacity-10\"></div>\n        \n        <div className=\"container mx-auto px-4 md:px-6 relative\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {contactInfo.map((info, index) => (\n              <div\n                key={index}\n                className=\"modern-card p-8 text-center animate-fade-in-up\"\n                style={{ animationDelay: `${index * 150}ms` }}\n              >\n                <div className=\"flex flex-col items-center\">\n                  <i className={`${info.icon} text-3xl ${info.color} mb-4`}></i>\n                  <h3 className=\"text-lg font-bold text-[var(--text-primary)] mb-1\">\n                    {info.title}\n                  </h3>\n                  <p className=\"text-[var(--text-secondary)] text-sm mb-4\">\n                    {info.subtitle}\n                  </p>\n                  <div className=\"space-y-1\">\n                    {info.details.map((detail, detailIndex) => (\n                      <p key={detailIndex} className=\"text-[var(--text-secondary)] text-sm\">\n                        {detail}\n                      </p>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form Section */}\n      <section className=\"py-20 bg-[var(--surface)] relative\">\n        <div className=\"container mx-auto px-4 md:px-6\">\n          <div className=\"max-w-5xl mx-auto\">\n            {/* Tab selector */}\n            <div className=\"flex justify-center mb-12 animate-fade-in-up\">\n              <div className=\"modern-card p-2 rounded-2xl\">\n                <div className=\"flex\">\n                  <button\n                    onClick={() => setActiveTab('contact')}\n                    className={`px-8 py-4 rounded-xl font-semibold transition-all duration-300 ${\n                      activeTab === 'contact'\n                        ? 'bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white shadow-lg'\n                        : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)]'\n                    }`}\n                  >\n                    <i className=\"fas fa-envelope mr-2\"></i>\n                    {t(\"Contact rapide\", \"Quick contact\")}\n                  </button>\n                  <button\n                    onClick={() => setActiveTab('quote')}\n                    className={`px-8 py-4 rounded-xl font-semibold transition-all duration-300 ${\n                      activeTab === 'quote'\n                        ? 'bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white shadow-lg'\n                        : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)]'\n                    }`}\n                  >\n                    <i className=\"fas fa-calculator mr-2\"></i>\n                    {t(\"Demande de devis\", \"Quote request\")}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Form */}\n            <div className=\"modern-card p-8 md:p-12 rounded-3xl animate-fade-in-up\">\n              <form onSubmit={handleSubmit} className=\"space-y-8\">\n                {/* Header */}\n                <div className=\"text-center mb-8\">\n                  <h3 className=\"text-2xl md:text-3xl font-bold text-[var(--text-primary)] mb-4\">\n                    {activeTab === 'contact' \n                      ? t(\"Contactez-nous\", \"Contact us\")\n                      : t(\"Demande de devis personnalisé\", \"Custom quote request\")\n                    }\n                  </h3>\n                  <p className=\"text-[var(--text-secondary)]\">\n                    {activeTab === 'contact' \n                      ? t(\"Nous vous répondrons dans les 2 heures\", \"We'll respond within 2 hours\")\n                      : t(\"Recevez votre devis détaillé sous 24h\", \"Receive your detailed quote within 24h\")\n                    }\n                  </p>\n                </div>\n\n                {/* Basic Information */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-semibold text-[var(--text-primary)] mb-3\">\n                      {t(\"Nom complet\", \"Full name\")} *\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={formData.name}\n                      onChange={handleInputChange}\n                      required\n                      className=\"w-full px-4 py-4 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus-ring smooth-transition hover:border-[var(--primary)]/70\"\n                      placeholder={t(\"Jean Dupont\", \"John Doe\")}\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-semibold text-[var(--text-primary)] mb-3\">\n                      {t(\"Email professionnel\", \"Business email\")} *\n                    </label>\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      required\n                      className=\"w-full px-4 py-4 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus-ring smooth-transition hover:border-[var(--primary)]/70\"\n                      placeholder={t(\"jean@restaurant.com\", \"john@restaurant.com\")}\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-semibold text-[var(--text-primary)] mb-3\">\n                      {t(\"Téléphone\", \"Phone\")}\n                    </label>\n                    <input\n                      type=\"tel\"\n                      name=\"phone\"\n                      value={formData.phone}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-4 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus-ring smooth-transition hover:border-[var(--primary)]/70\"\n                      placeholder={t(\"+33 1 23 45 67 89\", \"+1 234 567 890\")}\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-semibold text-[var(--text-primary)] mb-3\">\n                      {t(\"Nom du restaurant\", \"Restaurant name\")} *\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"company\"\n                      value={formData.company}\n                      onChange={handleInputChange}\n                      required\n                      className=\"w-full px-4 py-4 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus-ring smooth-transition hover:border-[var(--primary)]/70\"\n                      placeholder={t(\"Chez Marcel\", \"Marcel's Restaurant\")}\n                    />\n                  </div>\n                </div>\n\n                {/* Quote-specific fields */}\n                {activeTab === 'quote' && (\n                  <div className=\"space-y-6 p-6 bg-[var(--background)]/50 rounded-2xl border border-[var(--border)]\">\n                    <h4 className=\"text-lg font-bold text-[var(--text-primary)] flex items-center\">\n                      <i className=\"fas fa-restaurant text-[var(--primary)] mr-2\"></i>\n                      {t(\"Informations sur votre restaurant\", \"About your restaurant\")}\n                    </h4>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <label className=\"block text-sm font-semibold text-[var(--text-primary)] mb-3\">\n                          {t(\"Type de restaurant\", \"Restaurant type\")} *\n                        </label>\n                        <select\n                          name=\"restaurantType\"\n                          value={formData.restaurantType}\n                          onChange={handleInputChange}\n                          required\n                          className=\"w-full px-4 py-4 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] focus:border-[var(--primary)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]/20 transition-colors\"\n                        >\n                          <option value=\"\">{t(\"Sélectionnez un type\", \"Select a type\")}</option>\n                          {restaurantTypes.map(type => (\n                            <option key={type.value} value={type.value}>{type.label}</option>\n                          ))}\n                        </select>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-semibold text-[var(--text-primary)] mb-3\">\n                          {t(\"Nombre d'emplacements\", \"Number of locations\")}\n                        </label>\n                        <select\n                          name=\"locations\"\n                          value={formData.locations}\n                          onChange={handleInputChange}\n                          className=\"w-full px-4 py-4 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] focus:border-[var(--primary)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]/20 transition-colors\"\n                        >\n                          <option value=\"1\">1 {t(\"restaurant\", \"restaurant\")}</option>\n                          <option value=\"2-5\">2-5 {t(\"restaurants\", \"restaurants\")}</option>\n                          <option value=\"6-15\">6-15 {t(\"restaurants\", \"restaurants\")}</option>\n                          <option value=\"16+\">16+ {t(\"restaurants\", \"restaurants\")}</option>\n                        </select>\n                      </div>\n                    </div>\n\n                    {/* Services needed */}\n                    <div className=\"space-y-4\">\n                      <label className=\"block text-sm font-semibold text-[var(--text-primary)]\">\n                        {t(\"Services souhaités\", \"Desired services\")}\n                      </label>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <label className=\"flex items-center space-x-3 p-4 bg-[var(--surface)] border border-[var(--border)] rounded-xl cursor-pointer hover:border-[var(--primary)]/50 transition-colors\">\n                          <input\n                            type=\"checkbox\"\n                            name=\"needsApp\"\n                            checked={formData.needsApp}\n                            onChange={handleInputChange}\n                            className=\"w-5 h-5 text-[var(--primary)] border-[var(--border)] rounded focus:ring-[var(--primary)]\"\n                          />\n                          <span className=\"text-[var(--text-primary)] font-medium\">\n                            {t(\"Applications mobiles\", \"Mobile apps\")}\n                          </span>\n                        </label>\n                        \n                        <label className=\"flex items-center space-x-3 p-4 bg-[var(--surface)] border border-[var(--border)] rounded-xl cursor-pointer hover:border-[var(--primary)]/50 transition-colors\">\n                          <input\n                            type=\"checkbox\"\n                            name=\"needsDelivery\"\n                            checked={formData.needsDelivery}\n                            onChange={handleInputChange}\n                            className=\"w-5 h-5 text-[var(--primary)] border-[var(--border)] rounded focus:ring-[var(--primary)]\"\n                          />\n                          <span className=\"text-[var(--text-primary)] font-medium\">\n                            {t(\"Système de livraison\", \"Delivery system\")}\n                          </span>\n                        </label>\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-semibold text-[var(--text-primary)] mb-3\">\n                        {t(\"Solution actuelle\", \"Current solution\")}\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"currentSolution\"\n                        value={formData.currentSolution}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-4 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:border-[var(--primary)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]/20 transition-colors\"\n                        placeholder={t(\"Ex: Aucune, UberEats uniquement, autre solution...\", \"Ex: None, UberEats only, other solution...\")}\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-semibold text-[var(--text-primary)] mb-3\">\n                        {t(\"Urgence du projet\", \"Project urgency\")}\n                      </label>\n                      <select\n                        name=\"urgency\"\n                        value={formData.urgency}\n                        onChange={handleInputChange}\n                        className=\"w-full px-4 py-4 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] focus:border-[var(--primary)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]/20 transition-colors\"\n                      >\n                        <option value=\"low\">{t(\"Pas d'urgence\", \"No urgency\")}</option>\n                        <option value=\"medium\">{t(\"Dans le mois\", \"Within a month\")}</option>\n                        <option value=\"high\">{t(\"Dans la semaine\", \"Within a week\")}</option>\n                        <option value=\"urgent\">{t(\"Immédiat\", \"Immediate\")}</option>\n                      </select>\n                    </div>\n                  </div>\n                )}\n\n                {/* Message */}\n                <div>\n                  <label className=\"block text-sm font-semibold text-[var(--text-primary)] mb-3\">\n                    {activeTab === 'contact' \n                      ? t(\"Votre message\", \"Your message\")\n                      : t(\"Décrivez vos besoins spécifiques\", \"Describe your specific needs\")\n                    } *\n                  </label>\n                  <textarea\n                    name=\"message\"\n                    value={formData.message}\n                    onChange={handleInputChange}\n                    required\n                    rows={6}\n                    className=\"w-full px-4 py-4 bg-[var(--background)] border border-[var(--border)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:border-[var(--primary)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]/20 transition-colors resize-none\"\n                    placeholder={activeTab === 'contact' \n                      ? t(\"Bonjour, j'aimerais en savoir plus sur SAMEATS...\", \"Hello, I would like to know more about SAMEATS...\")\n                      : t(\"Décrivez votre situation actuelle, vos objectifs, défis particuliers...\", \"Describe your current situation, objectives, specific challenges...\")\n                    }\n                  />\n                </div>\n\n                {/* RGPD Consent */}\n                <div className=\"p-6 bg-[var(--background)]/50 rounded-2xl border border-[var(--border)]\">\n                  <label className=\"flex items-start space-x-4\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"rgpdConsent\"\n                      checked={formData.rgpdConsent}\n                      onChange={handleInputChange}\n                      required\n                      className=\"w-6 h-6 text-[var(--primary)] border-[var(--border)] rounded focus:ring-[var(--primary)] mt-1 flex-shrink-0\"\n                    />\n                    <span className=\"text-sm text-[var(--text-secondary)] leading-relaxed\">\n                      {t(\n                        \"J'accepte que mes données personnelles soient utilisées pour me recontacter dans le cadre de ma demande. Conformément au RGPD, vous pouvez exercer vos droits d'accès, de rectification et de suppression en nous contactant à privacy@sameats.com.\",\n                        \"I accept that my personal data be used to contact me regarding my request. In accordance with GDPR, you can exercise your rights of access, rectification and deletion by contacting us at privacy@sameats.com.\"\n                      )}\n                    </span>\n                  </label>\n                </div>\n\n                {/* Submit button */}\n                <div className=\"text-center pt-4\">\n                  <button\n                    type=\"submit\"\n                    disabled={isSubmitting || !formData.rgpdConsent}\n                    className=\"interactive-button text-lg px-12 py-4 rounded-2xl font-semibold group relative overflow-hidden disabled:opacity-50 disabled:cursor-not-allowed text-white shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 focus-ring\"\n                  >\n                    <span className=\"flex items-center justify-center space-x-3 relative z-10\">\n                      {isSubmitting ? (\n                        <>\n                          <i className=\"fas fa-spinner fa-spin\"></i>\n                          <span>{t(\"Envoi en cours...\", \"Sending...\")}</span>\n                        </>\n                      ) : (\n                        <>\n                          <i className={activeTab === 'contact' ? \"fas fa-paper-plane\" : \"fas fa-calculator\"}></i>\n                          <span>\n                            {activeTab === 'contact' \n                              ? t(\"Envoyer le message\", \"Send message\")\n                              : t(\"Recevoir mon devis\", \"Get my quote\")\n                            }\n                          </span>\n                          <i className=\"fas fa-arrow-right group-hover:translate-x-1 transition-transform\"></i>\n                        </>\n                      )}\n                    </span>\n                  </button>\n                  \n                  {/* Submit message */}\n                  {submitMessage && (\n                    <div className={`mt-6 p-4 rounded-xl text-center font-medium bounce-in ${\n                      submitMessage.includes('Merci') || submitMessage.includes('Thank') \n                        ? 'bg-green-50 dark:bg-green-900/20 text-green-700 dark:text-green-400 border border-green-200 dark:border-green-700' \n                        : 'bg-red-50 dark:bg-red-900/20 text-red-700 dark:text-red-400 border border-red-200 dark:border-red-700'\n                    }`}>\n                      <i className={`fas ${submitMessage.includes('Merci') || submitMessage.includes('Thank') ? 'fa-check-circle' : 'fa-exclamation-triangle'} mr-2`}></i>\n                      {submitMessage}\n                    </div>\n                  )}\n                  \n                  <p className=\"text-[var(--text-muted)] text-sm mt-4\">\n                    {activeTab === 'contact' \n                      ? t(\"Réponse garantie sous 2 heures\", \"Response guaranteed within 2 hours\")\n                      : t(\"Devis détaillé envoyé sous 24 heures\", \"Detailed quote sent within 24 hours\")\n                    }\n                  </p>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Quick Access */}\n      <section className=\"py-16 bg-[var(--background)] border-t border-[var(--border)]\">\n        <div className=\"container mx-auto px-4 md:px-6\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-2xl md:text-3xl font-bold text-[var(--text-primary)] mb-4\">\n              {t(\"Questions fréquentes\", \"Frequently asked questions\")}\n            </h2>\n            <p className=\"text-[var(--text-secondary)] mb-8\">\n              {t(\"Trouvez rapidement des réponses à vos questions\", \"Quickly find answers to your questions\")}\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {[\n              {\n                question: t(\"Quel est le délai de mise en service ?\", \"What is the setup time?\"),\n                answer: t(\"En moyenne 2-3 semaines\", \"Average 2-3 weeks\"),\n                icon: \"fas fa-clock\"\n              },\n              {\n                question: t(\"Y a-t-il des frais cachés ?\", \"Are there hidden fees?\"),\n                answer: t(\"Tarification 100% transparente\", \"100% transparent pricing\"),\n                icon: \"fas fa-euro-sign\"\n              },\n              {\n                question: t(\"Le support est-il inclus ?\", \"Is support included?\"),\n                answer: t(\"Support 24/7 inclus\", \"24/7 support included\"),\n                icon: \"fas fa-headset\"\n              },\n              {\n                question: t(\"Puis-je essayer avant d'acheter ?\", \"Can I try before buying?\"),\n                answer: t(\"Démo gratuite disponible\", \"Free demo available\"),\n                icon: \"fas fa-play-circle\"\n              },\n              {\n                question: t(\"Que se passe-t-il si je change d'avis ?\", \"What if I change my mind?\"),\n                answer: t(\"Garantie satisfait ou remboursé 30j\", \"30-day money-back guarantee\"),\n                icon: \"fas fa-shield-alt\"\n              },\n              {\n                question: t(\"Mes données sont-elles sécurisées ?\", \"Is my data secure?\"),\n                answer: t(\"Conformité RGPD et sécurité bancaire\", \"GDPR compliance and banking security\"),\n                icon: \"fas fa-lock\"\n              }\n            ].map((faq, index) => (\n              <div\n                key={index}\n                className=\"modern-card p-6 text-center hover:shadow-lg transition-all duration-300\"\n              >\n                <div className=\"w-12 h-12 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <i className={`${faq.icon} text-white`}></i>\n                </div>\n                <h4 className=\"font-semibold text-[var(--text-primary)] mb-2 text-sm\">\n                  {faq.question}\n                </h4>\n                <p className=\"text-[var(--text-secondary)] text-sm\">\n                  {faq.answer}\n                </p>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <button className=\"btn-primary px-8 py-3\">\n              {t(\"Voir toutes les FAQ\", \"View all FAQs\")}\n            </button>\n          </div>\n        </div>\n      </section>\n\n      <ModernFooter />\n    </div>\n  );\n}","size_bytes":35446},"client/src/pages/features.tsx":{"content":"import { ModernNavigation } from \"@/components/modern-navigation\";\nimport { ModernFeaturesAdvanced } from \"@/components/modern-features-advanced\";\nimport { ModernIntegrations } from \"@/components/modern-integrations\";\nimport { ModernFooter } from \"@/components/modern-footer\";\nimport { SEOHead } from \"@/components/seo-head\";\nimport { useLanguage } from \"@/components/language-provider\";\n\nexport function FeaturesPage() {\n  const { t, language } = useLanguage();\n\n  return (\n    <div className=\"min-h-screen bg-[var(--background)] text-[var(--text-primary)]\">\n      <SEOHead\n        title={t(\n          \"Fonctionnalités SAMEATS - Solution Complète pour Restaurants\",\n          \"SAMEATS Features - Complete Restaurant Solution\"\n        )}\n        description={t(\n          \"Découvrez toutes les fonctionnalités de SAMEATS : applications mobiles, site web, back-office, intégrations et bien plus pour digitaliser votre restaurant.\",\n          \"Discover all SAMEATS features: mobile apps, website, back-office, integrations and more to digitize your restaurant.\"\n        )}\n      />\n      \n      <ModernNavigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-32 pb-20 relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-[var(--background)] via-[var(--surface)]/30 to-[var(--background)]\"></div>\n        <div className=\"absolute inset-0 dot-pattern opacity-40\"></div>\n        \n        <div className=\"container mx-auto px-4 md:px-6 relative\">\n          <div className=\"text-center animate-fade-in-up\">\n            <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)] border border-[var(--border)] rounded-full mb-6\">\n              <i className=\"fas fa-cogs text-[var(--primary)] mr-2\"></i>\n              <span className=\"text-sm text-[var(--text-secondary)]\">\n                {t(\"Fonctionnalités complètes\", \"Complete features\")}\n              </span>\n            </div>\n            \n            <h1 className=\"text-5xl md:text-7xl font-bold mb-6\">\n              <span className=\"text-[var(--text-primary)]\">\n                {t(\"Tout ce dont vous\", \"Everything you\")}\n              </span>\n              <br />\n              <span className=\"gradient-text-modern\">\n                {t(\"avez besoin\", \"need\")}\n              </span>\n            </h1>\n            \n            <p className=\"text-xl text-[var(--text-secondary)] max-w-4xl mx-auto mb-8\">\n              {t(\n                \"SAMEATS vous offre une solution complète pour digitaliser votre restaurant : applications mobiles, site web professionnel, back-office intelligent et des centaines d'intégrations.\",\n                \"SAMEATS offers you a complete solution to digitize your restaurant: mobile applications, professional website, smart back-office and hundreds of integrations.\"\n              )}\n            </p>\n            \n            <div className=\"flex flex-wrap justify-center gap-4\">\n              <button className=\"inline-flex items-center px-8 py-4 bg-gradient-to-r from-[var(--primary)] to-[var(--accent)] text-white font-semibold rounded-xl hover:shadow-xl transform hover:scale-105 transition-all duration-300\">\n                <i className=\"fas fa-rocket mr-2\"></i>\n                <span>{t(\"Commencer maintenant\", \"Start now\")}</span>\n              </button>\n              <button className=\"inline-flex items-center px-8 py-4 bg-[var(--surface)] text-[var(--text-primary)] font-semibold rounded-xl hover:bg-[var(--surface-light)] transition-all duration-300\">\n                <i className=\"fas fa-play mr-2\"></i>\n                <span>{t(\"Voir la démo\", \"Watch demo\")}</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <ModernFeaturesAdvanced />\n      <ModernIntegrations />\n      <ModernFooter />\n    </div>\n  );\n}","size_bytes":3836},"client/src/pages/home.tsx":{"content":"import { ModernNavigation } from \"@/components/modern-navigation\";\nimport { ModernHero } from \"@/components/modern-hero\";\nimport { ModernFeaturesAdvanced } from \"@/components/modern-features-advanced\";\nimport { ModernClientGallery } from \"@/components/modern-client-gallery\";\nimport { ModernTestimonials } from \"@/components/modern-testimonials\";\nimport { ModernPricingSection } from \"@/components/modern-pricing-section\";\nimport { ModernQuoteSection } from \"@/components/modern-quote-section\";\nimport { ModernFooter } from \"@/components/modern-footer\";\nimport { SEOHead, generateOrganizationSchema } from \"@/components/seo-head\";\nimport { useLanguage } from \"@/components/language-provider\";\n\nexport default function Home() {\n  const { t, language } = useLanguage();\n  \n  return (\n    <div className=\"min-h-screen bg-[var(--background)] text-[var(--text-primary)] font-inter overflow-x-hidden mobile-text-optimize\">\n      <SEOHead\n        title={t(\n          \"SAMEATS - Solution complète de commande en ligne pour restaurants\",\n          \"SAMEATS - Complete online ordering solution for restaurants\"\n        )}\n        description={t(\n          \"Digitalisez votre restaurant avec SAMEATS : site web, applications mobiles et back-office. 0% commission, installation 500€, support 24/7. Plus de 500 restaurants nous font confiance.\",\n          \"Digitize your restaurant with SAMEATS: website, mobile apps and back-office. 0% commission, €500 setup, 24/7 support. Over 500 restaurants trust us.\"\n        )}\n        keywords={t(\n          \"restaurant en ligne, commande restaurant, site web restaurant, application restaurant, digitalisation restaurant, sans commission\",\n          \"restaurant online, restaurant ordering, restaurant website, restaurant app, restaurant digitization, no commission\"\n        )}\n        structuredData={generateOrganizationSchema(language)}\n      />\n      \n      <ModernNavigation />\n      <ModernHero />\n      <ModernFeaturesAdvanced />\n      <ModernClientGallery />\n      <ModernTestimonials />\n      <ModernPricingSection />\n      <ModernQuoteSection />\n      <ModernFooter />\n    </div>\n  );\n}\n","size_bytes":2131},"client/src/pages/modern-features.tsx":{"content":"import { ModernNavigation } from \"@/components/modern-navigation\";\nimport { ModernFeaturesGrid } from \"@/components/modern-features-grid\";\nimport { ModernFooter } from \"@/components/modern-footer\";\nimport { SEOHead } from \"@/components/seo-head\";\nimport { useLanguage } from \"@/components/language-provider\";\n\nexport default function ModernFeatures() {\n  const { t } = useLanguage();\n\n  const advancedFeatures = [\n    {\n      category: t(\"Site Web\", \"Website\"),\n      features: [\n        {\n          icon: \"fas fa-palette\",\n          title: t(\"Design Personnalisé\", \"Custom Design\"),\n          description: t(\"Interface adaptée à votre marque et vos couleurs\", \"Interface adapted to your brand and colors\")\n        },\n        {\n          icon: \"fas fa-mobile-alt\",\n          title: t(\"Mobile First\", \"Mobile First\"),\n          description: t(\"Optimisé pour tous les appareils mobiles et tablettes\", \"Optimized for all mobile devices and tablets\")\n        },\n        {\n          icon: \"fas fa-search\",\n          title: t(\"SEO Optimisé\", \"SEO Optimized\"),\n          description: t(\"Référencement naturel pour être trouvé facilement\", \"Natural SEO to be found easily\")\n        }\n      ]\n    },\n    {\n      category: t(\"Applications\", \"Applications\"),\n      features: [\n        {\n          icon: \"fab fa-apple\",\n          title: t(\"iOS Natif\", \"Native iOS\"),\n          description: t(\"Application native pour iPhone et iPad\", \"Native app for iPhone and iPad\")\n        },\n        {\n          icon: \"fab fa-android\",\n          title: t(\"Android Natif\", \"Native Android\"),\n          description: t(\"Application native pour tous les appareils Android\", \"Native app for all Android devices\")\n        },\n        {\n          icon: \"fas fa-bell\",\n          title: t(\"Notifications Push\", \"Push Notifications\"),\n          description: t(\"Notifications automatiques pour fidéliser vos clients\", \"Automatic notifications to retain your customers\")\n        }\n      ]\n    },\n    {\n      category: t(\"Gestion\", \"Management\"),\n      features: [\n        {\n          icon: \"fas fa-chart-line\",\n          title: t(\"Analytics Avancés\", \"Advanced Analytics\"),\n          description: t(\"Suivi détaillé des ventes et du comportement client\", \"Detailed tracking of sales and customer behavior\")\n        },\n        {\n          icon: \"fas fa-users\",\n          title: t(\"Gestion d'Équipe\", \"Team Management\"),\n          description: t(\"Comptes multiples avec niveaux d'accès personnalisés\", \"Multiple accounts with custom access levels\")\n        },\n        {\n          icon: \"fas fa-cog\",\n          title: t(\"Automatisation\", \"Automation\"),\n          description: t(\"Processus automatisés pour gagner du temps\", \"Automated processes to save time\")\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-[var(--background)] text-[var(--text-primary)] font-inter\">\n      <SEOHead\n        title={t(\n          \"Fonctionnalités SAMEATS - Solution complète restaurant\",\n          \"SAMEATS Features - Complete restaurant solution\"\n        )}\n        description={t(\n          \"Découvrez toutes les fonctionnalités SAMEATS : site web, apps mobiles, back-office, analytics, gestion livraison. Solution complète 0% commission.\",\n          \"Discover all SAMEATS features: website, mobile apps, back-office, analytics, delivery management. Complete 0% commission solution.\"\n        )}\n        keywords={t(\n          \"fonctionnalités restaurant, site web restaurant, app mobile restaurant, back-office restaurant, analytics restaurant\",\n          \"restaurant features, restaurant website, restaurant mobile app, restaurant back-office, restaurant analytics\"\n        )}\n      />\n      \n      <ModernNavigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-32 pb-16 relative overflow-hidden\">\n        <div className=\"absolute inset-0 line-pattern\"></div>\n        \n        <div className=\"container mx-auto px-4 md:px-6 relative\">\n          <div className=\"text-center mb-16 animate-fade-in-up\">\n            <div className=\"inline-flex items-center px-4 py-2 bg-[var(--surface)]/50 backdrop-blur-sm border border-[var(--border)] rounded-full mb-6\">\n              <i className=\"fas fa-rocket text-[var(--primary)] mr-2\"></i>\n              <span className=\"text-sm text-[var(--text-secondary)]\">\n                {t(\"Fonctionnalités avancées\", \"Advanced features\")}\n              </span>\n            </div>\n            \n            <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">\n              <span className=\"text-[var(--text-primary)]\">\n                {t(\"Toutes les fonctionnalités\", \"All the features\")}\n              </span>\n              <br />\n              <span className=\"gradient-text-modern\">\n                {t(\"pour réussir\", \"you need to succeed\")}\n              </span>\n            </h1>\n            \n            <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto leading-relaxed\">\n              {t(\n                \"Une solution complète qui inclut tout ce dont votre restaurant a besoin pour prospérer dans le digital\",\n                \"A complete solution that includes everything your restaurant needs to thrive in digital\"\n              )}\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Features Grid */}\n      <ModernFeaturesGrid />\n\n      {/* Advanced Features by Category */}\n      <section className=\"py-24 relative\">\n        <div className=\"absolute inset-0 bg-[var(--surface)]/30\"></div>\n        \n        <div className=\"container mx-auto px-4 md:px-6 relative\">\n          <div className=\"text-center mb-16 animate-fade-in-up\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">\n              <span className=\"gradient-text-modern\">\n                {t(\"Fonctionnalités détaillées\", \"Detailed features\")}\n              </span>\n            </h2>\n            <p className=\"text-xl text-[var(--text-secondary)] max-w-3xl mx-auto\">\n              {t(\n                \"Découvrez en détail toutes les capacités de la plateforme SAMEATS\",\n                \"Discover in detail all the capabilities of the SAMEATS platform\"\n              )}\n            </p>\n          </div>\n\n          <div className=\"space-y-20\">\n            {advancedFeatures.map((category, categoryIndex) => (\n              <div key={categoryIndex} className=\"animate-fade-in-up\" style={{ animationDelay: `${categoryIndex * 200}ms` }}>\n                <h3 className=\"text-2xl font-bold text-[var(--text-primary)] mb-8 text-center\">\n                  {category.category}\n                </h3>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n                  {category.features.map((feature, featureIndex) => (\n                    <div\n                      key={featureIndex}\n                      className=\"modern-card p-6 text-center group\"\n                      style={{ animationDelay: `${(categoryIndex * 3 + featureIndex) * 100}ms` }}\n                    >\n                      <div className=\"w-16 h-16 bg-gradient-to-br from-[var(--primary)] to-[var(--accent)] rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                        <i className={`${feature.icon} text-2xl text-white`}></i>\n                      </div>\n                      <h4 className=\"text-lg font-semibold text-[var(--text-primary)] mb-3\">\n                        {feature.title}\n                      </h4>\n                      <p className=\"text-[var(--text-secondary)] leading-relaxed\">\n                        {feature.description}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 relative\">\n        <div className=\"container mx-auto px-4 md:px-6\">\n          <div className=\"max-w-4xl mx-auto text-center animate-fade-in-up\">\n            <div className=\"modern-card p-12\">\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">\n                <span className=\"gradient-text-modern\">\n                  {t(\"Prêt à découvrir SAMEATS ?\", \"Ready to discover SAMEATS?\")}\n                </span>\n              </h2>\n              <p className=\"text-xl text-[var(--text-secondary)] mb-8 leading-relaxed\">\n                {t(\n                  \"Demandez une démonstration personnalisée et voyez comment SAMEATS peut transformer votre restaurant\",\n                  \"Request a personalized demo and see how SAMEATS can transform your restaurant\"\n                )}\n              </p>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <button className=\"btn-modern-primary text-lg\">\n                  <i className=\"fas fa-play mr-2\"></i>\n                  {t(\"Voir la démonstration\", \"Watch demo\")}\n                </button>\n                <button className=\"btn-modern-secondary text-lg\">\n                  <i className=\"fas fa-calendar mr-2\"></i>\n                  {t(\"Programmer un appel\", \"Schedule a call\")}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <ModernFooter />\n    </div>\n  );\n}","size_bytes":9317},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/pricing.tsx":{"content":"import { ModernNavigation } from \"@/components/modern-navigation\";\nimport { ModernPricingSection } from \"@/components/modern-pricing-section\";\nimport { ModernFooter } from \"@/components/modern-footer\";\nimport { SEOHead, generateFAQSchema } from \"@/components/seo-head\";\nimport { useLanguage } from \"@/components/language-provider\";\n\nexport default function Pricing() {\n  const { t, language } = useLanguage();\n\n  const plans = [\n    {\n      name: \"Start\",\n      price: \"69\",\n      description: t(\"Parfait pour débuter\", \"Perfect to get started\"),\n      features: [\n        t(\"Site web de commande\", \"Ordering website\"),\n        t(\"Applications mobiles\", \"Mobile apps\"),\n        t(\"Back-office de base\", \"Basic back-office\"),\n        t(\"Paiements sécurisés\", \"Secure payments\"),\n        t(\"Support email\", \"Email support\"),\n        t(\"Jusqu'à 100 commandes/mois\", \"Up to 100 orders/month\")\n      ],\n      highlight: false,\n      ctaText: t(\"Commencer\", \"Get started\"),\n      popular: false\n    },\n    {\n      name: \"Grow\",\n      price: \"119\",\n      description: t(\"Idéal pour développer\", \"Ideal for growth\"),\n      features: [\n        t(\"Tout de Start\", \"Everything in Start\"),\n        t(\"Programmes de fidélité\", \"Loyalty programs\"),\n        t(\"Marketing automatisé\", \"Automated marketing\"),\n        t(\"Analytics avancées\", \"Advanced analytics\"),\n        t(\"Support prioritaire\", \"Priority support\"),\n        t(\"Intégrations tierces\", \"Third-party integrations\"),\n        t(\"Jusqu'à 500 commandes/mois\", \"Up to 500 orders/month\"),\n        t(\"Notifications push illimitées\", \"Unlimited push notifications\")\n      ],\n      highlight: true,\n      ctaText: t(\"Le plus populaire\", \"Most popular\"),\n      popular: true\n    },\n    {\n      name: \"Pro\",\n      price: \"199\",\n      description: t(\"Pour les restaurants établis\", \"For established restaurants\"),\n      features: [\n        t(\"Tout de Grow\", \"Everything in Grow\"),\n        t(\"Multi-établissements\", \"Multi-location\"),\n        t(\"API personnalisée\", \"Custom API\"),\n        t(\"Formation dédiée\", \"Dedicated training\"),\n        t(\"Support téléphonique\", \"Phone support\"),\n        t(\"Rapports personnalisés\", \"Custom reports\"),\n        t(\"Commandes illimitées\", \"Unlimited orders\"),\n        t(\"Domaine personnalisé\", \"Custom domain\"),\n        t(\"White-label complet\", \"Complete white-label\")\n      ],\n      highlight: false,\n      ctaText: t(\"Choisir Pro\", \"Choose Pro\"),\n      popular: false\n    }\n  ];\n\n  const faqs = [\n    {\n      question: t(\"Qu'est-ce qui est inclus dans l'installation ?\", \"What is included in the setup?\"),\n      answer: t(\n        \"L'installation inclut la création de votre site web, la configuration de vos applications mobiles, l'importation de votre menu, la formation de votre équipe et la mise en ligne complète.\",\n        \"The setup includes creating your website, configuring your mobile apps, importing your menu, training your team, and complete go-live.\"\n      )\n    },\n    {\n      question: t(\"Puis-je changer de plan à tout moment ?\", \"Can I change plans at any time?\"),\n      answer: t(\n        \"Oui, vous pouvez upgrader ou downgrader votre plan à tout moment. Les changements prennent effet le mois suivant.\",\n        \"Yes, you can upgrade or downgrade your plan at any time. Changes take effect the following month.\"\n      )\n    },\n    {\n      question: t(\"Y a-t-il des frais de commission ?\", \"Are there commission fees?\"),\n      answer: t(\n        \"Non, SAMEATS ne prend aucune commission sur vos ventes. Vous gardez 100% de vos revenus.\",\n        \"No, SAMEATS takes no commission on your sales. You keep 100% of your revenue.\"\n      )\n    },\n    {\n      question: t(\"Combien de temps prend l'installation ?\", \"How long does setup take?\"),\n      answer: t(\n        \"L'installation complète prend généralement 5-7 jours ouvrés. Nous nous occupons de tout pour que vous puissiez vous concentrer sur votre restaurant.\",\n        \"Complete setup typically takes 5-7 business days. We handle everything so you can focus on your restaurant.\"\n      )\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-[var(--background)] text-[var(--text-primary)] font-inter\">\n      <SEOHead\n        title={t(\n          \"Tarifs SAMEATS - Plans transparents sans commission\",\n          \"SAMEATS Pricing - Transparent plans without commission\"\n        )}\n        description={t(\n          \"Découvrez nos tarifs transparents : Start 69€, Grow 119€, Pro 199€. Installation 500€, 1 mois gratuit, 0% commission. Support 24/7 inclus.\",\n          \"Discover our transparent pricing: Start €69, Grow €119, Pro €199. €500 setup, 1 month free, 0% commission. 24/7 support included.\"\n        )}\n        keywords={t(\n          \"tarifs restaurant, prix solution restaurant, abonnement restaurant, sans commission\",\n          \"restaurant pricing, restaurant solution price, restaurant subscription, no commission\"\n        )}\n        structuredData={generateFAQSchema(faqs)}\n      />\n      <ModernNavigation />\n      <div className=\"pt-20\">\n        <ModernPricingSection />\n      </div>\n      <ModernFooter />\n    </div>\n  );\n}","size_bytes":5137},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/utils/scroll.ts":{"content":"// Utility functions for smooth scrolling to sections\nexport const scrollToSection = (sectionId: string) => {\n  const element = document.getElementById(sectionId);\n  if (element) {\n    element.scrollIntoView({ \n      behavior: 'smooth',\n      block: 'start'\n    });\n  }\n};\n\nexport const scrollToContact = () => scrollToSection('contact');\nexport const scrollToPricing = () => scrollToSection('pricing');\nexport const scrollToFeatures = () => scrollToSection('features');\nexport const scrollToDemo = () => scrollToSection('demo');\nexport const scrollToAbout = () => scrollToSection('about');","size_bytes":590}}}